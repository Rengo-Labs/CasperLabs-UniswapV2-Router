{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0","program":"/home/bassam/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","lmdb","/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e227d006f61a6ea1","-C","extra-filename=-e227d006f61a6ea1","--out-dir","/home/bassam/SCY_TASKS/UniSwapV2Library/target/rls/debug/deps","-L","dependency=/home/bassam/SCY_TASKS/UniSwapV2Library/target/rls/debug/deps","--extern","bitflags=/home/bassam/SCY_TASKS/UniSwapV2Library/target/rls/debug/deps/libbitflags-6ba84bfc7f94cddb.rmeta","--extern","libc=/home/bassam/SCY_TASKS/UniSwapV2Library/target/rls/debug/deps/liblibc-dcc1f63e81406443.rmeta","--extern","lmdb_sys=/home/bassam/SCY_TASKS/UniSwapV2Library/target/rls/debug/deps/liblmdb_sys-8f984d0c5105ba59.rmeta","--cap-lints","allow","-L","native=/home/bassam/SCY_TASKS/UniSwapV2Library/target/rls/debug/build/lmdb-sys-a8f90d34a92123c2/out","--error-format=json","--sysroot","/home/bassam/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu"],"output":"/home/bassam/SCY_TASKS/UniSwapV2Library/target/rls/debug/deps/liblmdb-e227d006f61a6ea1.rmeta"},"prelude":{"crate_id":{"name":"lmdb","disambiguator":[10359159681407309610,13070089757912449562]},"crate_root":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src","external_crates":[{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10283585399922801530,3113815793436671734]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4001252548733048619,17242313319436819942]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5352780060018682353,5212160423076132458]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17147711338457548981,6939542792032145917]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2842547253401849104,13491194742958542480]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[743652736616489669,1287960927584068912]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16292678807852148020,5791869870655771082]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[9404817637945341771,5464406936793117880]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17888196348013287212,15275907588461469564]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1276787031323089283,14926302036319710225]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[3988411805964943353,12607049771423756955]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[2565427104194196404,14362732384292144629]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[11025534897254923617,14932093111515565771]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[6421578182970509025,18151391361782090522]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[6900026989174100552,1126691905217298232]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":19,"id":{"name":"libc","disambiguator":[11669307930940506752,4205052304647662666]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":20,"id":{"name":"lmdb_sys","disambiguator":[17861557025972495562,13149977457347865190]}},{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","num":21,"id":{"name":"bitflags","disambiguator":[1380782603365375529,11222440694920492806]}}],"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":0,"byte_end":3186,"line_start":1,"line_end":123,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":445,"byte_end":451,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":457,"byte_end":465,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"RoCursor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":471,"byte_end":479,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"alias_span":null,"name":"RwCursor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":485,"byte_end":489,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":495,"byte_end":502,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"alias_span":null,"name":"IterDup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":869},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":525,"byte_end":533,"line_start":23,"line_end":23,"column_start":19,"column_end":27},"alias_span":null,"name":"Database","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":289},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":557,"byte_end":568,"line_start":24,"line_end":24,"column_start":23,"column_end":34},"alias_span":null,"name":"Environment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":570,"byte_end":574,"line_start":24,"line_end":24,"column_start":36,"column_end":40},"alias_span":null,"name":"Stat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":883},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":576,"byte_end":594,"line_start":24,"line_end":24,"column_start":42,"column_end":60},"alias_span":null,"name":"EnvironmentBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":900},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":613,"byte_end":618,"line_start":25,"line_end":25,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":620,"byte_end":626,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":644,"byte_end":645,"line_start":26,"line_end":26,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":461},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":674,"byte_end":693,"line_start":28,"line_end":28,"column_start":5,"column_end":24},"alias_span":null,"name":"InactiveTransaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":699,"byte_end":712,"line_start":29,"line_end":29,"column_start":5,"column_end":18},"alias_span":null,"name":"RoTransaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":474},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":718,"byte_end":731,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"alias_span":null,"name":"RwTransaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":737,"byte_end":748,"line_start":31,"line_end":31,"column_start":5,"column_end":16},"alias_span":null,"name":"Transaction","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":0,"byte_end":3186,"line_start":1,"line_end":123,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":58},{"krate":0,"index":63},{"krate":0,"index":200},{"krate":0,"index":226},{"krate":0,"index":331},{"krate":0,"index":367}],"decl_id":null,"docs":" Idiomatic and safe APIs for interacting with the\n [Lightning Memory-mapped Database (LMDB)](https://symas.com/lmdb).\n","sig":null,"attributes":[{"value":"/ Idiomatic and safe APIs for interacting with the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":0,"byte_end":52,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/ [Lightning Memory-mapped Database (LMDB)](https://symas.com/lmdb).","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":53,"byte_end":123,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"deny(missing_docs)","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/lib.rs","byte_start":159,"byte_end":181,"line_start":5,"line_end":5,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":3304,"byte_end":3320,"line_start":8,"line_end":8,"column_start":16,"column_end":32},"name":"EnvironmentFlags","qualname":"::flags::EnvironmentFlags","value":"EnvironmentFlags {  }","parent":null,"children":[{"krate":0,"index":510}],"decl_id":null,"docs":"Environment options.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":552},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":3957,"byte_end":3966,"line_start":17,"line_end":17,"column_start":15,"column_end":24},"name":"FIXED_MAP","qualname":"::flags::EnvironmentFlags::FIXED_MAP","value":"Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"Use a fixed address for the mmap region. This flag must be specified\nwhen creating the environment, and is stored persistently in the environment.\nIf successful, the memory map will always reside at the same virtual address\nand pointers used to reference data items in the database will be constant\nacross multiple invocations. This option may not always work, depending on\nhow the operating system has allocated memory to shared libraries and other uses.\nThe feature is highly experimental.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":553},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":4347,"byte_end":4357,"line_start":23,"line_end":23,"column_start":15,"column_end":25},"name":"NO_SUB_DIR","qualname":"::flags::EnvironmentFlags::NO_SUB_DIR","value":"Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"By default, LMDB creates its environment in a directory whose pathname is given in\n`path`, and creates its data and lock files under that directory. With this option,\n`path` is used as-is for the database main data file. The database lock file is the\n`path` with `-lock` appended.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":554},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":4801,"byte_end":4810,"line_start":30,"line_end":30,"column_start":15,"column_end":24},"name":"WRITE_MAP","qualname":"::flags::EnvironmentFlags::WRITE_MAP","value":"Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"Use a writeable memory map unless `READ_ONLY` is set. This is faster and uses\nfewer mallocs, but loses protection from application bugs like wild pointer writes\nand other bad updates into the database. Incompatible with nested transactions.\nProcesses with and without `WRITE_MAP` on the same environment do not cooperate\nwell.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":555},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":5102,"byte_end":5111,"line_start":35,"line_end":35,"column_start":15,"column_end":24},"name":"READ_ONLY","qualname":"::flags::EnvironmentFlags::READ_ONLY","value":"Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"Open the environment in read-only mode. No write operations will be allowed.\nWhen opening an environment, LMDB will still modify the lock file - except on\nread-only filesystems, where LMDB does not use locks.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":556},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":5715,"byte_end":5727,"line_start":43,"line_end":43,"column_start":15,"column_end":27},"name":"NO_META_SYNC","qualname":"::flags::EnvironmentFlags::NO_META_SYNC","value":"Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"Flush system buffers to disk only once per transaction, omit the metadata flush.\nDefer that until the system flushes files to disk, or next non-`READ_ONLY` commit\nor `Environment::sync`. This optimization maintains database integrity, but a\nsystem crash may undo the last committed transaction. I.e. it preserves the ACI\n(atomicity, consistency, isolation) but not D (durability) database property.\nThis flag may be changed at any time using `Environment::set_flags`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":557},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":6809,"byte_end":6816,"line_start":56,"line_end":56,"column_start":15,"column_end":22},"name":"NO_SYNC","qualname":"::flags::EnvironmentFlags::NO_SYNC","value":"Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"Don't flush system buffers to disk when committing a transaction. This optimization\nmeans a system crash can corrupt the database or lose the last transactions if\nbuffers are not yet flushed to disk. The risk is governed by how often the system\nflushes dirty buffers to disk and how often `Environment::sync` is called. However,\nif the filesystem preserves write order and the `WRITE_MAP` flag is not used,\ntransactions exhibit ACI (atomicity, consistency, isolation) properties and only\nlose D (durability). I.e. database integrity is maintained, but a system\ncrash may undo the final transactions. Note that (`NO_SYNC | WRITE_MAP`) leaves the\nsystem with no hint for when to write transactions to disk, unless\n`Environment::sync` is called. (`MAP_ASYNC | WRITE_MAP`) may be preferable.\nThis flag may be changed at any time using `Environment::set_flags`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":558},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":7222,"byte_end":7231,"line_start":62,"line_end":62,"column_start":15,"column_end":24},"name":"MAP_ASYNC","qualname":"::flags::EnvironmentFlags::MAP_ASYNC","value":"Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"When using `WRITE_MAP`, use asynchronous flushes to disk. As with `NO_SYNC`, a\nsystem crash can then corrupt the database or lose the last transactions. Calling\n`Environment::sync` ensures on-disk database integrity until next commit.\nThis flag may be changed at any time using `Environment::set_flags`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":559},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":8003,"byte_end":8009,"line_start":72,"line_end":72,"column_start":15,"column_end":21},"name":"NO_TLS","qualname":"::flags::EnvironmentFlags::NO_TLS","value":"Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"Don't use thread-local storage. Tie reader locktable slots to transaction objects\ninstead of to threads. I.e. `RoTransaction::reset` keeps the slot reserved for the\ntransaction object. A thread may use parallel read-only transactions. A read-only\ntransaction may span threads if the user synchronizes its use. Applications that\nmultiplex many the user synchronizes its use. Applications that multiplex many user\nthreads over individual OS threads need this option. Such an application must also\nserialize the write transactions in an OS thread, since LMDB's write locking is\nunaware of the user threads.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":560},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":8499,"byte_end":8506,"line_start":79,"line_end":79,"column_start":15,"column_end":22},"name":"NO_LOCK","qualname":"::flags::EnvironmentFlags::NO_LOCK","value":"Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"Do not do any locking. If concurrent access is anticipated, the caller must manage\nall concurrency themself. For proper operation the caller must enforce\nsingle-writer semantics, and must ensure that no readers are using old\ntransactions while a writer is active. The simplest approach is to use an exclusive\nlock so that no readers may be active at all when a writer begins.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":561},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":8887,"byte_end":8899,"line_start":85,"line_end":85,"column_start":15,"column_end":27},"name":"NO_READAHEAD","qualname":"::flags::EnvironmentFlags::NO_READAHEAD","value":"Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"Turn off readahead. Most operating systems perform readahead on read requests by\ndefault. This option turns it off if the OS supports it. Turning it off may help\nrandom read performance when the DB is larger than RAM and system RAM is full.\nThe option is not implemented on Windows.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":562},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":10342,"byte_end":10353,"line_start":102,"line_end":102,"column_start":15,"column_end":26},"name":"NO_MEM_INIT","qualname":"::flags::EnvironmentFlags::NO_MEM_INIT","value":"Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"Do not initialize malloc'd memory before writing to unused spaces in the data file.\nBy default, memory for pages written to the data file is obtained using malloc.\nWhile these pages may be reused in subsequent transactions, freshly malloc'd pages\nwill be initialized to zeroes before use. This avoids persisting leftover data from\nother code (that used the heap and subsequently freed the memory) into the data\nfile. Note that many other system libraries may allocate and free memory from the\nheap for arbitrary uses. E.g., stdio may use the heap for file I/O buffers. This\ninitialization step has a modest performance cost so some applications may want to\ndisable it using this flag. This option can be a problem for applications which\nhandle sensitive data like passwords, and it makes memory checkers like Valgrind\nnoisy. This flag is not needed with `WRITE_MAP`, which writes directly to the mmap\ninstead of using malloc for pages. The initialization is also skipped if writing\nwith reserve; the caller is expected to overwrite all of the memory that was\nreserved in that case.\nThis flag may be changed at any time using `Environment::set_flags`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":648},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":10461,"byte_end":10474,"line_start":109,"line_end":109,"column_start":16,"column_end":29},"name":"DatabaseFlags","qualname":"::flags::DatabaseFlags","value":"DatabaseFlags {  }","parent":null,"children":[{"krate":0,"index":649}],"decl_id":null,"docs":"Database options.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":686},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":10723,"byte_end":10734,"line_start":114,"line_end":114,"column_start":15,"column_end":26},"name":"REVERSE_KEY","qualname":"::flags::DatabaseFlags::REVERSE_KEY","value":"Self","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":"Keys are strings to be compared in reverse order, from the end of the strings\nto the beginning. By default, Keys are treated as strings and compared from\nbeginning to end.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":687},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":11023,"byte_end":11031,"line_start":119,"line_end":119,"column_start":15,"column_end":23},"name":"DUP_SORT","qualname":"::flags::DatabaseFlags::DUP_SORT","value":"Self","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":"Duplicate keys may be used in the database. (Or, from another perspective,\nkeys may have multiple data items, stored in sorted order.) By default\nkeys must be unique and may have only a single data item.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":688},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":11227,"byte_end":11238,"line_start":123,"line_end":123,"column_start":15,"column_end":26},"name":"INTEGER_KEY","qualname":"::flags::DatabaseFlags::INTEGER_KEY","value":"Self","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":"Keys are binary integers in native byte order. Setting this option requires all\nkeys to be the same size, typically 32 or 64 bits.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":689},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":11712,"byte_end":11721,"line_start":130,"line_end":130,"column_start":15,"column_end":24},"name":"DUP_FIXED","qualname":"::flags::DatabaseFlags::DUP_FIXED","value":"Self","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":"This flag may only be used in combination with `DUP_SORT`. This option tells\nthe library that the data items for this database are all the same size, which\nallows further optimizations in storage and retrieval. When all data items are\nthe same size, the `GET_MULTIPLE` and `NEXT_MULTIPLE` cursor operations may be\nused to retrieve multiple items at once.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":690},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":11884,"byte_end":11895,"line_start":134,"line_end":134,"column_start":15,"column_end":26},"name":"INTEGER_DUP","qualname":"::flags::DatabaseFlags::INTEGER_DUP","value":"Self","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":"This option specifies that duplicate data items are also integers, and\nshould be sorted as such.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":691},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":12059,"byte_end":12070,"line_start":138,"line_end":138,"column_start":15,"column_end":26},"name":"REVERSE_DUP","qualname":"::flags::DatabaseFlags::REVERSE_DUP","value":"Self","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":"This option specifies that duplicate data items should be compared as strings\nin reverse order.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":12176,"byte_end":12186,"line_start":145,"line_end":145,"column_start":16,"column_end":26},"name":"WriteFlags","qualname":"::flags::WriteFlags","value":"WriteFlags {  }","parent":null,"children":[{"krate":0,"index":763}],"decl_id":null,"docs":"Write options.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":799},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":12486,"byte_end":12498,"line_start":150,"line_end":150,"column_start":15,"column_end":27},"name":"NO_OVERWRITE","qualname":"::flags::WriteFlags::NO_OVERWRITE","value":"Self","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":"Insert the new item only if the key does not already appear in the database.\nThe function will return `LmdbError::KeyExist` if the key already appears in the\ndatabase, even if the database supports duplicates (`DUP_SORT`).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":800},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":12841,"byte_end":12852,"line_start":156,"line_end":156,"column_start":15,"column_end":26},"name":"NO_DUP_DATA","qualname":"::flags::WriteFlags::NO_DUP_DATA","value":"Self","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":"Insert the new item only if it does not already appear in the database.\nThis flag may only be specified if the database was opened with `DUP_SORT`.\nThe function will return `LmdbError::KeyExist` if the item already appears in the\ndatabase.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":801},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":13341,"byte_end":13348,"line_start":163,"line_end":163,"column_start":15,"column_end":22},"name":"CURRENT","qualname":"::flags::WriteFlags::CURRENT","value":"Self","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":"For `Cursor::put`. Replace the item at the current cursor position. The key\nparameter must match the current position. If using sorted duplicates (`DUP_SORT`)\nthe data item must still sort into the same position. This is intended to be used\nwhen the new data is the same size as the old. Otherwise it will simply perform a\ndelete of the old record followed by an insert.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":802},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":13672,"byte_end":13678,"line_start":168,"line_end":168,"column_start":15,"column_end":21},"name":"APPEND","qualname":"::flags::WriteFlags::APPEND","value":"Self","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":"Append the given item to the end of the database. No key comparisons are performed.\nThis option allows fast bulk loading when keys are already known to be in the\ncorrect order. Loading unsorted keys with this flag will cause data corruption.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":803},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/flags.rs","byte_start":13768,"byte_end":13778,"line_start":171,"line_end":171,"column_start":15,"column_end":25},"name":"APPEND_DUP","qualname":"::flags::WriteFlags::APPEND_DUP","value":"Self","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":"Same as `APPEND`, but for sorted dup data.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":112},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":14066,"byte_end":14072,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"Cursor","qualname":"::cursor::Cursor","value":"Cursor<'txn>","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124}],"decl_id":null,"docs":" An LMDB cursor.\n","sig":null,"attributes":[{"value":"/ An LMDB cursor.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":14036,"byte_end":14055,"line_start":11,"line_end":11,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":14264,"byte_end":14270,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"cursor","qualname":"::cursor::Cursor::cursor","value":"pub fn cursor(&Self) -> *mut ffi::MDB_cursor","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying LMDB cursor.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying LMDB cursor.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":14086,"byte_end":14142,"line_start":14,"line_end":14,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":14147,"byte_end":14150,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ The caller **must** ensure that the pointer is not used after the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":14155,"byte_end":14224,"line_start":16,"line_end":16,"column_start":5,"column_end":74}},{"value":"/ lifetime of the cursor.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":14229,"byte_end":14256,"line_start":17,"line_end":17,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":14431,"byte_end":14434,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"get","qualname":"::cursor::Cursor::get","value":"pub fn get(&Self, Option<&[u8]>, Option<&[u8]>, c_uint)\n-> Result<(Option<&'txn [u8]>, &'txn [u8])>","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Retrieves a key/data pair from the cursor. Depending on the cursor op,\n the current key may be returned.\n","sig":null,"attributes":[{"value":"/ Retrieves a key/data pair from the cursor. Depending on the cursor op,","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":14308,"byte_end":14382,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ the current key may be returned.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":14387,"byte_end":14423,"line_start":21,"line_end":21,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15475,"byte_end":15479,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"iter","qualname":"::cursor::Cursor::iter","value":"pub fn iter(&mut Self) -> Iter","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Iterate over database items. The iterator will begin with item next\n after the cursor, and continue until the end of the database. For new\n cursors, the iterator will begin with the first item in the database.","sig":null,"attributes":[{"value":"/ Iterate over database items. The iterator will begin with item next","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15051,"byte_end":15122,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ after the cursor, and continue until the end of the database. For new","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15127,"byte_end":15200,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ cursors, the iterator will begin with the first item in the database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15205,"byte_end":15278,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15283,"byte_end":15286,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ For databases with duplicate data items (`DatabaseFlags::DUP_SORT`), the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15291,"byte_end":15367,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ duplicate data items of each key will be returned before moving on to","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15372,"byte_end":15445,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ the next key.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15450,"byte_end":15467,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15854,"byte_end":15864,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"iter_start","qualname":"::cursor::Cursor::iter_start","value":"pub fn iter_start(&mut Self) -> Iter","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Iterate over database items starting from the beginning of the database.","sig":null,"attributes":[{"value":"/ Iterate over database items starting from the beginning of the database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15581,"byte_end":15657,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15662,"byte_end":15665,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ For databases with duplicate data items (`DatabaseFlags::DUP_SORT`), the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15670,"byte_end":15746,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/ duplicate data items of each key will be returned before moving on to","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15751,"byte_end":15824,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ the next key.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":15829,"byte_end":15846,"line_start":53,"line_end":53,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16285,"byte_end":16294,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"iter_from","qualname":"::cursor::Cursor::iter_from","value":"pub fn iter_from<K>(&mut Self, K) -> Iter where K: AsRef<[u8]>","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Iterate over database items starting from the given key.","sig":null,"attributes":[{"value":"/ Iterate over database items starting from the given key.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16028,"byte_end":16088,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16093,"byte_end":16096,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ For databases with duplicate data items (`DatabaseFlags::DUP_SORT`), the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16101,"byte_end":16177,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ duplicate data items of each key will be returned before moving on to","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16182,"byte_end":16255,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ the next key.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16260,"byte_end":16277,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16740,"byte_end":16748,"line_start":72,"line_end":72,"column_start":8,"column_end":16},"name":"iter_dup","qualname":"::cursor::Cursor::iter_dup","value":"pub fn iter_dup(&mut Self) -> IterDup","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Iterate over duplicate database items. The iterator will begin with the\n item next after the cursor, and continue until the end of the database.\n Each item will be returned as an iterator of its duplicates.\n","sig":null,"attributes":[{"value":"/ Iterate over duplicate database items. The iterator will begin with the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16508,"byte_end":16583,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ item next after the cursor, and continue until the end of the database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16588,"byte_end":16663,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ Each item will be returned as an iterator of its duplicates.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16668,"byte_end":16732,"line_start":71,"line_end":71,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":17004,"byte_end":17018,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"iter_dup_start","qualname":"::cursor::Cursor::iter_dup_start","value":"pub fn iter_dup_start(&mut Self) -> IterDup","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Iterate over duplicate database items starting from the beginning of the\n database. Each item will be returned as an iterator of its duplicates.\n","sig":null,"attributes":[{"value":"/ Iterate over duplicate database items starting from the beginning of the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16841,"byte_end":16917,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ database. Each item will be returned as an iterator of its duplicates.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":16922,"byte_end":16996,"line_start":77,"line_end":77,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":17327,"byte_end":17340,"line_start":85,"line_end":85,"column_start":8,"column_end":21},"name":"iter_dup_from","qualname":"::cursor::Cursor::iter_dup_from","value":"pub fn iter_dup_from<K>(&mut Self, &K) -> IterDup where K: AsRef<[u8]>","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Iterate over duplicate items in the database starting from the given\n key. Each item will be returned as an iterator of its duplicates.\n","sig":null,"attributes":[{"value":"/ Iterate over duplicate items in the database starting from the given","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":17173,"byte_end":17245,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ key. Each item will be returned as an iterator of its duplicates.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":17250,"byte_end":17319,"line_start":84,"line_end":84,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":17641,"byte_end":17652,"line_start":92,"line_end":92,"column_start":8,"column_end":19},"name":"iter_dup_of","qualname":"::cursor::Cursor::iter_dup_of","value":"pub fn iter_dup_of<K>(&mut Self, &K) -> Result<Iter> where K: AsRef<[u8]>","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Iterate over the duplicates of the item in the database with the given\n key.\n","sig":null,"attributes":[{"value":"/ Iterate over the duplicates of the item in the database with the given","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":17546,"byte_end":17620,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ key.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":17625,"byte_end":17633,"line_start":91,"line_end":91,"column_start":5,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":126},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":17953,"byte_end":17961,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"RoCursor","qualname":"::cursor::RoCursor","value":"RoCursor {  }","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"decl_id":null,"docs":" A read-only cursor for navigating the items within a database.\n","sig":null,"attributes":[{"value":"/ A read-only cursor for navigating the items within a database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":17875,"byte_end":17941,"line_start":99,"line_end":99,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":19065,"byte_end":19073,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"RwCursor","qualname":"::cursor::RwCursor","value":"RwCursor {  }","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"decl_id":null,"docs":" A read-write cursor for navigating items within a database.\n","sig":null,"attributes":[{"value":"/ A read-write cursor for navigating items within a database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":18990,"byte_end":19053,"line_start":137,"line_end":137,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":20222,"byte_end":20225,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"put","qualname":"<RwCursor>::put","value":"pub fn put<K, D>(&mut Self, &K, &D, WriteFlags) -> Result<()> where\nK: AsRef<[u8]>, D: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Puts a key/data pair into the database. The cursor will be positioned at\n the new data item, or on failure usually near it.\n","sig":null,"attributes":[{"value":"/ Puts a key/data pair into the database. The cursor will be positioned at","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":20076,"byte_end":20152,"line_start":171,"line_end":171,"column_start":5,"column_end":81}},{"value":"/ the new data item, or on failure usually near it.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":20157,"byte_end":20210,"line_start":172,"line_end":172,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":21284,"byte_end":21287,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"del","qualname":"<RwCursor>::del","value":"pub fn del(&mut Self, WriteFlags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deletes the current key/data pair.","sig":null,"attributes":[{"value":"/ Deletes the current key/data pair.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":21041,"byte_end":21079,"line_start":189,"line_end":189,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":21084,"byte_end":21087,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ### Flags","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":21092,"byte_end":21105,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":21110,"byte_end":21113,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ `WriteFlags::NO_DUP_DATA` may be used to delete all data items for the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":21118,"byte_end":21192,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ current key, if the database was opened with `DatabaseFlags::DUP_SORT`.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":21197,"byte_end":21272,"line_start":194,"line_end":194,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":167},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":21976,"byte_end":21980,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"Iter","qualname":"::cursor::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"decl_id":null,"docs":" An iterator over the values in an LMDB database.\n","sig":null,"attributes":[{"value":"/ An iterator over the values in an LMDB database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":21912,"byte_end":21964,"line_start":215,"line_end":215,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":184},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":23828,"byte_end":23835,"line_start":267,"line_end":267,"column_start":12,"column_end":19},"name":"IterDup","qualname":"::cursor::IterDup","value":"IterDup {  }","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" An iterator over the keys and duplicate values in an LMDB database.","sig":null,"attributes":[{"value":"/ An iterator over the keys and duplicate values in an LMDB database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":23628,"byte_end":23699,"line_start":263,"line_end":263,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":23700,"byte_end":23703,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The yielded items of the iterator are themselves iterators over the duplicate values for a","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":23704,"byte_end":23798,"line_start":265,"line_end":265,"column_start":1,"column_end":95}},{"value":"/ specific key.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":23799,"byte_end":23816,"line_start":266,"line_end":266,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":869},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":37067,"byte_end":37075,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Database","qualname":"::database::Database","value":"Database {  }","parent":null,"children":[{"krate":0,"index":870}],"decl_id":null,"docs":" A handle to an individual database in an environment.","sig":null,"attributes":[{"value":"/ A handle to an individual database in an environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":36862,"byte_end":36919,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":36920,"byte_end":36923,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A database handle denotes the name and parameters of a database in an environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":36924,"byte_end":37010,"line_start":11,"line_end":11,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":38058,"byte_end":38061,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"dbi","qualname":"<Database>::dbi","value":"pub fn dbi(&Self) -> ffi::MDB_dbi","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying LMDB database handle.","sig":null,"attributes":[{"value":"/ Returns the underlying LMDB database handle.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":37841,"byte_end":37889,"line_start":34,"line_end":34,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":37894,"byte_end":37897,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The caller **must** ensure that the handle is not used after the lifetime of the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":37902,"byte_end":37986,"line_start":36,"line_end":36,"column_start":5,"column_end":89}},{"value":"/ environment, or after the database has been closed.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":37991,"byte_end":38046,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":289},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":38957,"byte_end":38968,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"Environment","qualname":"::environment::Environment","value":"Environment {  }","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" An LMDB environment.","sig":null,"attributes":[{"value":"/ An LMDB environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":38825,"byte_end":38849,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":38850,"byte_end":38853,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ An environment supports multiple databases, all residing in the same shared-memory map.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":38854,"byte_end":38945,"line_start":32,"line_end":32,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39150,"byte_end":39153,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Environment>::new","value":"pub fn new() -> EnvironmentBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder for specifying options for opening an LMDB environment.\n","sig":null,"attributes":[{"value":"/ Creates a new builder for specifying options for opening an LMDB environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39057,"byte_end":39138,"line_start":40,"line_end":40,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39561,"byte_end":39564,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"env","qualname":"<Environment>::env","value":"pub fn env(&Self) -> *mut ffi::MDB_env","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying LMDB environment.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying LMDB environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39361,"byte_end":39422,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39427,"byte_end":39430,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The caller **must** ensure that the pointer is not dereferenced after the lifetime of the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39435,"byte_end":39528,"line_start":52,"line_end":52,"column_start":5,"column_end":98}},{"value":"/ environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39533,"byte_end":39549,"line_start":53,"line_end":53,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40296,"byte_end":40303,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"open_db","qualname":"<Environment>::open_db","value":"pub fn open_db<'env>(&'env Self, Option<&str>) -> Result<Database>","parent":null,"children":[],"decl_id":null,"docs":" Opens a handle to an LMDB database.","sig":null,"attributes":[{"value":"/ Opens a handle to an LMDB database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39623,"byte_end":39662,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39667,"byte_end":39670,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ If `name` is `None`, then the returned handle will be for the default database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39675,"byte_end":39758,"line_start":60,"line_end":60,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39763,"byte_end":39766,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ If `name` is not `None`, then the returned handle will be for a named database. In this","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39771,"byte_end":39862,"line_start":62,"line_end":62,"column_start":5,"column_end":96}},{"value":"/ case the environment must be configured to allow named databases through","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39867,"byte_end":39943,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ `EnvironmentBuilder::set_max_dbs`.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39948,"byte_end":39986,"line_start":64,"line_end":64,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39991,"byte_end":39994,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The returned database handle may be shared among any transaction in the environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39999,"byte_end":40087,"line_start":66,"line_end":66,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40092,"byte_end":40095,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function will fail with `Error::BadRslot` if called by a thread which has an ongoing","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40100,"byte_end":40193,"line_start":68,"line_end":68,"column_start":5,"column_end":98}},{"value":"/ transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40198,"byte_end":40214,"line_start":69,"line_end":69,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40219,"byte_end":40222,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The database name may not contain the null character.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40227,"byte_end":40284,"line_start":71,"line_end":71,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":41297,"byte_end":41306,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"create_db","qualname":"<Environment>::create_db","value":"pub fn create_db<'env>(&'env Self, Option<&str>, DatabaseFlags)\n-> Result<Database>","parent":null,"children":[],"decl_id":null,"docs":" Opens a handle to an LMDB database, creating the database if necessary.","sig":null,"attributes":[{"value":"/ Opens a handle to an LMDB database, creating the database if necessary.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40570,"byte_end":40645,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40650,"byte_end":40653,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ If the database is already created, the given option flags will be added to it.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40658,"byte_end":40741,"line_start":83,"line_end":83,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40746,"byte_end":40749,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If `name` is `None`, then the returned handle will be for the default database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40754,"byte_end":40837,"line_start":85,"line_end":85,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40842,"byte_end":40845,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `name` is not `None`, then the returned handle will be for a named database. In this","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40850,"byte_end":40941,"line_start":87,"line_end":87,"column_start":5,"column_end":96}},{"value":"/ case the environment must be configured to allow named databases through","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":40946,"byte_end":41022,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `EnvironmentBuilder::set_max_dbs`.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":41027,"byte_end":41065,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":41070,"byte_end":41073,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The returned database handle may be shared among any transaction in the environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":41078,"byte_end":41166,"line_start":91,"line_end":91,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":41171,"byte_end":41174,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function will fail with `Error::BadRslot` if called by a thread with an open","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":41179,"byte_end":41264,"line_start":93,"line_end":93,"column_start":5,"column_end":90}},{"value":"/ transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":41269,"byte_end":41285,"line_start":94,"line_end":94,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":41827,"byte_end":41839,"line_start":110,"line_end":110,"column_start":12,"column_end":24},"name":"get_db_flags","qualname":"<Environment>::get_db_flags","value":"pub fn get_db_flags<'env>(&'env Self, Database) -> Result<DatabaseFlags>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the set of flags which the database is opened with.","sig":null,"attributes":[{"value":"/ Retrieves the set of flags which the database is opened with.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":41685,"byte_end":41750,"line_start":107,"line_end":107,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":41755,"byte_end":41758,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The database must belong to to this environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":41763,"byte_end":41815,"line_start":109,"line_end":109,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":42220,"byte_end":42232,"line_start":120,"line_end":120,"column_start":12,"column_end":24},"name":"begin_ro_txn","qualname":"<Environment>::begin_ro_txn","value":"pub fn begin_ro_txn<'env>(&'env Self) -> Result<RoTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-only transaction for use with the environment.\n","sig":null,"attributes":[{"value":"/ Create a read-only transaction for use with the environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":42144,"byte_end":42208,"line_start":119,"line_end":119,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":42511,"byte_end":42523,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"begin_rw_txn","qualname":"<Environment>::begin_rw_txn","value":"pub fn begin_rw_txn<'env>(&'env Self) -> Result<RwTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-write transaction for use with the environment. This method will block while\n there are any other read-write transactions open on the environment.\n","sig":null,"attributes":[{"value":"/ Create a read-write transaction for use with the environment. This method will block while","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":42328,"byte_end":42422,"line_start":124,"line_end":124,"column_start":5,"column_end":99}},{"value":"/ there are any other read-write transactions open on the environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":42427,"byte_end":42499,"line_start":125,"line_end":125,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":42947,"byte_end":42951,"line_start":135,"line_end":135,"column_start":12,"column_end":16},"name":"sync","qualname":"<Environment>::sync","value":"pub fn sync(&Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flush data buffers to disk.","sig":null,"attributes":[{"value":"/ Flush data buffers to disk.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":42619,"byte_end":42650,"line_start":130,"line_end":130,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":42655,"byte_end":42658,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Data is always written to disk when `Transaction::commit` is called, but the operating","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":42663,"byte_end":42753,"line_start":132,"line_end":132,"column_start":5,"column_end":95}},{"value":"/ system may keep it buffered. LMDB always flushes the OS buffers upon commit as well, unless","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":42758,"byte_end":42853,"line_start":133,"line_end":133,"column_start":5,"column_end":100}},{"value":"/ the environment was opened with `MDB_NOSYNC` or in part `MDB_NOMETASYNC`.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":42858,"byte_end":42935,"line_start":134,"line_end":134,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43886,"byte_end":43894,"line_start":154,"line_end":154,"column_start":19,"column_end":27},"name":"close_db","qualname":"<Environment>::close_db","value":"pub unsafe fn close_db(&mut Self, Database)","parent":null,"children":[],"decl_id":null,"docs":" Closes the database handle. Normally unnecessary.","sig":null,"attributes":[{"value":"/ Closes the database handle. Normally unnecessary.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43108,"byte_end":43161,"line_start":141,"line_end":141,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43166,"byte_end":43169,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Closing a database handle is not necessary, but lets `Transaction::open_database` reuse the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43174,"byte_end":43269,"line_start":143,"line_end":143,"column_start":5,"column_end":100}},{"value":"/ handle value. Usually it's better to set a bigger `EnvironmentBuilder::set_max_dbs`, unless","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43274,"byte_end":43369,"line_start":144,"line_end":144,"column_start":5,"column_end":100}},{"value":"/ that value would be large.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43374,"byte_end":43404,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43409,"byte_end":43412,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ## Safety","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43417,"byte_end":43430,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43435,"byte_end":43438,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This call is not mutex protected. Databases should only be closed by a single thread, and","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43443,"byte_end":43536,"line_start":149,"line_end":149,"column_start":5,"column_end":98}},{"value":"/ only if no other threads are going to reference the database handle or one of its cursors","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43541,"byte_end":43634,"line_start":150,"line_end":150,"column_start":5,"column_end":98}},{"value":"/ any further. Do not close a handle if an existing transaction has modified its database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43639,"byte_end":43731,"line_start":151,"line_end":151,"column_start":5,"column_end":97}},{"value":"/ Doing so can cause misbehavior from database corruption to errors like","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43736,"byte_end":43810,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ `Error::BadValSize` (since the DB name is gone).","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43815,"byte_end":43867,"line_start":153,"line_end":153,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44041,"byte_end":44045,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"stat","qualname":"<Environment>::stat","value":"pub fn stat(&Self) -> Result<Stat>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves statistics about this environment.\n","sig":null,"attributes":[{"value":"/ Retrieves statistics about this environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":43981,"byte_end":44029,"line_start":158,"line_end":158,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44361,"byte_end":44365,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"Stat","qualname":"::environment::Stat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Environment statistics.","sig":null,"attributes":[{"value":"/ Environment statistics.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44243,"byte_end":44270,"line_start":168,"line_end":168,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44271,"byte_end":44274,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ Contains information about the size and layout of an LMDB environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44275,"byte_end":44349,"line_start":170,"line_end":170,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44508,"byte_end":44517,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"page_size","qualname":"<Stat>::page_size","value":"pub fn page_size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Size of a database page. This is the same for all databases in the environment.\n","sig":null,"attributes":[{"value":"/ Size of a database page. This is the same for all databases in the environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44399,"byte_end":44482,"line_start":174,"line_end":174,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44487,"byte_end":44496,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44628,"byte_end":44633,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"depth","qualname":"<Stat>::depth","value":"pub fn depth(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Depth (height) of the B-tree.\n","sig":null,"attributes":[{"value":"/ Depth (height) of the B-tree.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44569,"byte_end":44602,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44607,"byte_end":44616,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44751,"byte_end":44763,"line_start":188,"line_end":188,"column_start":12,"column_end":24},"name":"branch_pages","qualname":"<Stat>::branch_pages","value":"pub fn branch_pages(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Number of internal (non-leaf) pages.\n","sig":null,"attributes":[{"value":"/ Number of internal (non-leaf) pages.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44685,"byte_end":44725,"line_start":186,"line_end":186,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44730,"byte_end":44739,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44875,"byte_end":44885,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"leaf_pages","qualname":"<Stat>::leaf_pages","value":"pub fn leaf_pages(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Number of leaf pages.\n","sig":null,"attributes":[{"value":"/ Number of leaf pages.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44824,"byte_end":44849,"line_start":192,"line_end":192,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44854,"byte_end":44863,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44999,"byte_end":45013,"line_start":200,"line_end":200,"column_start":12,"column_end":26},"name":"overflow_pages","qualname":"<Stat>::overflow_pages","value":"pub fn overflow_pages(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Number of overflow pages.\n","sig":null,"attributes":[{"value":"/ Number of overflow pages.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44944,"byte_end":44973,"line_start":198,"line_end":198,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44978,"byte_end":44987,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45127,"byte_end":45134,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"entries","qualname":"<Stat>::entries","value":"pub fn entries(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Number of data items.\n","sig":null,"attributes":[{"value":"/ Number of data items.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45076,"byte_end":45101,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45106,"byte_end":45115,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":883},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45873,"byte_end":45891,"line_start":232,"line_end":232,"column_start":12,"column_end":30},"name":"EnvironmentBuilder","qualname":"::environment::EnvironmentBuilder","value":"EnvironmentBuilder {  }","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887}],"decl_id":null,"docs":" Options for opening or creating an environment.\n","sig":null,"attributes":[{"value":"/ Options for opening or creating an environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45765,"byte_end":45816,"line_start":230,"line_end":230,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46227,"byte_end":46231,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"open","qualname":"<EnvironmentBuilder>::open","value":"pub fn open(&Self, &Path) -> Result<Environment>","parent":null,"children":[],"decl_id":null,"docs":" Open an environment.","sig":null,"attributes":[{"value":"/ Open an environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46049,"byte_end":46073,"line_start":241,"line_end":241,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46078,"byte_end":46081,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ On UNIX, the database files will be opened with 644 permissions.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46086,"byte_end":46154,"line_start":243,"line_end":243,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46159,"byte_end":46162,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The path may not contain the null character.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46167,"byte_end":46215,"line_start":245,"line_end":245,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46529,"byte_end":46550,"line_start":255,"line_end":255,"column_start":12,"column_end":33},"name":"open_with_permissions","qualname":"<EnvironmentBuilder>::open_with_permissions","value":"pub fn open_with_permissions(&Self, &Path, ffi::mode_t) -> Result<Environment>","parent":null,"children":[],"decl_id":null,"docs":" Open an environment with the provided UNIX permissions.","sig":null,"attributes":[{"value":"/ Open an environment with the provided UNIX permissions.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46336,"byte_end":46395,"line_start":250,"line_end":250,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46400,"byte_end":46403,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ On Windows, the permissions will be ignored.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46408,"byte_end":46456,"line_start":252,"line_end":252,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46461,"byte_end":46464,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The path may not contain the null character.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46469,"byte_end":46517,"line_start":254,"line_end":254,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":47873,"byte_end":47882,"line_start":283,"line_end":283,"column_start":12,"column_end":21},"name":"set_flags","qualname":"<EnvironmentBuilder>::set_flags","value":"pub fn set_flags(&mut Self, EnvironmentFlags) -> &mut EnvironmentBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the provided options in the environment.\n","sig":null,"attributes":[{"value":"/ Sets the provided options in the environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":47812,"byte_end":47861,"line_start":282,"line_end":282,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48548,"byte_end":48563,"line_start":295,"line_end":295,"column_start":12,"column_end":27},"name":"set_max_readers","qualname":"<EnvironmentBuilder>::set_max_readers","value":"pub fn set_max_readers(&mut Self, c_uint) -> &mut EnvironmentBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of threads or reader slots for the environment.","sig":null,"attributes":[{"value":"/ Sets the maximum number of threads or reader slots for the environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48000,"byte_end":48075,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48080,"byte_end":48083,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This defines the number of slots in the lock table that is used to track readers in the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48088,"byte_end":48179,"line_start":290,"line_end":290,"column_start":5,"column_end":96}},{"value":"/ the environment. The default is 126. Starting a read-only transaction normally ties a lock","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48184,"byte_end":48278,"line_start":291,"line_end":291,"column_start":5,"column_end":99}},{"value":"/ table slot to the current thread until the environment closes or the thread exits. If","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48283,"byte_end":48372,"line_start":292,"line_end":292,"column_start":5,"column_end":94}},{"value":"/ `MDB_NOTLS` is in use, `Environment::open_txn` instead ties the slot to the `Transaction`","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48377,"byte_end":48470,"line_start":293,"line_end":293,"column_start":5,"column_end":98}},{"value":"/ object until it or the `Environment` object is destroyed.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48475,"byte_end":48536,"line_start":294,"line_end":294,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49206,"byte_end":49217,"line_start":309,"line_end":309,"column_start":12,"column_end":23},"name":"set_max_dbs","qualname":"<EnvironmentBuilder>::set_max_dbs","value":"pub fn set_max_dbs(&mut Self, c_uint) -> &mut EnvironmentBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of named databases for the environment.","sig":null,"attributes":[{"value":"/ Sets the maximum number of named databases for the environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48695,"byte_end":48762,"line_start":300,"line_end":300,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48767,"byte_end":48770,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This function is only needed if multiple databases will be used in the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48775,"byte_end":48849,"line_start":302,"line_end":302,"column_start":5,"column_end":79}},{"value":"/ environment. Simpler applications that use the environment as a single","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48854,"byte_end":48928,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"/ unnamed database can ignore this option.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48933,"byte_end":48977,"line_start":304,"line_end":304,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48982,"byte_end":48985,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Currently a moderate number of slots are cheap but a huge number gets","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":48990,"byte_end":49063,"line_start":306,"line_end":306,"column_start":5,"column_end":78}},{"value":"/ expensive: 7-120 words per transaction, and every `Transaction::open_db`","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49068,"byte_end":49144,"line_start":307,"line_end":307,"column_start":5,"column_end":81}},{"value":"/ does a linear search of the opened slots.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49149,"byte_end":49194,"line_start":308,"line_end":308,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49923,"byte_end":49935,"line_start":324,"line_end":324,"column_start":12,"column_end":24},"name":"set_map_size","qualname":"<EnvironmentBuilder>::set_map_size","value":"pub fn set_map_size(&mut Self, size_t) -> &mut EnvironmentBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the memory map to use for the environment.","sig":null,"attributes":[{"value":"/ Sets the size of the memory map to use for the environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49345,"byte_end":49408,"line_start":314,"line_end":314,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49413,"byte_end":49416,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The size should be a multiple of the OS page size. The default is","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49421,"byte_end":49490,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ 10485760 bytes. The size of the memory map is also the maximum size","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49495,"byte_end":49566,"line_start":317,"line_end":317,"column_start":5,"column_end":76}},{"value":"/ of the database. The value should be chosen as large as possible,","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49571,"byte_end":49640,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ to accommodate future growth of the database. It may be increased at","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49645,"byte_end":49717,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ later times.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49722,"byte_end":49738,"line_start":320,"line_end":320,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49743,"byte_end":49746,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Any attempt to set a size smaller than the space already consumed","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49751,"byte_end":49820,"line_start":322,"line_end":322,"column_start":5,"column_end":74}},{"value":"/ by the environment will be silently changed to the current size of the used space.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":49825,"byte_end":49911,"line_start":323,"line_end":323,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54718,"byte_end":54726,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"KeyExist","qualname":"::error::Error::KeyExist","value":"Error::KeyExist","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" key/data pair already exists.\n","sig":null,"attributes":[{"value":"/ key/data pair already exists.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54680,"byte_end":54713,"line_start":12,"line_end":12,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":903},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54771,"byte_end":54779,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::error::Error::NotFound","value":"Error::NotFound","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" key/data pair not found (EOF).\n","sig":null,"attributes":[{"value":"/ key/data pair not found (EOF).","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54732,"byte_end":54766,"line_start":14,"line_end":14,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54855,"byte_end":54867,"line_start":17,"line_end":17,"column_start":5,"column_end":17},"name":"PageNotFound","qualname":"::error::Error::PageNotFound","value":"Error::PageNotFound","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Requested page not found - this usually indicates corruption.\n","sig":null,"attributes":[{"value":"/ Requested page not found - this usually indicates corruption.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54785,"byte_end":54850,"line_start":16,"line_end":16,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54910,"byte_end":54919,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"Corrupted","qualname":"::error::Error::Corrupted","value":"Error::Corrupted","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Located page was wrong type.\n","sig":null,"attributes":[{"value":"/ Located page was wrong type.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54873,"byte_end":54905,"line_start":18,"line_end":18,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":909},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54992,"byte_end":54997,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Panic","qualname":"::error::Error::Panic","value":"Error::Panic","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Update of meta page failed or environment had fatal error.\n","sig":null,"attributes":[{"value":"/ Update of meta page failed or environment had fatal error.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54925,"byte_end":54987,"line_start":20,"line_end":20,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55041,"byte_end":55056,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"VersionMismatch","qualname":"::error::Error::VersionMismatch","value":"Error::VersionMismatch","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Environment version mismatch.\n","sig":null,"attributes":[{"value":"/ Environment version mismatch.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55003,"byte_end":55036,"line_start":22,"line_end":22,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55101,"byte_end":55108,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::error::Error::Invalid","value":"Error::Invalid","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" File is not a valid LMDB file.\n","sig":null,"attributes":[{"value":"/ File is not a valid LMDB file.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55062,"byte_end":55096,"line_start":24,"line_end":24,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":915},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55151,"byte_end":55158,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"MapFull","qualname":"::error::Error::MapFull","value":"Error::MapFull","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Environment mapsize reached.\n","sig":null,"attributes":[{"value":"/ Environment mapsize reached.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55114,"byte_end":55146,"line_start":26,"line_end":26,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55200,"byte_end":55207,"line_start":29,"line_end":29,"column_start":5,"column_end":12},"name":"DbsFull","qualname":"::error::Error::DbsFull","value":"Error::DbsFull","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Environment maxdbs reached.\n","sig":null,"attributes":[{"value":"/ Environment maxdbs reached.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55164,"byte_end":55195,"line_start":28,"line_end":28,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55253,"byte_end":55264,"line_start":31,"line_end":31,"column_start":5,"column_end":16},"name":"ReadersFull","qualname":"::error::Error::ReadersFull","value":"Error::ReadersFull","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Environment maxreaders reached.\n","sig":null,"attributes":[{"value":"/ Environment maxreaders reached.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55213,"byte_end":55248,"line_start":30,"line_end":30,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":921},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55319,"byte_end":55326,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"TlsFull","qualname":"::error::Error::TlsFull","value":"Error::TlsFull","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Too many TLS keys in use - Windows only.\n","sig":null,"attributes":[{"value":"/ Too many TLS keys in use - Windows only.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55270,"byte_end":55314,"line_start":32,"line_end":32,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55370,"byte_end":55377,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"TxnFull","qualname":"::error::Error::TxnFull","value":"Error::TxnFull","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Txn has too many dirty pages.\n","sig":null,"attributes":[{"value":"/ Txn has too many dirty pages.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55332,"byte_end":55365,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":925},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55431,"byte_end":55441,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"name":"CursorFull","qualname":"::error::Error::CursorFull","value":"Error::CursorFull","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Cursor stack too deep - internal error.\n","sig":null,"attributes":[{"value":"/ Cursor stack too deep - internal error.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55383,"byte_end":55426,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":927},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55499,"byte_end":55507,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"name":"PageFull","qualname":"::error::Error::PageFull","value":"Error::PageFull","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Page has not enough space - internal error.\n","sig":null,"attributes":[{"value":"/ Page has not enough space - internal error.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55447,"byte_end":55494,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":929},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55572,"byte_end":55582,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"MapResized","qualname":"::error::Error::MapResized","value":"Error::MapResized","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Database contents grew beyond environment mapsize.\n","sig":null,"attributes":[{"value":"/ Database contents grew beyond environment mapsize.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55513,"byte_end":55567,"line_start":40,"line_end":40,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":931},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55666,"byte_end":55678,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"name":"Incompatible","qualname":"::error::Error::Incompatible","value":"Error::Incompatible","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" MDB_Incompatible: Operation and DB incompatible, or DB flags changed.\n","sig":null,"attributes":[{"value":"/ MDB_Incompatible: Operation and DB incompatible, or DB flags changed.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55588,"byte_end":55661,"line_start":42,"line_end":42,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":933},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55732,"byte_end":55740,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"name":"BadRslot","qualname":"::error::Error::BadRslot","value":"Error::BadRslot","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Invalid reuse of reader locktable slot.\n","sig":null,"attributes":[{"value":"/ Invalid reuse of reader locktable slot.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55684,"byte_end":55727,"line_start":44,"line_end":44,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55803,"byte_end":55809,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"BadTxn","qualname":"::error::Error::BadTxn","value":"Error::BadTxn","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Transaction cannot recover - it must be aborted.\n","sig":null,"attributes":[{"value":"/ Transaction cannot recover - it must be aborted.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55746,"byte_end":55798,"line_start":46,"line_end":46,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55886,"byte_end":55896,"line_start":49,"line_end":49,"column_start":5,"column_end":15},"name":"BadValSize","qualname":"::error::Error::BadValSize","value":"Error::BadValSize","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Unsupported size of key/DB name/data, or wrong DUP_FIXED size.\n","sig":null,"attributes":[{"value":"/ Unsupported size of key/DB name/data, or wrong DUP_FIXED size.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55815,"byte_end":55881,"line_start":48,"line_end":48,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":939},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55954,"byte_end":55960,"line_start":51,"line_end":51,"column_start":5,"column_end":11},"name":"BadDbi","qualname":"::error::Error::BadDbi","value":"Error::BadDbi","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" The specified DBI was changed unexpectedly.\n","sig":null,"attributes":[{"value":"/ The specified DBI was changed unexpectedly.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55902,"byte_end":55949,"line_start":50,"line_end":50,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":941},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55987,"byte_end":55992,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"Other","qualname":"::error::Error::Other","value":"Error::Other(c_int)","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Other error.\n","sig":null,"attributes":[{"value":"/ Other error.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":55966,"byte_end":55982,"line_start":52,"line_end":52,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":900},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54668,"byte_end":54673,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    KeyExist,\n    NotFound,\n    PageNotFound,\n    Corrupted,\n    Panic,\n    VersionMismatch,\n    Invalid,\n    MapFull,\n    DbsFull,\n    ReadersFull,\n    TlsFull,\n    TxnFull,\n    CursorFull,\n    PageFull,\n    MapResized,\n    Incompatible,\n    BadRslot,\n    BadTxn,\n    BadValSize,\n    BadDbi,\n    Other(c_int),\n}","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941}],"decl_id":null,"docs":" An LMDB error kind.\n","sig":null,"attributes":[{"value":"/ An LMDB error kind.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":54590,"byte_end":54613,"line_start":9,"line_end":9,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":56078,"byte_end":56091,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"from_err_code","qualname":"<Error>::from_err_code","value":"pub fn from_err_code(c_int) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw error code to an `Error`.\n","sig":null,"attributes":[{"value":"/ Converts a raw error code to an `Error`.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":56022,"byte_end":56066,"line_start":58,"line_end":58,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":57459,"byte_end":57470,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"to_err_code","qualname":"<Error>::to_err_code","value":"pub fn to_err_code(&Self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Error` to the raw error code.\n","sig":null,"attributes":[{"value":"/ Converts an `Error` to the raw error code.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":57401,"byte_end":57447,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":364},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":59272,"byte_end":59278,"line_start":130,"line_end":130,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" An LMDB result.\n","sig":null,"attributes":[{"value":"/ An LMDB result.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":59243,"byte_end":59262,"line_start":129,"line_end":129,"column_start":1,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":433},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60231,"byte_end":60242,"line_start":16,"line_end":16,"column_start":11,"column_end":22},"name":"Transaction","qualname":"::transaction::Transaction","value":"Transaction: Sized","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":443}],"decl_id":null,"docs":" An LMDB transaction.","sig":null,"attributes":[{"value":"/ An LMDB transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60141,"byte_end":60165,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60166,"byte_end":60169,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All database operations require a transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60170,"byte_end":60220,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60446,"byte_end":60449,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"txn","qualname":"::transaction::Transaction::txn","value":"pub fn txn(&Self) -> *mut ffi::MDB_txn","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying LMDB transaction.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying LMDB transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60258,"byte_end":60319,"line_start":18,"line_end":18,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60324,"byte_end":60327,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ The caller **must** ensure that the pointer is not used after the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60332,"byte_end":60401,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ lifetime of the transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60406,"byte_end":60438,"line_start":21,"line_end":21,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60574,"byte_end":60580,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"commit","qualname":"::transaction::Transaction::commit","value":"pub fn commit(Self) -> Result<()>","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Commits the transaction.","sig":null,"attributes":[{"value":"/ Commits the transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60484,"byte_end":60512,"line_start":24,"line_end":24,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60517,"byte_end":60520,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Any pending operations will be saved.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60525,"byte_end":60566,"line_start":26,"line_end":26,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60855,"byte_end":60860,"line_start":38,"line_end":38,"column_start":8,"column_end":13},"name":"abort","qualname":"::transaction::Transaction::abort","value":"pub fn abort(Self)","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Aborts the transaction.","sig":null,"attributes":[{"value":"/ Aborts the transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60762,"byte_end":60789,"line_start":35,"line_end":35,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60794,"byte_end":60797,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Any pending operations will not be saved.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60802,"byte_end":60847,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61784,"byte_end":61791,"line_start":59,"line_end":59,"column_start":15,"column_end":22},"name":"open_db","qualname":"::transaction::Transaction::open_db","value":"pub unsafe fn open_db(&Self, Option<&str>) -> Result<Database>","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Opens a database in the transaction.","sig":null,"attributes":[{"value":"/ Opens a database in the transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60945,"byte_end":60985,"line_start":42,"line_end":42,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60990,"byte_end":60993,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ If `name` is `None`, then the default database will be opened, otherwise","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60998,"byte_end":61074,"line_start":44,"line_end":44,"column_start":5,"column_end":81}},{"value":"/ a named database will be opened. The database handle will be private to","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61079,"byte_end":61154,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ the transaction until the transaction is successfully committed. If the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61159,"byte_end":61234,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ transaction is aborted the returned database handle should no longer be","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61239,"byte_end":61314,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ used.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61319,"byte_end":61328,"line_start":48,"line_end":48,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61333,"byte_end":61336,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Prefer using `Environment::open_db`.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61341,"byte_end":61381,"line_start":50,"line_end":50,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61386,"byte_end":61389,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ## Safety","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61394,"byte_end":61407,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61412,"byte_end":61415,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This function (as well as `Environment::open_db`,","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61420,"byte_end":61473,"line_start":54,"line_end":54,"column_start":5,"column_end":58}},{"value":"/ `Environment::create_db`, and `Database::create`) **must not** be called","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61478,"byte_end":61554,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ from multiple concurrent transactions in the same environment. A","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61559,"byte_end":61627,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ transaction which uses this function must finish (either commit or","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61632,"byte_end":61702,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/ abort) before any other transaction may use this function.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61707,"byte_end":61769,"line_start":58,"line_end":58,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":62344,"byte_end":62347,"line_start":71,"line_end":71,"column_start":8,"column_end":11},"name":"get","qualname":"::transaction::Transaction::get","value":"pub fn get<'txn, K>(&'txn Self, Database, &K) -> Result<&'txn [u8]> where\nK: AsRef<[u8]>","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Gets an item from a database.","sig":null,"attributes":[{"value":"/ Gets an item from a database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61895,"byte_end":61928,"line_start":63,"line_end":63,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61933,"byte_end":61936,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function retrieves the data associated with the given key in the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":61941,"byte_end":62014,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ database. If the database supports duplicate keys","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":62019,"byte_end":62072,"line_start":66,"line_end":66,"column_start":5,"column_end":58}},{"value":"/ (`DatabaseFlags::DUP_SORT`) then the first data item for the key will be","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":62077,"byte_end":62153,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ returned. Retrieval of other items requires the use of","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":62158,"byte_end":62216,"line_start":68,"line_end":68,"column_start":5,"column_end":63}},{"value":"/ `Transaction::cursor_get`. If the item is not in the database, then","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":62221,"byte_end":62292,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ `Error::NotFound` will be returned.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":62297,"byte_end":62336,"line_start":70,"line_end":70,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":63346,"byte_end":63360,"line_start":93,"line_end":93,"column_start":8,"column_end":22},"name":"open_ro_cursor","qualname":"::transaction::Transaction::open_ro_cursor","value":"pub fn open_ro_cursor<'txn>(&'txn Self, Database) -> Result<RoCursor>","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Open a new read-only cursor on the given database.\n","sig":null,"attributes":[{"value":"/ Open a new read-only cursor on the given database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":63284,"byte_end":63338,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":63540,"byte_end":63548,"line_start":98,"line_end":98,"column_start":8,"column_end":16},"name":"db_flags","qualname":"::transaction::Transaction::db_flags","value":"pub fn db_flags(&Self, Database) -> Result<DatabaseFlags>","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Gets the option flags for the given database in the transaction.\n","sig":null,"attributes":[{"value":"/ Gets the option flags for the given database in the transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":63464,"byte_end":63532,"line_start":97,"line_end":97,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":63847,"byte_end":63860,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"RoTransaction","qualname":"::transaction::RoTransaction","value":"RoTransaction {  }","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"decl_id":null,"docs":" An LMDB read-only transaction.\n","sig":null,"attributes":[{"value":"/ An LMDB read-only transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":63801,"byte_end":63835,"line_start":107,"line_end":107,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65540,"byte_end":65545,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"reset","qualname":"<RoTransaction>::reset","value":"pub fn reset(Self) -> InactiveTransaction","parent":null,"children":[],"decl_id":null,"docs":" Resets the read-only transaction.","sig":null,"attributes":[{"value":"/ Resets the read-only transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":64742,"byte_end":64779,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":64784,"byte_end":64787,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Abort the transaction like `Transaction::abort`, but keep the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":64792,"byte_end":64857,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/ transaction handle.  `InactiveTransaction::renew` may reuse the handle.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":64862,"byte_end":64937,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/ This saves allocation overhead if the process will start a new read-only","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":64942,"byte_end":65018,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ transaction soon, and also locking overhead if","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65023,"byte_end":65073,"line_start":142,"line_end":142,"column_start":5,"column_end":55}},{"value":"/ `EnvironmentFlags::NO_TLS` is in use. The reader table lock is released,","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65078,"byte_end":65154,"line_start":143,"line_end":143,"column_start":5,"column_end":81}},{"value":"/ but the table slot stays tied to its thread or transaction. Reader locks","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65159,"byte_end":65235,"line_start":144,"line_end":144,"column_start":5,"column_end":81}},{"value":"/ generally don't interfere with writers, but they keep old versions of","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65240,"byte_end":65313,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ database pages allocated. Thus they prevent the old pages from being","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65318,"byte_end":65390,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ reused when writers commit new data, and so under heavy load the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65395,"byte_end":65463,"line_start":147,"line_end":147,"column_start":5,"column_end":73}},{"value":"/ database size may grow much more rapidly than otherwise.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65468,"byte_end":65528,"line_start":148,"line_end":148,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":461},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65945,"byte_end":65964,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"InactiveTransaction","qualname":"::transaction::InactiveTransaction","value":"InactiveTransaction {  }","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464}],"decl_id":null,"docs":" An inactive read-only transaction.\n","sig":null,"attributes":[{"value":"/ An inactive read-only transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65895,"byte_end":65933,"line_start":165,"line_end":165,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66643,"byte_end":66648,"line_start":190,"line_end":190,"column_start":12,"column_end":17},"name":"renew","qualname":"<InactiveTransaction>::renew","value":"pub fn renew(Self) -> Result<RoTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Renews the inactive transaction, returning an active read-only\n transaction.","sig":null,"attributes":[{"value":"/ Renews the inactive transaction, returning an active read-only","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66413,"byte_end":66479,"line_start":185,"line_end":185,"column_start":5,"column_end":71}},{"value":"/ transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66484,"byte_end":66500,"line_start":186,"line_end":186,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66505,"byte_end":66508,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ This acquires a new reader lock for a transaction handle that had been","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66513,"byte_end":66587,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ released by `RoTransaction::reset`.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66592,"byte_end":66631,"line_start":189,"line_end":189,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66942,"byte_end":66955,"line_start":201,"line_end":201,"column_start":12,"column_end":25},"name":"RwTransaction","qualname":"::transaction::RwTransaction","value":"RwTransaction {  }","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"decl_id":null,"docs":" An LMDB read-write transaction.\n","sig":null,"attributes":[{"value":"/ An LMDB read-write transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66895,"byte_end":66930,"line_start":200,"line_end":200,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68805,"byte_end":68814,"line_start":250,"line_end":250,"column_start":19,"column_end":28},"name":"create_db","qualname":"<RwTransaction>::create_db","value":"pub unsafe fn create_db(&Self, Option<&str>, DatabaseFlags)\n-> Result<Database>","parent":null,"children":[],"decl_id":null,"docs":" Opens a database in the provided transaction, creating it if necessary.","sig":null,"attributes":[{"value":"/ Opens a database in the provided transaction, creating it if necessary.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":67927,"byte_end":68002,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68007,"byte_end":68010,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ If `name` is `None`, then the default database will be opened, otherwise","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68015,"byte_end":68091,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ a named database will be opened. The database handle will be private to","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68096,"byte_end":68171,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ the transaction until the transaction is successfully committed. If the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68176,"byte_end":68251,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ transaction is aborted the returned database handle should no longer be","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68256,"byte_end":68331,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ used.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68336,"byte_end":68345,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68350,"byte_end":68353,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Prefer using `Environment::create_db`.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68358,"byte_end":68400,"line_start":241,"line_end":241,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68405,"byte_end":68408,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ## Safety","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68413,"byte_end":68426,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68431,"byte_end":68434,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This function (as well as `Environment::open_db`,","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68439,"byte_end":68492,"line_start":245,"line_end":245,"column_start":5,"column_end":58}},{"value":"/ `Environment::create_db`, and `Database::open`) **must not** be called","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68497,"byte_end":68571,"line_start":246,"line_end":246,"column_start":5,"column_end":79}},{"value":"/ from multiple concurrent transactions in the same environment. A","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68576,"byte_end":68644,"line_start":247,"line_end":247,"column_start":5,"column_end":73}},{"value":"/ transaction which uses this function must finish (either commit or","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68649,"byte_end":68719,"line_start":248,"line_end":248,"column_start":5,"column_end":75}},{"value":"/ abort) before any other transaction may use this function.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68724,"byte_end":68786,"line_start":249,"line_end":249,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":69053,"byte_end":69067,"line_start":255,"line_end":255,"column_start":12,"column_end":26},"name":"open_rw_cursor","qualname":"<RwTransaction>::open_rw_cursor","value":"pub fn open_rw_cursor<'txn>(&'txn mut Self, Database) -> Result<RwCursor>","parent":null,"children":[],"decl_id":null,"docs":" Opens a new read-write cursor on the given database and transaction.\n","sig":null,"attributes":[{"value":"/ Opens a new read-write cursor on the given database and transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":68969,"byte_end":69041,"line_start":254,"line_end":254,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":69526,"byte_end":69529,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"name":"put","qualname":"<RwTransaction>::put","value":"pub fn put<K, D>(&mut Self, Database, &K, &D, WriteFlags) -> Result<()> where\nK: AsRef<[u8]>, D: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Stores an item into a database.","sig":null,"attributes":[{"value":"/ Stores an item into a database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":69175,"byte_end":69210,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":69215,"byte_end":69218,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function stores key/data pairs in the database. The default","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":69223,"byte_end":69291,"line_start":261,"line_end":261,"column_start":5,"column_end":73}},{"value":"/ behavior is to enter the new key/data pair, replacing any previously","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":69296,"byte_end":69368,"line_start":262,"line_end":262,"column_start":5,"column_end":77}},{"value":"/ existing key if duplicates are disallowed, or adding a duplicate data","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":69373,"byte_end":69446,"line_start":263,"line_end":263,"column_start":5,"column_end":78}},{"value":"/ item if duplicates are allowed (`DatabaseFlags::DUP_SORT`).","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":69451,"byte_end":69514,"line_start":264,"line_end":264,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":70685,"byte_end":70692,"line_start":290,"line_end":290,"column_start":12,"column_end":19},"name":"reserve","qualname":"<RwTransaction>::reserve","value":"pub fn reserve<'txn, K>(&'txn mut Self, Database, &K, size_t, WriteFlags)\n-> Result<&'txn mut [u8]> where K: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a buffer which can be used to write a value into the item at the\n given key and with the given length. The buffer must be completely\n filled by the caller.\n","sig":null,"attributes":[{"value":"/ Returns a buffer which can be used to write a value into the item at the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":70492,"byte_end":70568,"line_start":287,"line_end":287,"column_start":5,"column_end":81}},{"value":"/ given key and with the given length. The buffer must be completely","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":70573,"byte_end":70643,"line_start":288,"line_end":288,"column_start":5,"column_end":75}},{"value":"/ filled by the caller.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":70648,"byte_end":70673,"line_start":289,"line_end":289,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":72373,"byte_end":72376,"line_start":323,"line_end":323,"column_start":12,"column_end":15},"name":"del","qualname":"<RwTransaction>::del","value":"pub fn del<K>(&mut Self, Database, &K, Option<&[u8]>) -> Result<()> where\nK: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Deletes an item from a database.","sig":null,"attributes":[{"value":"/ Deletes an item from a database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":71751,"byte_end":71787,"line_start":313,"line_end":313,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":71792,"byte_end":71795,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This function removes key/data pairs from the database. If the database","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":71800,"byte_end":71875,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ does not support sorted duplicate data items (`DatabaseFlags::DUP_SORT`)","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":71880,"byte_end":71956,"line_start":316,"line_end":316,"column_start":5,"column_end":81}},{"value":"/ the data parameter is ignored.  If the database supports sorted","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":71961,"byte_end":72028,"line_start":317,"line_end":317,"column_start":5,"column_end":72}},{"value":"/ duplicates and the data parameter is `None`, all of the duplicate data","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":72033,"byte_end":72107,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/ items for the key will be deleted. Otherwise, if the data parameter is","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":72112,"byte_end":72186,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `Some` only the matching data item will be deleted. This function will","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":72191,"byte_end":72265,"line_start":320,"line_end":320,"column_start":5,"column_end":79}},{"value":"/ return `Error::NotFound` if the specified key/data pair is not in the","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":72270,"byte_end":72343,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ database.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":72348,"byte_end":72361,"line_start":322,"line_end":322,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":73368,"byte_end":73376,"line_start":345,"line_end":345,"column_start":12,"column_end":20},"name":"clear_db","qualname":"<RwTransaction>::clear_db","value":"pub fn clear_db(&mut Self, Database) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Empties the given database. All items will be removed.\n","sig":null,"attributes":[{"value":"/ Empties the given database. All items will be removed.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":73298,"byte_end":73356,"line_start":344,"line_end":344,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":73712,"byte_end":73719,"line_start":355,"line_end":355,"column_start":19,"column_end":26},"name":"drop_db","qualname":"<RwTransaction>::drop_db","value":"pub unsafe fn drop_db(&mut Self, Database) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Drops the database from the environment.","sig":null,"attributes":[{"value":"/ Drops the database from the environment.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":73500,"byte_end":73544,"line_start":349,"line_end":349,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":73549,"byte_end":73552,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ## Safety","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":73557,"byte_end":73570,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":73575,"byte_end":73578,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe in the same ways as `Environment::close_db`, and","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":73583,"byte_end":73657,"line_start":353,"line_end":353,"column_start":5,"column_end":79}},{"value":"/ should be used accordingly.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":73662,"byte_end":73693,"line_start":354,"line_end":354,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":73905,"byte_end":73921,"line_start":360,"line_end":360,"column_start":12,"column_end":28},"name":"begin_nested_txn","qualname":"<RwTransaction>::begin_nested_txn","value":"pub fn begin_nested_txn<'txn>(&'txn mut Self) -> Result<RwTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Begins a new nested transaction inside of this transaction.\n","sig":null,"attributes":[{"value":"/ Begins a new nested transaction inside of this transaction.","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":73830,"byte_end":73893,"line_start":359,"line_end":359,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":18080,"byte_end":18088,"line_start":105,"line_end":105,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":18200,"byte_end":18208,"line_start":111,"line_end":111,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":18369,"byte_end":18377,"line_start":117,"line_end":117,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":18486,"byte_end":18494,"line_start":123,"line_end":123,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":19192,"byte_end":19200,"line_start":143,"line_end":143,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":19312,"byte_end":19320,"line_start":149,"line_end":149,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":19481,"byte_end":19489,"line_start":155,"line_end":155,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":19598,"byte_end":19606,"line_start":161,"line_end":161,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":22115,"byte_end":22119,"line_start":223,"line_end":223,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":22392,"byte_end":22396,"line_start":231,"line_end":231,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":22557,"byte_end":22561,"line_start":237,"line_end":237,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":23949,"byte_end":23956,"line_start":273,"line_end":273,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":24200,"byte_end":24207,"line_start":281,"line_end":281,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":24371,"byte_end":24378,"line_start":287,"line_end":287,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":37109,"byte_end":37117,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":38134,"byte_end":38142,"line_start":43,"line_end":43,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":38167,"byte_end":38175,"line_start":44,"line_end":44,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39038,"byte_end":39049,"line_start":38,"line_end":38,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44388,"byte_end":44392,"line_start":173,"line_end":173,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45209,"byte_end":45220,"line_start":211,"line_end":211,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45245,"byte_end":45256,"line_start":212,"line_end":212,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45281,"byte_end":45292,"line_start":214,"line_end":214,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45443,"byte_end":45454,"line_start":220,"line_end":220,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46023,"byte_end":46041,"line_start":239,"line_end":239,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":56009,"byte_end":56014,"line_start":56,"line_end":56,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":58767,"byte_end":58772,"line_start":113,"line_end":113,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":58909,"byte_end":58914,"line_start":119,"line_end":119,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":63963,"byte_end":63976,"line_start":113,"line_end":113,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":64142,"byte_end":64155,"line_start":119,"line_end":119,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":64258,"byte_end":64271,"line_start":125,"line_end":125,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65806,"byte_end":65819,"line_start":159,"line_end":159,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66067,"byte_end":66086,"line_start":171,"line_end":171,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66258,"byte_end":66277,"line_start":177,"line_end":177,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66380,"byte_end":66399,"line_start":183,"line_end":183,"column_start":13,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":67058,"byte_end":67071,"line_start":206,"line_end":206,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":67237,"byte_end":67250,"line_start":212,"line_end":212,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":67353,"byte_end":67366,"line_start":218,"line_end":218,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":74302,"byte_end":74315,"line_start":370,"line_end":370,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":18080,"byte_end":18088,"line_start":105,"line_end":105,"column_start":30,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":126},"to":{"krate":0,"index":112}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":18200,"byte_end":18208,"line_start":111,"line_end":111,"column_start":28,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":18369,"byte_end":18377,"line_start":117,"line_end":117,"column_start":22,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":18486,"byte_end":18494,"line_start":123,"line_end":123,"column_start":13,"column_end":21},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":19192,"byte_end":19200,"line_start":143,"line_end":143,"column_start":30,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":143},"to":{"krate":0,"index":112}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":19312,"byte_end":19320,"line_start":149,"line_end":149,"column_start":28,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":19481,"byte_end":19489,"line_start":155,"line_end":155,"column_start":22,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":19598,"byte_end":19606,"line_start":161,"line_end":161,"column_start":13,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":22115,"byte_end":22119,"line_start":223,"line_end":223,"column_start":13,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":22392,"byte_end":22396,"line_start":231,"line_end":231,"column_start":28,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":167},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":22557,"byte_end":22561,"line_start":237,"line_end":237,"column_start":26,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":167},"to":{"krate":2,"index":7314}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":23949,"byte_end":23956,"line_start":273,"line_end":273,"column_start":13,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":24200,"byte_end":24207,"line_start":281,"line_end":281,"column_start":28,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/cursor.rs","byte_start":24371,"byte_end":24378,"line_start":287,"line_end":287,"column_start":26,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":7314}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":37109,"byte_end":37117,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":38134,"byte_end":38142,"line_start":43,"line_end":43,"column_start":22,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":2861}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/database.rs","byte_start":38167,"byte_end":38175,"line_start":44,"line_end":44,"column_start":22,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":2849}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":39038,"byte_end":39049,"line_start":38,"line_end":38,"column_start":6,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":44388,"byte_end":44392,"line_start":173,"line_end":173,"column_start":6,"column_end":10},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45209,"byte_end":45220,"line_start":211,"line_end":211,"column_start":22,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":2849}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45245,"byte_end":45256,"line_start":212,"line_end":212,"column_start":22,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":2861}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45281,"byte_end":45292,"line_start":214,"line_end":214,"column_start":21,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":45443,"byte_end":45454,"line_start":220,"line_end":220,"column_start":15,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/environment.rs","byte_start":46023,"byte_end":46041,"line_start":239,"line_end":239,"column_start":6,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":56009,"byte_end":56014,"line_start":56,"line_end":56,"column_start":6,"column_end":11},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":58767,"byte_end":58772,"line_start":113,"line_end":113,"column_start":23,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":900},"to":{"krate":2,"index":8898}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/error.rs","byte_start":58909,"byte_end":58914,"line_start":119,"line_end":119,"column_start":19,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":900},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":60245,"byte_end":60250,"line_start":16,"line_end":16,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2854},"to":{"krate":0,"index":433}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":63963,"byte_end":63976,"line_start":113,"line_end":113,"column_start":28,"column_end":41},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":64142,"byte_end":64155,"line_start":119,"line_end":119,"column_start":22,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":64258,"byte_end":64271,"line_start":125,"line_end":125,"column_start":13,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":65806,"byte_end":65819,"line_start":159,"line_end":159,"column_start":29,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":444},"to":{"krate":0,"index":433}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66067,"byte_end":66086,"line_start":171,"line_end":171,"column_start":28,"column_end":47},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66258,"byte_end":66277,"line_start":177,"line_end":177,"column_start":22,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":66380,"byte_end":66399,"line_start":183,"line_end":183,"column_start":13,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":67058,"byte_end":67071,"line_start":206,"line_end":206,"column_start":28,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":67237,"byte_end":67250,"line_start":212,"line_end":212,"column_start":22,"column_end":35},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":67353,"byte_end":67366,"line_start":218,"line_end":218,"column_start":13,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/bassam/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-0.8.0/src/transaction.rs","byte_start":74302,"byte_end":74315,"line_start":370,"line_end":370,"column_start":29,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":474},"to":{"krate":0,"index":433}}]}