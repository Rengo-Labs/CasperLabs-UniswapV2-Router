{"message":"unused import: `Bytes`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":483,"byte_end":488,"line_start":14,"line_end":14,"column_start":75,"column_end":80,"is_primary":true,"text":[{"text":"    Group, Key, Parameter, RuntimeArgs, URef, ApiError, U256, bytesrepr::{Bytes}","highlight_start":75,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":469,"byte_end":489,"line_start":14,"line_end":14,"column_start":61,"column_end":81,"is_primary":true,"text":[{"text":"    Group, Key, Parameter, RuntimeArgs, URef, ApiError, U256, bytesrepr::{Bytes}","highlight_start":61,"highlight_end":81}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Bytes`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap_v2_router/bin/uniswap.rs:14:75\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Group, Key, Parameter, RuntimeArgs, URef, ApiError, U256, bytesrepr::{Bytes}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `amount_a`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":3236,"byte_end":3244,"line_start":83,"line_end":83,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (amount_a, amount_b, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity(_token_a, _token_b, amount_a_desired, amount_b_desired, amount_a_min, amount_b_min, to);","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":3236,"byte_end":3244,"line_start":83,"line_end":83,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (amount_a, amount_b, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity(_token_a, _token_b, amount_a_desired, amount_b_desired, amount_a_min, amount_b_min, to);","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"_amount_a","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `amount_a`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap_v2_router/bin/uniswap.rs:83:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (amount_a, amount_b, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity(_token_a, _token_b, amount_a_desired, amou\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_amount_a`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `amount_b`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":3246,"byte_end":3254,"line_start":83,"line_end":83,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"    let (amount_a, amount_b, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity(_token_a, _token_b, amount_a_desired, amount_b_desired, amount_a_min, amount_b_min, to);","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":3246,"byte_end":3254,"line_start":83,"line_end":83,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"    let (amount_a, amount_b, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity(_token_a, _token_b, amount_a_desired, amount_b_desired, amount_a_min, amount_b_min, to);","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":"_amount_b","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `amount_b`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap_v2_router/bin/uniswap.rs:83:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (amount_a, amount_b, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity(_token_a, _token_b, amount_a_desired, amou\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_amount_b`\u001b[0m\n\n"}
{"message":"unused variable: `liquidity`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":3256,"byte_end":3265,"line_start":83,"line_end":83,"column_start":30,"column_end":39,"is_primary":true,"text":[{"text":"    let (amount_a, amount_b, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity(_token_a, _token_b, amount_a_desired, amount_b_desired, amount_a_min, amount_b_min, to);","highlight_start":30,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":3256,"byte_end":3265,"line_start":83,"line_end":83,"column_start":30,"column_end":39,"is_primary":true,"text":[{"text":"    let (amount_a, amount_b, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity(_token_a, _token_b, amount_a_desired, amount_b_desired, amount_a_min, amount_b_min, to);","highlight_start":30,"highlight_end":39}],"label":null,"suggested_replacement":"_liquidity","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `liquidity`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap_v2_router/bin/uniswap.rs:83:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (amount_a, amount_b, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity(_token_a, _token_b, amount_a_desired, amou\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_liquidity`\u001b[0m\n\n"}
{"message":"unused variable: `amount_token`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":4420,"byte_end":4432,"line_start":107,"line_end":107,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"    let (amount_token, amount_cspr, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity_cspr(_token, amount_token_desired, amount_cspr_desired, amount_token_min, amount_cspr_min, to);","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":4420,"byte_end":4432,"line_start":107,"line_end":107,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"    let (amount_token, amount_cspr, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity_cspr(_token, amount_token_desired, amount_cspr_desired, amount_token_min, amount_cspr_min, to);","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"_amount_token","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `amount_token`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap_v2_router/bin/uniswap.rs:107:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (amount_token, amount_cspr, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity_cspr(_token, amount_token_desired, \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_amount_token`\u001b[0m\n\n"}
{"message":"unused variable: `amount_cspr`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":4434,"byte_end":4445,"line_start":107,"line_end":107,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"    let (amount_token, amount_cspr, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity_cspr(_token, amount_token_desired, amount_cspr_desired, amount_token_min, amount_cspr_min, to);","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":4434,"byte_end":4445,"line_start":107,"line_end":107,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"    let (amount_token, amount_cspr, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity_cspr(_token, amount_token_desired, amount_cspr_desired, amount_token_min, amount_cspr_min, to);","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":"_amount_cspr","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `amount_cspr`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap_v2_router/bin/uniswap.rs:107:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (amount_token, amount_cspr, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity_cspr(_token, amount_token_desired, \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_amount_cspr`\u001b[0m\n\n"}
{"message":"unused variable: `liquidity`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":4447,"byte_end":4456,"line_start":107,"line_end":107,"column_start":37,"column_end":46,"is_primary":true,"text":[{"text":"    let (amount_token, amount_cspr, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity_cspr(_token, amount_token_desired, amount_cspr_desired, amount_token_min, amount_cspr_min, to);","highlight_start":37,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":4447,"byte_end":4456,"line_start":107,"line_end":107,"column_start":37,"column_end":46,"is_primary":true,"text":[{"text":"    let (amount_token, amount_cspr, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity_cspr(_token, amount_token_desired, amount_cspr_desired, amount_token_min, amount_cspr_min, to);","highlight_start":37,"highlight_end":46}],"label":null,"suggested_replacement":"_liquidity","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `liquidity`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap_v2_router/bin/uniswap.rs:107:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (amount_token, amount_cspr, liquidity): (U256, U256, U256) = Uniswap::default().add_liquidity_cspr(_token, amount_token_desired, \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_liquidity`\u001b[0m\n\n"}
{"message":"unused variable: `amount_a`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":8102,"byte_end":8110,"line_start":188,"line_end":188,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (amount_a, amount_b) :(U256, U256) = Uniswap::default().remove_liquidity_with_permit(_token_a, _token_b, liquidity, amount_a_min, amount_b_min, ","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":8102,"byte_end":8110,"line_start":188,"line_end":188,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (amount_a, amount_b) :(U256, U256) = Uniswap::default().remove_liquidity_with_permit(_token_a, _token_b, liquidity, amount_a_min, amount_b_min, ","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"_amount_a","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `amount_a`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap_v2_router/bin/uniswap.rs:188:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (amount_a, amount_b) :(U256, U256) = Uniswap::default().remove_liquidity_with_permit(_token_a, _token_b, liquidity, amount_a_min,\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_amount_a`\u001b[0m\n\n"}
{"message":"unused variable: `amount_b`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":8112,"byte_end":8120,"line_start":188,"line_end":188,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"    let (amount_a, amount_b) :(U256, U256) = Uniswap::default().remove_liquidity_with_permit(_token_a, _token_b, liquidity, amount_a_min, amount_b_min, ","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":8112,"byte_end":8120,"line_start":188,"line_end":188,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"    let (amount_a, amount_b) :(U256, U256) = Uniswap::default().remove_liquidity_with_permit(_token_a, _token_b, liquidity, amount_a_min, amount_b_min, ","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":"_amount_b","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `amount_b`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap_v2_router/bin/uniswap.rs:188:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (amount_a, amount_b) :(U256, U256) = Uniswap::default().remove_liquidity_with_permit(_token_a, _token_b, liquidity, amount_a_min,\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_amount_b`\u001b[0m\n\n"}
{"message":"unused variable: `amount_token`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":9491,"byte_end":9503,"line_start":218,"line_end":218,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"    let (amount_token, amount_cspr) :(U256, U256) = Uniswap::default().remove_liquidity_cspr_with_permit(_token, liquidity, amount_token_min, amount_cspr_min, ","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":9491,"byte_end":9503,"line_start":218,"line_end":218,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"    let (amount_token, amount_cspr) :(U256, U256) = Uniswap::default().remove_liquidity_cspr_with_permit(_token, liquidity, amount_token_min, amount_cspr_min, ","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"_amount_token","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `amount_token`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap_v2_router/bin/uniswap.rs:218:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (amount_token, amount_cspr) :(U256, U256) = Uniswap::default().remove_liquidity_cspr_with_permit(_token, liquidity, amount_token_\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_amount_token`\u001b[0m\n\n"}
{"message":"unused variable: `amount_cspr`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":9505,"byte_end":9516,"line_start":218,"line_end":218,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"    let (amount_token, amount_cspr) :(U256, U256) = Uniswap::default().remove_liquidity_cspr_with_permit(_token, liquidity, amount_token_min, amount_cspr_min, ","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"uniswap_v2_router/bin/uniswap.rs","byte_start":9505,"byte_end":9516,"line_start":218,"line_end":218,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"    let (amount_token, amount_cspr) :(U256, U256) = Uniswap::default().remove_liquidity_cspr_with_permit(_token, liquidity, amount_token_min, amount_cspr_min, ","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":"_amount_cspr","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `amount_cspr`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap_v2_router/bin/uniswap.rs:218:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (amount_token, amount_cspr) :(U256, U256) = Uniswap::default().remove_liquidity_cspr_with_permit(_token, liquidity, amount_token_\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_amount_cspr`\u001b[0m\n\n"}
{"message":"11 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 11 warnings emitted\u001b[0m\n\n"}
