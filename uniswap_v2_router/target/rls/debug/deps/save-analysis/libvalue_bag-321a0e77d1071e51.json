{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7","program":"/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","value_bag","--edition=2018","/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=321a0e77d1071e51","-C","extra-filename=-321a0e77d1071e51","--out-dir","/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps","-L","dependency=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps","--extern","ctor=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libctor-81d56d672256be72.so","--cap-lints","allow","--cfg","value_bag_capture_const_type_id","--error-format=json","--sysroot","/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu"],"output":"/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libvalue_bag-321a0e77d1071e51.rmeta"},"prelude":{"crate_id":{"name":"value_bag","disambiguator":[5699999349286232369,10682395798175823488]},"crate_root":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src","external_crates":[{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}}],"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":0,"byte_end":11058,"line_start":1,"line_end":376,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":745,"byte_end":750,"line_start":30,"line_end":30,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":0,"byte_end":11058,"line_start":1,"line_end":376,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":16},{"krate":0,"index":61},{"krate":0,"index":69},{"krate":0,"index":372},{"krate":0,"index":437},{"krate":0,"index":631},{"krate":0,"index":634}],"decl_id":null,"docs":" Structured values.","sig":null,"attributes":[{"value":"/ Structured values.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":23,"byte_end":26,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate contains the [`ValueBag`] type, a container for an anonymous structured value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":27,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ `ValueBag`s can be captured in various ways and then formatted, inspected, and serialized","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":121,"byte_end":214,"line_start":4,"line_end":4,"column_start":1,"column_end":94}},{"value":"/ without losing their original structure.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":215,"byte_end":259,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"feature(const_type_id)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":306,"byte_end":328,"line_start":7,"line_end":7,"column_start":46,"column_end":68}},{"value":"no_std","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":398,"byte_end":408,"line_start":9,"line_end":9,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":440},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/error.rs","byte_start":11547,"byte_end":11552,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":441}],"decl_id":null,"docs":" An error encountered while working with structured data.\n","sig":null,"attributes":[{"value":"/ An error encountered while working with structured data.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/error.rs","byte_start":11458,"byte_end":11518,"line_start":3,"line_end":3,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/error.rs","byte_start":11769,"byte_end":11772,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"msg","qualname":"<Error>::msg","value":"pub fn msg(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an error from a message.\n","sig":null,"attributes":[{"value":"/ Create an error from a message.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/error.rs","byte_start":11722,"byte_end":11757,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fill","qualname":"::fill","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":48},{"krate":0,"index":52}],"decl_id":null,"docs":" Deferred value initialization.","sig":null,"attributes":[{"value":"/ Deferred value initialization.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":12993,"byte_end":13027,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13028,"byte_end":13031,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`Fill`] trait is a way to bridge APIs that may not be directly","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13032,"byte_end":13103,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ compatible with other constructor methods.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13104,"byte_end":13150,"line_start":4,"line_end":4,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13151,"byte_end":13154,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The `Fill` trait is automatically implemented for closures, so can usually","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13155,"byte_end":13233,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ be used in libraries that can't implement the trait themselves.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13234,"byte_end":13301,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13302,"byte_end":13305,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13306,"byte_end":13313,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use value_bag::{ValueBag, fill::Slot};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13314,"byte_end":13356,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13357,"byte_end":13360,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from_fill(&|slot: &mut Slot| {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13361,"byte_end":13417,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/     #[derive(Debug)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13418,"byte_end":13442,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/     struct MyShortLivedValue;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13443,"byte_end":13476,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13477,"byte_end":13480,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/     slot.fill_debug(&MyShortLivedValue)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13481,"byte_end":13524,"line_start":16,"line_end":16,"column_start":1,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13525,"byte_end":13532,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13533,"byte_end":13536,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"MyShortLivedValue\", format!(\"{:?}\", value));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13537,"byte_end":13597,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13598,"byte_end":13605,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13606,"byte_end":13609,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The trait can also be implemented manually:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13610,"byte_end":13657,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13658,"byte_end":13661,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13662,"byte_end":13669,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13670,"byte_end":13696,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ use value_bag::{ValueBag, Error, fill::{Slot, Fill}};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13697,"byte_end":13754,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13755,"byte_end":13758,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ struct FillDebug;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13759,"byte_end":13780,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13781,"byte_end":13784,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ impl Fill for FillDebug {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13785,"byte_end":13814,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/     fn fill(&self, slot: &mut Slot) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13815,"byte_end":13877,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/         slot.fill_debug(&42i64 as &dyn Debug)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13878,"byte_end":13927,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13928,"byte_end":13937,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13938,"byte_end":13943,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13944,"byte_end":13947,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from_fill(&FillDebug);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13948,"byte_end":13996,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":13997,"byte_end":14000,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(None, value.to_i64());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14001,"byte_end":14038,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14039,"byte_end":14046,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14228,"byte_end":14237,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"from_fill","qualname":"<ValueBag>::from_fill","value":"pub fn from_fill<T>(&'v T) -> Self where T: Fill","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a fillable slot.\n","sig":null,"attributes":[{"value":"/ Get a value from a fillable slot.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14179,"byte_end":14216,"line_start":47,"line_end":47,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14688,"byte_end":14692,"line_start":63,"line_end":63,"column_start":11,"column_end":15},"name":"Fill","qualname":"::fill::Fill","value":"Fill","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":" A type that requires extra work to convert into a [`ValueBag`](../struct.ValueBag.html).","sig":null,"attributes":[{"value":"/ A type that requires extra work to convert into a [`ValueBag`](../struct.ValueBag.html).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14379,"byte_end":14471,"line_start":58,"line_end":58,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14472,"byte_end":14475,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This trait is an advanced initialization API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14476,"byte_end":14525,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/ It's intended for erased values coming from other logging frameworks that may need","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14526,"byte_end":14612,"line_start":61,"line_end":61,"column_start":1,"column_end":87}},{"value":"/ to perform extra work to determine the concrete type to use.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14613,"byte_end":14677,"line_start":62,"line_end":62,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14724,"byte_end":14728,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"fill","qualname":"::fill::Fill::fill","value":"pub fn fill(&Self, &mut Slot) -> Result<(), Error>","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Fill a value.\n","sig":null,"attributes":[{"value":"/ Fill a value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14699,"byte_end":14716,"line_start":64,"line_end":64,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":43},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15016,"byte_end":15020,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"Slot","qualname":"::fill::Slot","value":"Slot {  }","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" A value slot to fill using the [`Fill`](trait.Fill.html) trait.\n","sig":null,"attributes":[{"value":"/ A value slot to fill using the [`Fill`](trait.Fill.html) trait.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14937,"byte_end":15004,"line_start":77,"line_end":77,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15955,"byte_end":15963,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"fill_any","qualname":"<Slot>::fill_any","value":"pub fn fill_any<T>(&mut Self, T) -> Result<(), Error> where T: Into<ValueBag>","parent":null,"children":[],"decl_id":null,"docs":" Fill the slot with a value.","sig":null,"attributes":[{"value":"/ Fill the slot with a value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15712,"byte_end":15743,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15748,"byte_end":15751,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The given value doesn't need to satisfy any particular lifetime constraints.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15756,"byte_end":15836,"line_start":109,"line_end":109,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15841,"byte_end":15844,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15849,"byte_end":15861,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15866,"byte_end":15869,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Calling more than a single `fill` method on this slot will panic.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15874,"byte_end":15943,"line_start":113,"line_end":113,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31457,"byte_end":31463,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<ValueBag>::to_u64","value":"pub fn to_u64(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `u64` from this value.","sig":null,"attributes":[{"value":"/ Try get a `u64` from this value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31272,"byte_end":31308,"line_start":36,"line_end":36,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31313,"byte_end":31316,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31321,"byte_end":31389,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31394,"byte_end":31445,"line_start":39,"line_end":39,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31738,"byte_end":31744,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<ValueBag>::to_i64","value":"pub fn to_i64(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `i64` from this value.","sig":null,"attributes":[{"value":"/ Try get a `i64` from this value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31553,"byte_end":31589,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31594,"byte_end":31597,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31602,"byte_end":31670,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31675,"byte_end":31726,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32020,"byte_end":32027,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"to_u128","qualname":"<ValueBag>::to_u128","value":"pub fn to_u128(&Self) -> Option<u128>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `u128` from this value.","sig":null,"attributes":[{"value":"/ Try get a `u128` from this value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31834,"byte_end":31871,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31876,"byte_end":31879,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31884,"byte_end":31952,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31957,"byte_end":32008,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32305,"byte_end":32312,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"to_i128","qualname":"<ValueBag>::to_i128","value":"pub fn to_i128(&Self) -> Option<i128>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `i128` from this value.","sig":null,"attributes":[{"value":"/ Try get a `i128` from this value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32119,"byte_end":32156,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32161,"byte_end":32164,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32169,"byte_end":32237,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32242,"byte_end":32293,"line_start":63,"line_end":63,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32589,"byte_end":32595,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<ValueBag>::to_f64","value":"pub fn to_f64(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `f64` from this value.","sig":null,"attributes":[{"value":"/ Try get a `f64` from this value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32404,"byte_end":32440,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32445,"byte_end":32448,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32453,"byte_end":32521,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32526,"byte_end":32577,"line_start":71,"line_end":71,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32871,"byte_end":32878,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"to_bool","qualname":"<ValueBag>::to_bool","value":"pub fn to_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `bool` from this value.","sig":null,"attributes":[{"value":"/ Try get a `bool` from this value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32685,"byte_end":32722,"line_start":76,"line_end":76,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32727,"byte_end":32730,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32735,"byte_end":32803,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32808,"byte_end":32859,"line_start":79,"line_end":79,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33156,"byte_end":33163,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"to_char","qualname":"<ValueBag>::to_char","value":"pub fn to_char(&Self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `char` from this value.","sig":null,"attributes":[{"value":"/ Try get a `char` from this value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":32970,"byte_end":33007,"line_start":84,"line_end":84,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33012,"byte_end":33015,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33020,"byte_end":33088,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33093,"byte_end":33144,"line_start":87,"line_end":87,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33437,"byte_end":33452,"line_start":96,"line_end":96,"column_start":12,"column_end":27},"name":"to_borrowed_str","qualname":"<ValueBag>::to_borrowed_str","value":"pub fn to_borrowed_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `str` from this value.","sig":null,"attributes":[{"value":"/ Try get a `str` from this value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33255,"byte_end":33291,"line_start":92,"line_end":92,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33296,"byte_end":33299,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types. It won't allocate an owned","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33304,"byte_end":33376,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ `String` if the value is a complex type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33381,"byte_end":33425,"line_start":95,"line_end":95,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33616,"byte_end":33618,"line_start":101,"line_end":101,"column_start":12,"column_end":14},"name":"is","qualname":"<ValueBag>::is","value":"pub fn is<T: 'static>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether this value can be downcast to `T`.\n","sig":null,"attributes":[{"value":"/ Check whether this value can be downcast to `T`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33552,"byte_end":33604,"line_start":100,"line_end":100,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33749,"byte_end":33761,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<ValueBag>::downcast_ref","value":"pub fn downcast_ref<T: 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Try downcast this value to `T`.\n","sig":null,"attributes":[{"value":"/ Try downcast this value to `T`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":33702,"byte_end":33737,"line_start":105,"line_end":105,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56343,"byte_end":56356,"line_start":15,"line_end":15,"column_start":12,"column_end":25},"name":"capture_debug","qualname":"<ValueBag>::capture_debug","value":"pub fn capture_debug<T>(&'v T) -> Self where T: Debug + 'static","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a debuggable type.","sig":null,"attributes":[{"value":"/ Get a value from a debuggable type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56136,"byte_end":56175,"line_start":11,"line_end":11,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56180,"byte_end":56183,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ This method will attempt to capture the given value as a well-known primitive","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56188,"byte_end":56269,"line_start":13,"line_end":13,"column_start":5,"column_end":86}},{"value":"/ before resorting to using its `Debug` implementation.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56274,"byte_end":56331,"line_start":14,"line_end":14,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56841,"byte_end":56856,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"capture_display","qualname":"<ValueBag>::capture_display","value":"pub fn capture_display<T>(&'v T) -> Self where T: Display + 'static","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a displayable type.","sig":null,"attributes":[{"value":"/ Get a value from a displayable type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56631,"byte_end":56671,"line_start":27,"line_end":27,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56676,"byte_end":56679,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This method will attempt to capture the given value as a well-known primitive","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56684,"byte_end":56765,"line_start":29,"line_end":29,"column_start":5,"column_end":86}},{"value":"/ before resorting to using its `Display` implementation.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56770,"byte_end":56829,"line_start":30,"line_end":30,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":57212,"byte_end":57222,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"from_debug","qualname":"<ValueBag>::from_debug","value":"pub fn from_debug<T>(&'v T) -> Self where T: Debug","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a debuggable type without capturing support.\n","sig":null,"attributes":[{"value":"/ Get a value from a debuggable type without capturing support.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":57135,"byte_end":57200,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":57450,"byte_end":57462,"line_start":54,"line_end":54,"column_start":12,"column_end":24},"name":"from_display","qualname":"<ValueBag>::from_display","value":"pub fn from_display<T>(&'v T) -> Self where T: Display","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a displayable type without capturing support.\n","sig":null,"attributes":[{"value":"/ Get a value from a displayable type without capturing support.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":57372,"byte_end":57438,"line_start":53,"line_end":53,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":57693,"byte_end":57707,"line_start":64,"line_end":64,"column_start":12,"column_end":26},"name":"from_dyn_debug","qualname":"<ValueBag>::from_dyn_debug","value":"pub fn from_dyn_debug(&'v dyn Debug) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a debuggable type without capturing support.\n","sig":null,"attributes":[{"value":"/ Get a value from a debuggable type without capturing support.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":57616,"byte_end":57681,"line_start":63,"line_end":63,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":57908,"byte_end":57924,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"from_dyn_display","qualname":"<ValueBag>::from_dyn_display","value":"pub fn from_dyn_display(&'v dyn Display) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a displayable type without capturing support.\n","sig":null,"attributes":[{"value":"/ Get a value from a displayable type without capturing support.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":57830,"byte_end":57896,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58335,"byte_end":58345,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"fill_debug","qualname":"<Slot>::fill_debug","value":"pub fn fill_debug<T>(&mut Self, T) -> Result<(), Error> where T: Debug","parent":null,"children":[],"decl_id":null,"docs":" Fill the slot with a debuggable value.","sig":null,"attributes":[{"value":"/ Fill the slot with a debuggable value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58081,"byte_end":58123,"line_start":79,"line_end":79,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58128,"byte_end":58131,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The given value doesn't need to satisfy any particular lifetime constraints.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58136,"byte_end":58216,"line_start":81,"line_end":81,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58221,"byte_end":58224,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58229,"byte_end":58241,"line_start":83,"line_end":83,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58246,"byte_end":58249,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Calling more than a single `fill` method on this slot will panic.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58254,"byte_end":58323,"line_start":85,"line_end":85,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58742,"byte_end":58754,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"fill_display","qualname":"<Slot>::fill_display","value":"pub fn fill_display<T>(&mut Self, T) -> Result<(), Error> where T: Display","parent":null,"children":[],"decl_id":null,"docs":" Fill the slot with a displayable value.","sig":null,"attributes":[{"value":"/ Fill the slot with a displayable value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58487,"byte_end":58530,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58535,"byte_end":58538,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The given value doesn't need to satisfy any particular lifetime constraints.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58543,"byte_end":58623,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58628,"byte_end":58631,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58636,"byte_end":58648,"line_start":97,"line_end":97,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58653,"byte_end":58656,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Calling more than a single `fill` method on this slot will panic.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58661,"byte_end":58730,"line_start":99,"line_end":99,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":372},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::visit","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":400},{"krate":0,"index":414}],"decl_id":null,"docs":" Value inspection.","sig":null,"attributes":[{"value":"/ Value inspection.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67286,"byte_end":67307,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67308,"byte_end":67311,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`Visit`] trait provides a simple visitor API that can be used to inspect","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67312,"byte_end":67393,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ the structure of primitives stored in a [`ValueBag`](../struct.ValueBag.html).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67394,"byte_end":67476,"line_start":4,"line_end":4,"column_start":1,"column_end":83}},{"value":"/ More complex datatypes can then be handled using `std::fmt`, `sval`, or `serde`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67477,"byte_end":67561,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67562,"byte_end":67565,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67566,"byte_end":67573,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ #[cfg(not(feature = \"std\"))] fn main() {}","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67574,"byte_end":67619,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/ #[cfg(feature = \"std\")]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67620,"byte_end":67647,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67648,"byte_end":67707,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ # fn escape(buf: &[u8]) -> &[u8] { buf }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67708,"byte_end":67752,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ # fn itoa_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67753,"byte_end":67803,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/ # fn ryu_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67804,"byte_end":67853,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ # use std::io::Write;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67854,"byte_end":67879,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/ use value_bag::{ValueBag, Error, visit::Visit};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67880,"byte_end":67931,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67932,"byte_end":67935,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ // Implement some simple custom serialization","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67936,"byte_end":67985,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/ struct MyVisit(Vec<u8>);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":67986,"byte_end":68014,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ impl<'v> Visit<'v> for MyVisit {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68015,"byte_end":68051,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/     fn visit_any(&mut self, v: ValueBag) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68052,"byte_end":68119,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/         // Fallback to `Debug` if we didn't visit the value specially","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68120,"byte_end":68193,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/         write!(&mut self.0, \"{:?}\", v).map_err(|_| Error::msg(\"failed to write value\"))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68194,"byte_end":68285,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68286,"byte_end":68295,"line_start":23,"line_end":23,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68296,"byte_end":68299,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     fn visit_u64(&mut self, v: u64) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68300,"byte_end":68362,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68363,"byte_end":68424,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68425,"byte_end":68443,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68444,"byte_end":68453,"line_start":28,"line_end":28,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68454,"byte_end":68457,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     fn visit_i64(&mut self, v: i64) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68458,"byte_end":68520,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68521,"byte_end":68582,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68583,"byte_end":68601,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68602,"byte_end":68611,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68612,"byte_end":68615,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     fn visit_f64(&mut self, v: f64) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68616,"byte_end":68678,"line_start":35,"line_end":35,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(ryu_fmt(v).as_slice());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68679,"byte_end":68739,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68740,"byte_end":68758,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68759,"byte_end":68768,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68769,"byte_end":68772,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     fn visit_str(&mut self, v: &str) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68773,"byte_end":68836,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68837,"byte_end":68868,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/         self.0.extend_from_slice(escape(v.as_bytes()));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68869,"byte_end":68928,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68929,"byte_end":68960,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68961,"byte_end":68979,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68980,"byte_end":68989,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68990,"byte_end":68993,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     fn visit_bool(&mut self, v: bool) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":68994,"byte_end":69058,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/         self.0.extend_from_slice(if v { b\"true\" } else { b\"false\" });","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69059,"byte_end":69132,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69133,"byte_end":69151,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69152,"byte_end":69161,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69162,"byte_end":69167,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69168,"byte_end":69171,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i64);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69172,"byte_end":69210,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69211,"byte_end":69214,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut visitor = MyVisit(vec![]);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69215,"byte_end":69253,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/ value.visit(&mut visitor)?;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69254,"byte_end":69285,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69286,"byte_end":69298,"line_start":57,"line_end":57,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69299,"byte_end":69306,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69307,"byte_end":69314,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":387},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69435,"byte_end":69440,"line_start":67,"line_end":67,"column_start":11,"column_end":16},"name":"Visit","qualname":"::visit::Visit","value":"Visit<'v>","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"decl_id":null,"docs":" A visitor for a `ValueBag`.\n","sig":null,"attributes":[{"value":"/ A visitor for a `ValueBag`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69393,"byte_end":69424,"line_start":66,"line_end":66,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69808,"byte_end":69817,"line_start":74,"line_end":74,"column_start":8,"column_end":17},"name":"visit_any","qualname":"::visit::Visit::visit_any","value":"pub fn visit_any(&mut Self, ValueBag) -> Result<(), Error>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a `ValueBag`.","sig":null,"attributes":[{"value":"/ Visit a `ValueBag`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69451,"byte_end":69474,"line_start":68,"line_end":68,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69479,"byte_end":69482,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This is the only required method on `Visit` and acts as a fallback for any","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69487,"byte_end":69565,"line_start":70,"line_end":70,"column_start":5,"column_end":83}},{"value":"/ more specific methods that aren't overridden.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69570,"byte_end":69619,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"/ The `ValueBag` may be formatted using its `fmt::Debug` or `fmt::Display` implementation,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69624,"byte_end":69716,"line_start":72,"line_end":72,"column_start":5,"column_end":97}},{"value":"/ or serialized using its `sval::Value` or `serde::Serialize` implementation.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69721,"byte_end":69800,"line_start":73,"line_end":73,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69933,"byte_end":69942,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"visit_u64","qualname":"::visit::Visit::visit_u64","value":"pub fn visit_u64(&mut Self, u64) -> Result<(), Error>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Visit an unsigned integer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69873,"byte_end":69903,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"cfg(not(test))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":69908,"byte_end":69925,"line_start":77,"line_end":77,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70173,"byte_end":70182,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"visit_i64","qualname":"::visit::Visit::visit_i64","value":"pub fn visit_i64(&mut Self, i64) -> Result<(), Error>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a signed integer.\n","sig":null,"attributes":[{"value":"/ Visit a signed integer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70116,"byte_end":70143,"line_start":84,"line_end":84,"column_start":5,"column_end":32}},{"value":"cfg(not(test))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70148,"byte_end":70165,"line_start":85,"line_end":85,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70419,"byte_end":70429,"line_start":94,"line_end":94,"column_start":8,"column_end":18},"name":"visit_u128","qualname":"::visit::Visit::visit_u128","value":"pub fn visit_u128(&mut Self, u128) -> Result<(), Error>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a big unsigned integer.\n","sig":null,"attributes":[{"value":"/ Visit a big unsigned integer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70356,"byte_end":70389,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"cfg(not(test))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70394,"byte_end":70411,"line_start":93,"line_end":93,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70667,"byte_end":70677,"line_start":102,"line_end":102,"column_start":8,"column_end":18},"name":"visit_i128","qualname":"::visit::Visit::visit_i128","value":"pub fn visit_i128(&mut Self, i128) -> Result<(), Error>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a big signed integer.\n","sig":null,"attributes":[{"value":"/ Visit a big signed integer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70606,"byte_end":70637,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"cfg(not(test))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70642,"byte_end":70659,"line_start":101,"line_end":101,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70911,"byte_end":70920,"line_start":110,"line_end":110,"column_start":8,"column_end":17},"name":"visit_f64","qualname":"::visit::Visit::visit_f64","value":"pub fn visit_f64(&mut Self, f64) -> Result<(), Error>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a floating point.\n","sig":null,"attributes":[{"value":"/ Visit a floating point.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70854,"byte_end":70881,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"cfg(not(test))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":70886,"byte_end":70903,"line_start":109,"line_end":109,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71144,"byte_end":71154,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"visit_bool","qualname":"::visit::Visit::visit_bool","value":"pub fn visit_bool(&mut Self, bool) -> Result<(), Error>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a boolean.\n","sig":null,"attributes":[{"value":"/ Visit a boolean.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71094,"byte_end":71114,"line_start":116,"line_end":116,"column_start":5,"column_end":25}},{"value":"cfg(not(test))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71119,"byte_end":71136,"line_start":117,"line_end":117,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71380,"byte_end":71389,"line_start":126,"line_end":126,"column_start":8,"column_end":17},"name":"visit_str","qualname":"::visit::Visit::visit_str","value":"pub fn visit_str(&mut Self, &str) -> Result<(), Error>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a string.\n","sig":null,"attributes":[{"value":"/ Visit a string.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71331,"byte_end":71350,"line_start":124,"line_end":124,"column_start":5,"column_end":24}},{"value":"cfg(not(test))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71355,"byte_end":71372,"line_start":125,"line_end":125,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71614,"byte_end":71632,"line_start":134,"line_end":134,"column_start":8,"column_end":26},"name":"visit_borrowed_str","qualname":"::visit::Visit::visit_borrowed_str","value":"pub fn visit_borrowed_str(&mut Self, &'v str) -> Result<(), Error>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a string.\n","sig":null,"attributes":[{"value":"/ Visit a string.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71565,"byte_end":71584,"line_start":132,"line_end":132,"column_start":5,"column_end":24}},{"value":"cfg(not(test))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71589,"byte_end":71606,"line_start":133,"line_end":133,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71876,"byte_end":71886,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"visit_char","qualname":"::visit::Visit::visit_char","value":"pub fn visit_char(&mut Self, char) -> Result<(), Error>","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a Unicode character.\n","sig":null,"attributes":[{"value":"/ Visit a Unicode character.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71816,"byte_end":71846,"line_start":140,"line_end":140,"column_start":5,"column_end":35}},{"value":"cfg(not(test))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":71851,"byte_end":71868,"line_start":141,"line_end":141,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":74523,"byte_end":74528,"line_start":235,"line_end":235,"column_start":12,"column_end":17},"name":"visit","qualname":"<ValueBag>::visit","value":"pub fn visit<impl Visit<'v>: Visit>(&Self, impl Visit<'v>)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":631},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10389,"byte_end":10397,"line_start":352,"line_end":352,"column_start":12,"column_end":20},"name":"ValueBag","qualname":"::ValueBag","value":"ValueBag {  }","parent":null,"children":[{"krate":0,"index":633}],"decl_id":null,"docs":" A dynamic structured value.","sig":null,"attributes":[{"value":"/ A dynamic structured value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":753,"byte_end":784,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":785,"byte_end":788,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Capturing values","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":789,"byte_end":811,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":812,"byte_end":815,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ There are a few ways to capture a value:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":816,"byte_end":860,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":861,"byte_end":864,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - Using the `ValueBag::capture_*` and `ValueBag::from_*` methods.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":865,"byte_end":934,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ - Using the standard `From` trait.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":935,"byte_end":973,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ - Using the `Fill` API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":974,"byte_end":1001,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1002,"byte_end":1005,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Using the `ValueBag::capture_*` methods","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1006,"byte_end":1052,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1053,"byte_end":1056,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ `ValueBag` offers a few constructor methods that capture values of different kinds.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1057,"byte_end":1144,"line_start":44,"line_end":44,"column_start":1,"column_end":88}},{"value":"/ These methods require a `T: 'static` to support downcasting.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1145,"byte_end":1209,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1210,"byte_end":1213,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1214,"byte_end":1221,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1222,"byte_end":1250,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1251,"byte_end":1254,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::capture_debug(&42i32);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1255,"byte_end":1303,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1304,"byte_end":1307,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(42), value.to_i64());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1308,"byte_end":1349,"line_start":52,"line_end":52,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1350,"byte_end":1357,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1358,"byte_end":1361,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Capturing a value using these methods will retain type information so that","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1362,"byte_end":1440,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ the contents of the bag can be serialized using an appropriate type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1441,"byte_end":1513,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1514,"byte_end":1517,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ For cases where the `'static` bound can't be satisfied, there's also a few","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1518,"byte_end":1596,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ constructors that exclude it.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1597,"byte_end":1630,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1631,"byte_end":1634,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1635,"byte_end":1642,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1643,"byte_end":1669,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1670,"byte_end":1698,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1699,"byte_end":1702,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from_debug(&42i32);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1703,"byte_end":1748,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1749,"byte_end":1752,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(None, value.to_i64());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1753,"byte_end":1790,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1791,"byte_end":1798,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1799,"byte_end":1802,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ These `ValueBag::from_*` methods are lossy though and `ValueBag::capture_*` should be preferred.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1803,"byte_end":1903,"line_start":70,"line_end":70,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1904,"byte_end":1907,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ## Using the standard `From` trait","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1908,"byte_end":1946,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1947,"byte_end":1950,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Primitive types can be converted into a `ValueBag` using the standard `From` trait.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":1951,"byte_end":2038,"line_start":74,"line_end":74,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2039,"byte_end":2042,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2043,"byte_end":2050,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2051,"byte_end":2079,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2080,"byte_end":2083,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i32);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2084,"byte_end":2122,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2123,"byte_end":2126,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(42), value.to_i64());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2127,"byte_end":2168,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2169,"byte_end":2176,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2177,"byte_end":2180,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ## Using the `Fill` API","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2181,"byte_end":2208,"line_start":84,"line_end":84,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2209,"byte_end":2212,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The [`fill`] module provides a way to bridge APIs that may not be directly","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2213,"byte_end":2291,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ compatible with other constructor methods.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2292,"byte_end":2338,"line_start":87,"line_end":87,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2339,"byte_end":2342,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ The `Fill` trait is automatically implemented for closures, so can usually","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2343,"byte_end":2421,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"/ be used in libraries that can't implement the trait themselves.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2422,"byte_end":2489,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2494,"byte_end":2501,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use value_bag::{ValueBag, fill::Slot};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2502,"byte_end":2544,"line_start":93,"line_end":93,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2545,"byte_end":2548,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from_fill(&|slot: &mut Slot| {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2549,"byte_end":2605,"line_start":95,"line_end":95,"column_start":1,"column_end":57}},{"value":"/     #[derive(Debug)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2606,"byte_end":2630,"line_start":96,"line_end":96,"column_start":1,"column_end":25}},{"value":"/     struct MyShortLivedValue;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2631,"byte_end":2664,"line_start":97,"line_end":97,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2665,"byte_end":2668,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/     slot.fill_debug(&MyShortLivedValue)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2669,"byte_end":2712,"line_start":99,"line_end":99,"column_start":1,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2713,"byte_end":2720,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2721,"byte_end":2724,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"MyShortLivedValue\", format!(\"{:?}\", value));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2725,"byte_end":2785,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2786,"byte_end":2793,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2794,"byte_end":2797,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The trait can also be implemented manually:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2798,"byte_end":2845,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2846,"byte_end":2849,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2850,"byte_end":2857,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2858,"byte_end":2884,"line_start":108,"line_end":108,"column_start":1,"column_end":27}},{"value":"/ use value_bag::{ValueBag, Error, fill::{Slot, Fill}};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2885,"byte_end":2942,"line_start":109,"line_end":109,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2943,"byte_end":2946,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ struct FillDebug;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2947,"byte_end":2968,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2969,"byte_end":2972,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ impl Fill for FillDebug {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":2973,"byte_end":3002,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/     fn fill(&self, slot: &mut Slot) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3003,"byte_end":3065,"line_start":114,"line_end":114,"column_start":1,"column_end":63}},{"value":"/         slot.fill_debug(&42i32 as &dyn Debug)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3066,"byte_end":3115,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3116,"byte_end":3125,"line_start":116,"line_end":116,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3126,"byte_end":3131,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3132,"byte_end":3135,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from_fill(&FillDebug);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3136,"byte_end":3184,"line_start":119,"line_end":119,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3185,"byte_end":3188,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(None, value.to_i64());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3189,"byte_end":3226,"line_start":121,"line_end":121,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3227,"byte_end":3234,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3235,"byte_end":3238,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ # Inspecting values","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3239,"byte_end":3262,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3263,"byte_end":3266,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Once you have a `ValueBag` there are also a few ways to inspect it:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3267,"byte_end":3338,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3339,"byte_end":3342,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - Using `std::fmt`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3343,"byte_end":3365,"line_start":128,"line_end":128,"column_start":1,"column_end":23}},{"value":"/ - Using `sval`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3366,"byte_end":3384,"line_start":129,"line_end":129,"column_start":1,"column_end":19}},{"value":"/ - Using `serde`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3385,"byte_end":3404,"line_start":130,"line_end":130,"column_start":1,"column_end":20}},{"value":"/ - Using the `ValueBag::visit` method.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3405,"byte_end":3446,"line_start":131,"line_end":131,"column_start":1,"column_end":42}},{"value":"/ - Using the `ValueBag::to_*` methods.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3447,"byte_end":3488,"line_start":132,"line_end":132,"column_start":1,"column_end":42}},{"value":"/ - Using the `ValueBag::downcast_ref` method.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3489,"byte_end":3537,"line_start":133,"line_end":133,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3538,"byte_end":3541,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Using the `ValueBag::visit` method","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3542,"byte_end":3583,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3584,"byte_end":3587,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ The [`visit`] module provides a simple visitor API that can be used to inspect","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3588,"byte_end":3670,"line_start":137,"line_end":137,"column_start":1,"column_end":83}},{"value":"/ the structure of primitives stored in a `ValueBag`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3671,"byte_end":3726,"line_start":138,"line_end":138,"column_start":1,"column_end":56}},{"value":"/ More complex datatypes can then be handled using `std::fmt`, `sval`, or `serde`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3727,"byte_end":3811,"line_start":139,"line_end":139,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3812,"byte_end":3815,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3816,"byte_end":3823,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ #[cfg(not(feature = \"std\"))] fn main() {}","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3824,"byte_end":3869,"line_start":142,"line_end":142,"column_start":1,"column_end":46}},{"value":"/ #[cfg(feature = \"std\")]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3870,"byte_end":3897,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3898,"byte_end":3957,"line_start":144,"line_end":144,"column_start":1,"column_end":60}},{"value":"/ # fn escape(buf: &[u8]) -> &[u8] { buf }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":3958,"byte_end":4002,"line_start":145,"line_end":145,"column_start":1,"column_end":45}},{"value":"/ # fn itoa_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4003,"byte_end":4053,"line_start":146,"line_end":146,"column_start":1,"column_end":51}},{"value":"/ # fn ryu_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4054,"byte_end":4103,"line_start":147,"line_end":147,"column_start":1,"column_end":50}},{"value":"/ # use std::io::Write;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4104,"byte_end":4129,"line_start":148,"line_end":148,"column_start":1,"column_end":26}},{"value":"/ use value_bag::{ValueBag, Error, visit::Visit};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4130,"byte_end":4181,"line_start":149,"line_end":149,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4182,"byte_end":4185,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ // Implement some simple custom serialization","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4186,"byte_end":4235,"line_start":151,"line_end":151,"column_start":1,"column_end":50}},{"value":"/ struct MyVisit(Vec<u8>);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4236,"byte_end":4264,"line_start":152,"line_end":152,"column_start":1,"column_end":29}},{"value":"/ impl<'v> Visit<'v> for MyVisit {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4265,"byte_end":4301,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"/     fn visit_any(&mut self, v: ValueBag) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4302,"byte_end":4369,"line_start":154,"line_end":154,"column_start":1,"column_end":68}},{"value":"/         // Fallback to `Debug` if we didn't visit the value specially","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4370,"byte_end":4443,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/         write!(&mut self.0, \"{:?}\", v).map_err(|_| Error::msg(\"failed to write value\"))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4444,"byte_end":4535,"line_start":156,"line_end":156,"column_start":1,"column_end":92}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4536,"byte_end":4545,"line_start":157,"line_end":157,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4546,"byte_end":4549,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/     fn visit_u64(&mut self, v: u64) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4550,"byte_end":4612,"line_start":159,"line_end":159,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4613,"byte_end":4674,"line_start":160,"line_end":160,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4675,"byte_end":4693,"line_start":161,"line_end":161,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4694,"byte_end":4703,"line_start":162,"line_end":162,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4704,"byte_end":4707,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     fn visit_i64(&mut self, v: i64) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4708,"byte_end":4770,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4771,"byte_end":4832,"line_start":165,"line_end":165,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4833,"byte_end":4851,"line_start":166,"line_end":166,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4852,"byte_end":4861,"line_start":167,"line_end":167,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4862,"byte_end":4865,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/     fn visit_f64(&mut self, v: f64) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4866,"byte_end":4928,"line_start":169,"line_end":169,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(ryu_fmt(v).as_slice());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4929,"byte_end":4989,"line_start":170,"line_end":170,"column_start":1,"column_end":61}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":4990,"byte_end":5008,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5009,"byte_end":5018,"line_start":172,"line_end":172,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5019,"byte_end":5022,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/     fn visit_str(&mut self, v: &str) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5023,"byte_end":5086,"line_start":174,"line_end":174,"column_start":1,"column_end":64}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5087,"byte_end":5118,"line_start":175,"line_end":175,"column_start":1,"column_end":32}},{"value":"/         self.0.extend_from_slice(escape(v.as_bytes()));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5119,"byte_end":5178,"line_start":176,"line_end":176,"column_start":1,"column_end":60}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5179,"byte_end":5210,"line_start":177,"line_end":177,"column_start":1,"column_end":32}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5211,"byte_end":5229,"line_start":178,"line_end":178,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5230,"byte_end":5239,"line_start":179,"line_end":179,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5240,"byte_end":5243,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     fn visit_bool(&mut self, v: bool) -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5244,"byte_end":5308,"line_start":181,"line_end":181,"column_start":1,"column_end":65}},{"value":"/         self.0.extend_from_slice(if v { b\"true\" } else { b\"false\" });","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5309,"byte_end":5382,"line_start":182,"line_end":182,"column_start":1,"column_end":74}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5383,"byte_end":5401,"line_start":183,"line_end":183,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5402,"byte_end":5411,"line_start":184,"line_end":184,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5412,"byte_end":5417,"line_start":185,"line_end":185,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5418,"byte_end":5421,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i64);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5422,"byte_end":5460,"line_start":187,"line_end":187,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5461,"byte_end":5464,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let mut visitor = MyVisit(vec![]);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5465,"byte_end":5503,"line_start":189,"line_end":189,"column_start":1,"column_end":39}},{"value":"/ value.visit(&mut visitor)?;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5504,"byte_end":5535,"line_start":190,"line_end":190,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5536,"byte_end":5548,"line_start":191,"line_end":191,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5549,"byte_end":5556,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5557,"byte_end":5564,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5565,"byte_end":5568,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ## Using `std::fmt`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5569,"byte_end":5592,"line_start":195,"line_end":195,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5593,"byte_end":5596,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Any `ValueBag` can be formatted using the `std::fmt` machinery as either `Debug`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5597,"byte_end":5681,"line_start":197,"line_end":197,"column_start":1,"column_end":85}},{"value":"/ or `Display`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5682,"byte_end":5699,"line_start":198,"line_end":198,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5700,"byte_end":5703,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5704,"byte_end":5711,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5712,"byte_end":5740,"line_start":201,"line_end":201,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5741,"byte_end":5744,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(true);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5745,"byte_end":5782,"line_start":203,"line_end":203,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5783,"byte_end":5786,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"true\", format!(\"{:?}\", value));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5787,"byte_end":5834,"line_start":205,"line_end":205,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5835,"byte_end":5842,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5843,"byte_end":5846,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ ## Using `sval`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5847,"byte_end":5866,"line_start":208,"line_end":208,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5867,"byte_end":5870,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ When the `sval1` feature is enabled, any `ValueBag` can be serialized using `sval`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5871,"byte_end":5958,"line_start":210,"line_end":210,"column_start":1,"column_end":88}},{"value":"/ This makes it possible to visit any typed structure captured in the `ValueBag`,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":5959,"byte_end":6042,"line_start":211,"line_end":211,"column_start":1,"column_end":84}},{"value":"/ including complex datatypes like maps and sequences.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6043,"byte_end":6099,"line_start":212,"line_end":212,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6100,"byte_end":6103,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ `sval` doesn't need to allocate so can be used in no-std environments.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6104,"byte_end":6178,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6179,"byte_end":6182,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ First, enable the `sval1` feature in your `Cargo.toml`:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6183,"byte_end":6242,"line_start":216,"line_end":216,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6243,"byte_end":6246,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6247,"byte_end":6258,"line_start":218,"line_end":218,"column_start":1,"column_end":12}},{"value":"/ [dependencies.value-bag]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6259,"byte_end":6287,"line_start":219,"line_end":219,"column_start":1,"column_end":29}},{"value":"/ features = [\"sval1\"]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6288,"byte_end":6312,"line_start":220,"line_end":220,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6313,"byte_end":6320,"line_start":221,"line_end":221,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6321,"byte_end":6324,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ Then stream the contents of the `ValueBag` using `sval`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6325,"byte_end":6385,"line_start":223,"line_end":223,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6386,"byte_end":6389,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6390,"byte_end":6397,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ #[cfg(not(all(feature = \"std\", feature = \"sval1\")))] fn main() {}","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6398,"byte_end":6467,"line_start":226,"line_end":226,"column_start":1,"column_end":70}},{"value":"/ #[cfg(all(feature = \"std\", feature = \"sval1\"))]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6468,"byte_end":6519,"line_start":227,"line_end":227,"column_start":1,"column_end":52}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6520,"byte_end":6579,"line_start":228,"line_end":228,"column_start":1,"column_end":60}},{"value":"/ # extern crate sval1_json as sval_json;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6580,"byte_end":6623,"line_start":229,"line_end":229,"column_start":1,"column_end":44}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6624,"byte_end":6652,"line_start":230,"line_end":230,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6653,"byte_end":6656,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i64);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6657,"byte_end":6695,"line_start":232,"line_end":232,"column_start":1,"column_end":39}},{"value":"/ let json = sval_json::to_string(value)?;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6696,"byte_end":6740,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6741,"byte_end":6753,"line_start":234,"line_end":234,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6754,"byte_end":6761,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6762,"byte_end":6769,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6770,"byte_end":6773,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6774,"byte_end":6781,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ #[cfg(not(all(feature = \"std\", feature = \"sval1\")))] fn main() {}","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6782,"byte_end":6851,"line_start":239,"line_end":239,"column_start":1,"column_end":70}},{"value":"/ #[cfg(all(feature = \"std\", feature = \"sval1\"))]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6852,"byte_end":6903,"line_start":240,"line_end":240,"column_start":1,"column_end":52}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6904,"byte_end":6963,"line_start":241,"line_end":241,"column_start":1,"column_end":60}},{"value":"/ # extern crate sval1_lib as sval;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":6964,"byte_end":7001,"line_start":242,"line_end":242,"column_start":1,"column_end":38}},{"value":"/ # fn escape(buf: &[u8]) -> &[u8] { buf }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7002,"byte_end":7046,"line_start":243,"line_end":243,"column_start":1,"column_end":45}},{"value":"/ # fn itoa_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7047,"byte_end":7097,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ # fn ryu_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7098,"byte_end":7147,"line_start":245,"line_end":245,"column_start":1,"column_end":50}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7148,"byte_end":7176,"line_start":246,"line_end":246,"column_start":1,"column_end":29}},{"value":"/ use sval::stream::{self, Stream};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7177,"byte_end":7214,"line_start":247,"line_end":247,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7215,"byte_end":7218,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ // Implement some simple custom serialization","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7219,"byte_end":7268,"line_start":249,"line_end":249,"column_start":1,"column_end":50}},{"value":"/ struct MyStream(Vec<u8>);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7269,"byte_end":7298,"line_start":250,"line_end":250,"column_start":1,"column_end":30}},{"value":"/ impl Stream for MyStream {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7299,"byte_end":7329,"line_start":251,"line_end":251,"column_start":1,"column_end":31}},{"value":"/     fn u64(&mut self, v: u64) -> stream::Result {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7330,"byte_end":7383,"line_start":252,"line_end":252,"column_start":1,"column_end":54}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7384,"byte_end":7445,"line_start":253,"line_end":253,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7446,"byte_end":7464,"line_start":254,"line_end":254,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7465,"byte_end":7474,"line_start":255,"line_end":255,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7475,"byte_end":7478,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     fn i64(&mut self, v: i64) -> stream::Result {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7479,"byte_end":7532,"line_start":257,"line_end":257,"column_start":1,"column_end":54}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7533,"byte_end":7594,"line_start":258,"line_end":258,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7595,"byte_end":7613,"line_start":259,"line_end":259,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7614,"byte_end":7623,"line_start":260,"line_end":260,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7624,"byte_end":7627,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     fn f64(&mut self, v: f64) -> stream::Result {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7628,"byte_end":7681,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"/         self.0.extend_from_slice(ryu_fmt(v).as_slice());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7682,"byte_end":7742,"line_start":263,"line_end":263,"column_start":1,"column_end":61}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7743,"byte_end":7761,"line_start":264,"line_end":264,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7762,"byte_end":7771,"line_start":265,"line_end":265,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7772,"byte_end":7775,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     fn str(&mut self, v: &str) -> stream::Result {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7776,"byte_end":7830,"line_start":267,"line_end":267,"column_start":1,"column_end":55}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7831,"byte_end":7862,"line_start":268,"line_end":268,"column_start":1,"column_end":32}},{"value":"/         self.0.extend_from_slice(escape(v.as_bytes()));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7863,"byte_end":7922,"line_start":269,"line_end":269,"column_start":1,"column_end":60}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7923,"byte_end":7954,"line_start":270,"line_end":270,"column_start":1,"column_end":32}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7955,"byte_end":7973,"line_start":271,"line_end":271,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7974,"byte_end":7983,"line_start":272,"line_end":272,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7984,"byte_end":7987,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/     fn bool(&mut self, v: bool) -> stream::Result {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":7988,"byte_end":8043,"line_start":274,"line_end":274,"column_start":1,"column_end":56}},{"value":"/         self.0.extend_from_slice(if v { b\"true\" } else { b\"false\" });","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8044,"byte_end":8117,"line_start":275,"line_end":275,"column_start":1,"column_end":74}},{"value":"/         Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8118,"byte_end":8136,"line_start":276,"line_end":276,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8137,"byte_end":8146,"line_start":277,"line_end":277,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8147,"byte_end":8152,"line_start":278,"line_end":278,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8153,"byte_end":8156,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i64);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8157,"byte_end":8195,"line_start":280,"line_end":280,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8196,"byte_end":8199,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ let mut stream = MyStream(vec![]);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8200,"byte_end":8238,"line_start":282,"line_end":282,"column_start":1,"column_end":39}},{"value":"/ sval::stream(&mut stream, &value)?;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8239,"byte_end":8278,"line_start":283,"line_end":283,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8279,"byte_end":8291,"line_start":284,"line_end":284,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8292,"byte_end":8299,"line_start":285,"line_end":285,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8300,"byte_end":8307,"line_start":286,"line_end":286,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8308,"byte_end":8311,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ## Using `serde`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8312,"byte_end":8332,"line_start":288,"line_end":288,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8333,"byte_end":8336,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ When the `serde1` feature is enabled, any `ValueBag` can be serialized using `serde`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8337,"byte_end":8426,"line_start":290,"line_end":290,"column_start":1,"column_end":90}},{"value":"/ This makes it possible to visit any typed structure captured in the `ValueBag`,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8427,"byte_end":8510,"line_start":291,"line_end":291,"column_start":1,"column_end":84}},{"value":"/ including complex datatypes like maps and sequences.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8511,"byte_end":8567,"line_start":292,"line_end":292,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8568,"byte_end":8571,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ `serde` needs a few temporary allocations, so also brings in the `std` feature.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8572,"byte_end":8655,"line_start":294,"line_end":294,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8656,"byte_end":8659,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ First, enable the `serde1` feature in your `Cargo.toml`:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8660,"byte_end":8720,"line_start":296,"line_end":296,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8721,"byte_end":8724,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8725,"byte_end":8736,"line_start":298,"line_end":298,"column_start":1,"column_end":12}},{"value":"/ [dependencies.value-bag]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8737,"byte_end":8765,"line_start":299,"line_end":299,"column_start":1,"column_end":29}},{"value":"/ features = [\"serde1\"]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8766,"byte_end":8791,"line_start":300,"line_end":300,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8792,"byte_end":8799,"line_start":301,"line_end":301,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8800,"byte_end":8803,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ Then stream the contents of the `ValueBag` using `serde`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8804,"byte_end":8865,"line_start":303,"line_end":303,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8866,"byte_end":8869,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8870,"byte_end":8877,"line_start":305,"line_end":305,"column_start":1,"column_end":8}},{"value":"/ #[cfg(not(all(feature = \"std\", feature = \"serde1\")))] fn main() {}","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8878,"byte_end":8948,"line_start":306,"line_end":306,"column_start":1,"column_end":71}},{"value":"/ #[cfg(all(feature = \"std\", feature = \"serde1\"))]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":8949,"byte_end":9001,"line_start":307,"line_end":307,"column_start":1,"column_end":53}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9002,"byte_end":9061,"line_start":308,"line_end":308,"column_start":1,"column_end":60}},{"value":"/ # extern crate serde1_json as serde_json;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9062,"byte_end":9107,"line_start":309,"line_end":309,"column_start":1,"column_end":46}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9108,"byte_end":9136,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9137,"byte_end":9140,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i64);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9141,"byte_end":9179,"line_start":312,"line_end":312,"column_start":1,"column_end":39}},{"value":"/ let json = serde_json::to_string(&value)?;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9180,"byte_end":9226,"line_start":313,"line_end":313,"column_start":1,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9227,"byte_end":9239,"line_start":314,"line_end":314,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9240,"byte_end":9247,"line_start":315,"line_end":315,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9248,"byte_end":9255,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9256,"byte_end":9259,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ Also see [`serde.rs`](https://serde.rs) for more examples of writing your own serializers.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9260,"byte_end":9354,"line_start":318,"line_end":318,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9355,"byte_end":9358,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ ## Using the `ValueBag::to_*` methods","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9359,"byte_end":9400,"line_start":320,"line_end":320,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9401,"byte_end":9404,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ `ValueBag` provides a set of methods for attempting to pull a concrete value out.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9405,"byte_end":9490,"line_start":322,"line_end":322,"column_start":1,"column_end":86}},{"value":"/ These are useful for ad-hoc analysis but aren't intended for exhaustively serializing","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9491,"byte_end":9580,"line_start":323,"line_end":323,"column_start":1,"column_end":90}},{"value":"/ the contents of a `ValueBag`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9581,"byte_end":9614,"line_start":324,"line_end":324,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9615,"byte_end":9618,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9619,"byte_end":9626,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9627,"byte_end":9655,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9656,"byte_end":9659,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::capture_display(&42u64);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9660,"byte_end":9710,"line_start":329,"line_end":329,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9711,"byte_end":9714,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(42u64), value.to_u64());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9715,"byte_end":9759,"line_start":331,"line_end":331,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9760,"byte_end":9767,"line_start":332,"line_end":332,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9768,"byte_end":9771,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ ## Using the `ValueBag::downcast_ref` method","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9772,"byte_end":9820,"line_start":334,"line_end":334,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9821,"byte_end":9824,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ When a `ValueBag` is created using one of the `capture_*` constructors, it can be downcast","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9825,"byte_end":9919,"line_start":336,"line_end":336,"column_start":1,"column_end":95}},{"value":"/ back to its original value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9920,"byte_end":9951,"line_start":337,"line_end":337,"column_start":1,"column_end":32}},{"value":"/ This can also be useful for ad-hoc analysis where there's a common possible non-primitive","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":9952,"byte_end":10045,"line_start":338,"line_end":338,"column_start":1,"column_end":94}},{"value":"/ type that could be captured.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10046,"byte_end":10078,"line_start":339,"line_end":339,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10079,"byte_end":10082,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10083,"byte_end":10090,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug)] struct SystemTime;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10091,"byte_end":10132,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/ # fn now() -> SystemTime { SystemTime }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10133,"byte_end":10176,"line_start":343,"line_end":343,"column_start":1,"column_end":44}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10177,"byte_end":10205,"line_start":344,"line_end":344,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10206,"byte_end":10209,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ let timestamp = now();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10210,"byte_end":10236,"line_start":346,"line_end":346,"column_start":1,"column_end":27}},{"value":"/ let value = ValueBag::capture_debug(&timestamp);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10237,"byte_end":10289,"line_start":347,"line_end":347,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10290,"byte_end":10293,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ assert!(value.downcast_ref::<SystemTime>().is_some());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10294,"byte_end":10352,"line_start":349,"line_end":349,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":10353,"byte_end":10360,"line_start":350,"line_end":350,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/error.rs","byte_start":11710,"byte_end":11715,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/error.rs","byte_start":11895,"byte_end":11900,"line_start":26,"line_end":26,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/error.rs","byte_start":12222,"byte_end":12227,"line_start":38,"line_end":38,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14160,"byte_end":14168,"line_start":46,"line_end":46,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14795,"byte_end":14796,"line_start":68,"line_end":68,"column_start":18,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15126,"byte_end":15130,"line_start":83,"line_end":83,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15262,"byte_end":15266,"line_start":89,"line_end":89,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/impls.rs","byte_start":19271,"byte_end":19279,"line_start":5,"line_end":5,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31253,"byte_end":31261,"line_start":35,"line_end":35,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":34803,"byte_end":34811,"line_start":132,"line_end":132,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":34980,"byte_end":34991,"line_start":137,"line_end":137,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":38078,"byte_end":38082,"line_start":235,"line_end":235,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":38300,"byte_end":38309,"line_start":245,"line_end":245,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56117,"byte_end":56125,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58062,"byte_end":58066,"line_start":78,"line_end":78,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58955,"byte_end":58963,"line_start":110,"line_end":110,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":59152,"byte_end":59164,"line_start":114,"line_end":114,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":61562,"byte_end":61570,"line_start":207,"line_end":207,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":61761,"byte_end":61775,"line_start":211,"line_end":211,"column_start":54,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":23867,"byte_end":23875,"line_start":97,"line_end":97,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":24398,"byte_end":24406,"line_start":119,"line_end":119,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":26909,"byte_end":26918,"line_start":184,"line_end":184,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":27619,"byte_end":27628,"line_start":200,"line_end":200,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":27733,"byte_end":27742,"line_start":207,"line_end":207,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":27862,"byte_end":27871,"line_start":214,"line_end":214,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":27992,"byte_end":28001,"line_start":221,"line_end":221,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28122,"byte_end":28131,"line_start":228,"line_end":228,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28246,"byte_end":28255,"line_start":235,"line_end":235,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28375,"byte_end":28384,"line_start":242,"line_end":242,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28506,"byte_end":28515,"line_start":249,"line_end":249,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28633,"byte_end":28642,"line_start":256,"line_end":256,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28761,"byte_end":28770,"line_start":263,"line_end":263,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28889,"byte_end":28898,"line_start":270,"line_end":270,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29011,"byte_end":29020,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29138,"byte_end":29147,"line_start":284,"line_end":284,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29268,"byte_end":29277,"line_start":291,"line_end":291,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29395,"byte_end":29404,"line_start":298,"line_end":298,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29516,"byte_end":29525,"line_start":305,"line_end":305,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29637,"byte_end":29646,"line_start":312,"line_end":312,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29761,"byte_end":29770,"line_start":319,"line_end":319,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":74497,"byte_end":74505,"line_start":234,"line_end":234,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":74659,"byte_end":74666,"line_start":238,"line_end":238,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":626,"byte_end":630,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/lib.rs","byte_start":665,"byte_end":670,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":372}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/error.rs","byte_start":11710,"byte_end":11715,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/error.rs","byte_start":11895,"byte_end":11900,"line_start":26,"line_end":26,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":8898}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/error.rs","byte_start":12222,"byte_end":12227,"line_start":38,"line_end":38,"column_start":27,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14160,"byte_end":14168,"line_start":46,"line_end":46,"column_start":10,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":14795,"byte_end":14796,"line_start":68,"line_end":68,"column_start":18,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":41},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15126,"byte_end":15130,"line_start":83,"line_end":83,"column_start":29,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":43},"to":{"krate":1,"index":8891}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/fill.rs","byte_start":15262,"byte_end":15266,"line_start":89,"line_end":89,"column_start":14,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":43},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/impls.rs","byte_start":19271,"byte_end":19279,"line_start":5,"line_end":5,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":631},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":31253,"byte_end":31261,"line_start":35,"line_end":35,"column_start":10,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":34803,"byte_end":34811,"line_start":132,"line_end":132,"column_start":10,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":34980,"byte_end":34991,"line_start":137,"line_end":137,"column_start":42,"column_end":53},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":153},"to":{"krate":0,"index":301}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":38078,"byte_end":38082,"line_start":235,"line_end":235,"column_start":10,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/cast/mod.rs","byte_start":38300,"byte_end":38309,"line_start":245,"line_end":245,"column_start":10,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":56117,"byte_end":56125,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58062,"byte_end":58066,"line_start":78,"line_end":78,"column_start":14,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":43},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":58955,"byte_end":58963,"line_start":110,"line_end":110,"column_start":20,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":631},"to":{"krate":1,"index":8891}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":59152,"byte_end":59164,"line_start":114,"line_end":114,"column_start":54,"column_end":66},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":248},"to":{"krate":0,"index":301}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":61562,"byte_end":61570,"line_start":207,"line_end":207,"column_start":22,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":631},"to":{"krate":1,"index":8898}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/fmt.rs","byte_start":61761,"byte_end":61775,"line_start":211,"line_end":211,"column_start":54,"column_end":68},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":272},"to":{"krate":0,"index":301}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":23867,"byte_end":23875,"line_start":97,"line_end":97,"column_start":10,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":24398,"byte_end":24406,"line_start":119,"line_end":119,"column_start":10,"column_end":18},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":26909,"byte_end":26918,"line_start":184,"line_end":184,"column_start":10,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":27619,"byte_end":27628,"line_start":200,"line_end":200,"column_start":23,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":27733,"byte_end":27742,"line_start":207,"line_end":207,"column_start":23,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":27862,"byte_end":27871,"line_start":214,"line_end":214,"column_start":24,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":27992,"byte_end":28001,"line_start":221,"line_end":221,"column_start":24,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28122,"byte_end":28131,"line_start":228,"line_end":228,"column_start":24,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28246,"byte_end":28255,"line_start":235,"line_end":235,"column_start":25,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28375,"byte_end":28384,"line_start":242,"line_end":242,"column_start":26,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28506,"byte_end":28515,"line_start":249,"line_end":249,"column_start":23,"column_end":32},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28633,"byte_end":28642,"line_start":256,"line_end":256,"column_start":24,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28761,"byte_end":28770,"line_start":263,"line_end":263,"column_start":24,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":28889,"byte_end":28898,"line_start":270,"line_end":270,"column_start":24,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29011,"byte_end":29020,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29138,"byte_end":29147,"line_start":284,"line_end":284,"column_start":26,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29268,"byte_end":29277,"line_start":291,"line_end":291,"column_start":24,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29395,"byte_end":29404,"line_start":298,"line_end":298,"column_start":24,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29516,"byte_end":29525,"line_start":305,"line_end":305,"column_start":25,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29637,"byte_end":29646,"line_start":312,"line_end":312,"column_start":25,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/internal/mod.rs","byte_start":29761,"byte_end":29770,"line_start":319,"line_end":319,"column_start":28,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":74497,"byte_end":74505,"line_start":234,"line_end":234,"column_start":10,"column_end":18},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.7/src/visit.rs","byte_start":74659,"byte_end":74666,"line_start":238,"line_end":238,"column_start":45,"column_end":52},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":418},"to":{"krate":0,"index":301}}]}