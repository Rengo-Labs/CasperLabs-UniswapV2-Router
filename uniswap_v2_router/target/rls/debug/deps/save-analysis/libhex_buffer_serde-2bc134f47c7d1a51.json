{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2","program":"/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","hex_buffer_serde","--edition=2018","/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=2bc134f47c7d1a51","-C","extra-filename=-2bc134f47c7d1a51","--out-dir","/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps","-L","dependency=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps","--extern","hex=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libhex-577803b733b36eb7.rmeta","--extern","serde=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libserde-62afd898768cbe15.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu"],"output":"/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libhex_buffer_serde-2bc134f47c7d1a51.rmeta"},"prelude":{"crate_id":{"name":"hex_buffer_serde","disambiguator":[3810884434487249232,5727535600774790966]},"crate_root":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src","external_crates":[{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[4001252548733048619,17242313319436819942]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":5,"id":{"name":"serde","disambiguator":[18285963416665886660,11116707018240304275]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":6,"id":{"name":"std","disambiguator":[10283585399922801530,3113815793436671734]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[5352780060018682353,5212160423076132458]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[17147711338457548981,6939542792032145917]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[2842547253401849104,13491194742958542480]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[743652736616489669,1287960927584068912]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16292678807852148020,5791869870655771082]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9404817637945341771,5464406936793117880]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17888196348013287212,15275907588461469564]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":14,"id":{"name":"addr2line","disambiguator":[1276787031323089283,14926302036319710225]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":15,"id":{"name":"gimli","disambiguator":[3988411805964943353,12607049771423756955]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":16,"id":{"name":"object","disambiguator":[2565427104194196404,14362732384292144629]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[11025534897254923617,14932093111515565771]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[6421578182970509025,18151391361782090522]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6900026989174100552,1126691905217298232]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":20,"id":{"name":"serde_derive","disambiguator":[12710047073989898814,12877363585103041555]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","num":21,"id":{"name":"hex","disambiguator":[5158597547749733710,8836420859995165488]}}],"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":590,"byte_end":14899,"line_start":15,"line_end":460,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":590,"byte_end":14899,"line_start":15,"line_end":460,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":70}],"decl_id":null,"docs":" Serializing byte buffers as hex strings with `serde`.","sig":null,"attributes":[{"value":"/ Serializing byte buffers as hex strings with `serde`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":590,"byte_end":647,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":648,"byte_end":651,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Problem","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":652,"byte_end":665,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":666,"byte_end":669,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Sometimes, you need to serialize a byte buffer (say, a newtype around `[u8; 32]` or `Vec<u8>`)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":670,"byte_end":768,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ as a hex string. The problem is, the newtype in question can be defined in another crate","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":769,"byte_end":861,"line_start":20,"line_end":20,"column_start":1,"column_end":93}},{"value":"/ (for example, cryptographic types from [`sodiumoxide`]), so you can't implement `Serialize` /","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":862,"byte_end":959,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ `Deserialize` for the type due to Rust orphaning rules. (Or maybe `Serialize` / `Deserialize`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":960,"byte_end":1057,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ *are* implemented, but not in the desirable way.)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1058,"byte_end":1111,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1112,"byte_end":1115,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Solution","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1116,"byte_end":1130,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1131,"byte_end":1134,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The core of this crate is the [`Hex`] trait. It provides methods `serialize`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1135,"byte_end":1215,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ and `deserialize`, which signatures match the ones expected by `serde`. These methods","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1216,"byte_end":1305,"line_start":28,"line_end":28,"column_start":1,"column_end":90}},{"value":"/ use the other two required methods of the trait. As all trait methods have no `self` argument,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1306,"byte_end":1404,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ the trait *can* be implemented for external types; the implementor may be an empty `enum`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1405,"byte_end":1498,"line_start":30,"line_end":30,"column_start":1,"column_end":94}},{"value":"/ designated specifically for this purpose. The implementor can then be used","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1499,"byte_end":1577,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ for (de)serialization with the help of the `#[serde(with)]` attribute.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1578,"byte_end":1652,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1653,"byte_end":1656,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`sodiumoxide`]: https://crates.io/crates/sodiumoxide","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1657,"byte_end":1714,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1715,"byte_end":1718,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Crate Features","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1719,"byte_end":1739,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1740,"byte_end":1743,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - `std` (enabled by default): Enables types from the Rust standard library. Switching","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1744,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":90}},{"value":"/   this feature off can be used for constrained environments, such as WASM. Note that","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1834,"byte_end":1922,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/   the crate still requires an allocator (that is, the `alloc` crate) even","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":1923,"byte_end":2000,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/   if the `std` feature is disabled.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2001,"byte_end":2040,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2041,"byte_end":2044,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2045,"byte_end":2059,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2060,"byte_end":2063,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2064,"byte_end":2071,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ // Assume this type is defined in an external crate.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2072,"byte_end":2128,"line_start":46,"line_end":46,"column_start":1,"column_end":57}},{"value":"/ pub struct Buffer([u8; 8]);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2129,"byte_end":2160,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2161,"byte_end":2164,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ impl Buffer {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2165,"byte_end":2182,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/     pub fn from_slice(slice: &[u8]) -> Option<Self> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2183,"byte_end":2240,"line_start":50,"line_end":50,"column_start":1,"column_end":58}},{"value":"/         // snip","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2241,"byte_end":2260,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/ #       unimplemented!()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2261,"byte_end":2289,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2290,"byte_end":2299,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2300,"byte_end":2305,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2306,"byte_end":2309,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ impl AsRef<[u8]> for Buffer {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2310,"byte_end":2343,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/     fn as_ref(&self) -> &[u8] {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2344,"byte_end":2379,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/         &self.0","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2380,"byte_end":2399,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2400,"byte_end":2409,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2410,"byte_end":2415,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2416,"byte_end":2419,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // We define in our crate:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2420,"byte_end":2450,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ use hex_buffer_serde::Hex;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2451,"byte_end":2481,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/ use serde_derive::*;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2482,"byte_end":2506,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2507,"byte_end":2510,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # use std::borrow::Cow;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2511,"byte_end":2538,"line_start":66,"line_end":66,"column_start":1,"column_end":28}},{"value":"/ enum BufferHex {} // a single-purpose type for use in `#[serde(with)]`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2539,"byte_end":2613,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ impl Hex<Buffer> for BufferHex {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2614,"byte_end":2650,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/     fn create_bytes(buffer: &Buffer) -> Cow<[u8]> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2651,"byte_end":2706,"line_start":69,"line_end":69,"column_start":1,"column_end":56}},{"value":"/         buffer.as_ref().into()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2707,"byte_end":2741,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2742,"byte_end":2751,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2752,"byte_end":2755,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     fn from_bytes(bytes: &[u8]) -> Result<Buffer, String> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2756,"byte_end":2819,"line_start":73,"line_end":73,"column_start":1,"column_end":64}},{"value":"/         Buffer::from_slice(bytes).ok_or_else(|| \"invalid byte length\".to_owned())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2820,"byte_end":2905,"line_start":74,"line_end":74,"column_start":1,"column_end":86}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2906,"byte_end":2915,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2916,"byte_end":2921,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2922,"byte_end":2925,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2926,"byte_end":2963,"line_start":78,"line_end":78,"column_start":1,"column_end":38}},{"value":"/ pub struct Example {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2964,"byte_end":2988,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/     #[serde(with = \"BufferHex\")]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":2989,"byte_end":3025,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/     buffer: Buffer,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3026,"byte_end":3049,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     // other fields...","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3050,"byte_end":3076,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3077,"byte_end":3082,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3083,"byte_end":3086,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # fn main() {}","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3087,"byte_end":3105,"line_start":85,"line_end":85,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3106,"byte_end":3113,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3114,"byte_end":3117,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Use with internal types","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3118,"byte_end":3147,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3148,"byte_end":3151,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The crate could still be useful if you have control over the serialized buffer type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3152,"byte_end":3240,"line_start":90,"line_end":90,"column_start":1,"column_end":89}},{"value":"/ `Hex<T>` has a blanket implementation for types `T` satisfying certain constraints:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3241,"byte_end":3328,"line_start":91,"line_end":91,"column_start":1,"column_end":88}},{"value":"/ `AsRef<[u8]>` and `TryFrom<&[u8]>`. If these constraints are satisfied, you can","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3329,"byte_end":3412,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/ use `HexForm::<T>` in `#[serde(with)]`:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3413,"byte_end":3456,"line_start":93,"line_end":93,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3457,"byte_end":3460,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3461,"byte_end":3468,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ // It is necessary for `Hex` to be in scope in order","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3469,"byte_end":3525,"line_start":96,"line_end":96,"column_start":1,"column_end":57}},{"value":"/ // for `serde`-generated code to use its `serialize` / `deserialize` methods.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3526,"byte_end":3607,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/ use hex_buffer_serde::{Hex, HexForm};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3608,"byte_end":3649,"line_start":98,"line_end":98,"column_start":1,"column_end":42}},{"value":"/ # use serde_derive::*;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3650,"byte_end":3676,"line_start":99,"line_end":99,"column_start":1,"column_end":27}},{"value":"/ use core::{array::TryFromSliceError, convert::TryFrom};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3677,"byte_end":3736,"line_start":100,"line_end":100,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3737,"byte_end":3740,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ pub struct OurBuffer([u8; 8]);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3741,"byte_end":3775,"line_start":102,"line_end":102,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3776,"byte_end":3779,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ impl TryFrom<&[u8]> for OurBuffer {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3780,"byte_end":3819,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     type Error = TryFromSliceError;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3820,"byte_end":3859,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3860,"byte_end":3863,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     fn try_from(slice: &[u8]) -> Result<Self, Self::Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3864,"byte_end":3928,"line_start":107,"line_end":107,"column_start":1,"column_end":65}},{"value":"/         // snip","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3929,"byte_end":3948,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/ #       unimplemented!()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3949,"byte_end":3977,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3978,"byte_end":3987,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3988,"byte_end":3993,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3994,"byte_end":3997,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ impl AsRef<[u8]> for OurBuffer {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":3998,"byte_end":4034,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/     fn as_ref(&self) -> &[u8] {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4035,"byte_end":4070,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/         &self.0","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4071,"byte_end":4090,"line_start":115,"line_end":115,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4091,"byte_end":4100,"line_start":116,"line_end":116,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4101,"byte_end":4106,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4107,"byte_end":4110,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4111,"byte_end":4148,"line_start":119,"line_end":119,"column_start":1,"column_end":38}},{"value":"/ pub struct Example {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4149,"byte_end":4173,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/     #[serde(with = \"HexForm::<OurBuffer>\")]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4174,"byte_end":4221,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/     buffer: OurBuffer,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4222,"byte_end":4248,"line_start":122,"line_end":122,"column_start":1,"column_end":27}},{"value":"/     // other fields...","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4249,"byte_end":4275,"line_start":123,"line_end":123,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4276,"byte_end":4281,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4282,"byte_end":4285,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ # fn main() {}","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4286,"byte_end":4304,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4305,"byte_end":4312,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4314,"byte_end":4324,"line_start":129,"line_end":129,"column_start":1,"column_end":11}},{"value":"warn(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4391,"byte_end":4444,"line_start":131,"line_end":131,"column_start":1,"column_end":54}},{"value":"warn(clippy :: all, clippy :: pedantic)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4445,"byte_end":4484,"line_start":132,"line_end":132,"column_start":1,"column_end":40}},{"value":"allow(clippy :: missing_errors_doc, clippy :: must_use_candidate)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4485,"byte_end":4550,"line_start":133,"line_end":133,"column_start":1,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4950,"byte_end":4953,"line_start":150,"line_end":150,"column_start":11,"column_end":14},"name":"Hex","qualname":"::Hex","value":"Hex<T>","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45}],"decl_id":null,"docs":" Provides hex-encoded (de)serialization for `serde`.","sig":null,"attributes":[{"value":"/ Provides hex-encoded (de)serialization for `serde`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4762,"byte_end":4817,"line_start":146,"line_end":146,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4818,"byte_end":4821,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Note that the trait is automatically implemented for types that","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4822,"byte_end":4889,"line_start":148,"line_end":148,"column_start":1,"column_end":68}},{"value":"/ implement `AsRef<[u8]>` and `TryFrom<&[u8]>`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4890,"byte_end":4939,"line_start":149,"line_end":149,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5137,"byte_end":5149,"line_start":154,"line_end":154,"column_start":8,"column_end":20},"name":"create_bytes","qualname":"::Hex::create_bytes","value":"pub fn create_bytes(&T) -> Cow<, [u8]>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Converts the value into bytes. This is used for serialization.","sig":null,"attributes":[{"value":"/ Converts the value into bytes. This is used for serialization.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":4963,"byte_end":5029,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5034,"byte_end":5037,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The returned buffer can be either borrowed from the type, or created by the method.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5042,"byte_end":5129,"line_start":153,"line_end":153,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5455,"byte_end":5465,"line_start":162,"line_end":162,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::Hex::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<T, String>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Creates a value from the byte slice.","sig":null,"attributes":[{"value":"/ Creates a value from the byte slice.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5184,"byte_end":5224,"line_start":156,"line_end":156,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5229,"byte_end":5232,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5237,"byte_end":5249,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5254,"byte_end":5257,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ If this method fails, it should return a human-readable error description conforming","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5262,"byte_end":5350,"line_start":160,"line_end":160,"column_start":5,"column_end":93}},{"value":"/ to `serde` conventions (no upper-casing of the first letter, no punctuation at the end).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5355,"byte_end":5447,"line_start":161,"line_end":161,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5930,"byte_end":5939,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"serialize","qualname":"::Hex::serialize","value":"pub fn serialize<S: Serializer>(&T, S) -> Result<S::Ok, S::Error>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Serializes the value for `serde`. This method is not meant to be overridden.","sig":null,"attributes":[{"value":"/ Serializes the value for `serde`. This method is not meant to be overridden.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5507,"byte_end":5587,"line_start":164,"line_end":164,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5592,"byte_end":5595,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The serialization is a lower-case hex string","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5600,"byte_end":5648,"line_start":166,"line_end":166,"column_start":5,"column_end":53}},{"value":"/ for [human-readable][hr] serializers (e.g., JSON or TOML), and the original bytes","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5653,"byte_end":5738,"line_start":167,"line_end":167,"column_start":5,"column_end":90}},{"value":"/ returned by [`Self::create_bytes()`] for non-human-readable ones.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5743,"byte_end":5812,"line_start":168,"line_end":168,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5817,"byte_end":5820,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ [hr]: serde::Serializer::is_human_readable()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5825,"byte_end":5873,"line_start":170,"line_end":170,"column_start":5,"column_end":53}},{"value":"/ [`create_bytes`]: #tymethod.create_bytes","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":5878,"byte_end":5922,"line_start":171,"line_end":171,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":6579,"byte_end":6590,"line_start":187,"line_end":187,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::Hex::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<T, D::Error> where D: Deserializer","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Deserializes a value using `serde`. This method is not meant to be overridden.","sig":null,"attributes":[{"value":"/ Deserializes a value using `serde`. This method is not meant to be overridden.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":6252,"byte_end":6334,"line_start":181,"line_end":181,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":6339,"byte_end":6342,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ If the deserializer is [human-readable][hr] (e.g., JSON or TOML), this method","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":6347,"byte_end":6428,"line_start":183,"line_end":183,"column_start":5,"column_end":86}},{"value":"/ expects a hex-encoded string. Otherwise, the method expects a byte array.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":6433,"byte_end":6510,"line_start":184,"line_end":184,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":6515,"byte_end":6518,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [hr]: serde::Serializer::is_human_readable()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":6523,"byte_end":6571,"line_start":186,"line_end":186,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":77},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":8480,"byte_end":8487,"line_start":243,"line_end":243,"column_start":12,"column_end":19},"name":"HexForm","qualname":"::HexForm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A dummy container for use inside `#[serde(with)]` attribute.","sig":null,"attributes":[{"value":"/ A dummy container for use inside `#[serde(with)]` attribute.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":8107,"byte_end":8171,"line_start":235,"line_end":235,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":8172,"byte_end":8175,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ # Why a separate container?","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":8176,"byte_end":8207,"line_start":237,"line_end":237,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":8208,"byte_end":8211,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ We need a separate type (instead of just using `impl<T> Hex<T> for T`)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":8212,"byte_end":8286,"line_start":239,"line_end":239,"column_start":1,"column_end":75}},{"value":"/ both for code clarity and because otherwise invocations within generated `serde` code","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":8287,"byte_end":8376,"line_start":240,"line_end":240,"column_start":1,"column_end":90}},{"value":"/ would be ambiguous for types implementing `Serialize` / `Deserialize`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":8377,"byte_end":8451,"line_start":241,"line_end":241,"column_start":1,"column_end":75}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":6790,"byte_end":6800,"line_start":195,"line_end":195,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":7460,"byte_end":7472,"line_start":214,"line_end":214,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":8528,"byte_end":8535,"line_start":245,"line_end":245,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":6790,"byte_end":6800,"line_start":195,"line_end":195,"column_start":36,"column_end":46},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":51},"to":{"krate":5,"index":1620}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":7460,"byte_end":7472,"line_start":214,"line_end":214,"column_start":36,"column_end":48},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":61},"to":{"krate":5,"index":1620}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-buffer-serde-0.2.2/src/lib.rs","byte_start":8528,"byte_end":8535,"line_start":245,"line_end":245,"column_start":20,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":77},"to":{"krate":0,"index":39}}]}