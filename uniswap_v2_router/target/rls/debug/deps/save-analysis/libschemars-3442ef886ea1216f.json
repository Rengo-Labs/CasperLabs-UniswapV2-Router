{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3","program":"/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","schemars","--edition=2018","/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"indexmap\"","--cfg","feature=\"preserve_order\"","--cfg","feature=\"schemars_derive\"","-C","metadata=3442ef886ea1216f","-C","extra-filename=-3442ef886ea1216f","--out-dir","/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps","-L","dependency=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps","--extern","dyn_clone=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libdyn_clone-b4923938f8befe59.rmeta","--extern","indexmap=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libindexmap-26afcebbbc811533.rmeta","--extern","schemars_derive=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libschemars_derive-866915e35bc92d85.so","--extern","serde=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libserde-62afd898768cbe15.rmeta","--extern","serde_json=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libserde_json-4c73e4a758b02456.rmeta","--cap-lints","allow","--cfg","std_atomic64","--cfg","std_atomic","--error-format=json","--sysroot","/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu"],"output":"/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libschemars-3442ef886ea1216f.rmeta"},"prelude":{"crate_id":{"name":"schemars","disambiguator":[13212067877774336518,7482973342184243973]},"crate_root":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src","external_crates":[{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10283585399922801530,3113815793436671734]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4001252548733048619,17242313319436819942]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5352780060018682353,5212160423076132458]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17147711338457548981,6939542792032145917]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2842547253401849104,13491194742958542480]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[743652736616489669,1287960927584068912]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16292678807852148020,5791869870655771082]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[9404817637945341771,5464406936793117880]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17888196348013287212,15275907588461469564]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1276787031323089283,14926302036319710225]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[3988411805964943353,12607049771423756955]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[2565427104194196404,14362732384292144629]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[11025534897254923617,14932093111515565771]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[6421578182970509025,18151391361782090522]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[6900026989174100552,1126691905217298232]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":19,"id":{"name":"schemars_derive","disambiguator":[12128676359756856987,5513081347201849085]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","num":20,"id":{"name":"serde_json","disambiguator":[12988755625447026154,2493382042648476325]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","num":21,"id":{"name":"serde","disambiguator":[18285963416665886660,11116707018240304275]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","num":22,"id":{"name":"serde_derive","disambiguator":[12710047073989898814,12877363585103041555]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","num":23,"id":{"name":"itoa","disambiguator":[11761717447849771372,1476596716891942946]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","num":24,"id":{"name":"ryu","disambiguator":[2686056169118969673,4698952673064697069]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/indexmap.rs","num":25,"id":{"name":"indexmap","disambiguator":[10041718596248880132,13268744708859080409]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/indexmap.rs","num":26,"id":{"name":"hashbrown","disambiguator":[5173658147045974718,264960798927040958]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","num":27,"id":{"name":"dyn_clone","disambiguator":[1351258937125171548,750223860837007170]}}],"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":0,"byte_end":12655,"line_start":1,"line_end":411,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9369,"byte_end":9370,"line_start":311,"line_end":311,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"JsonSchema","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9447,"byte_end":9457,"line_start":315,"line_end":315,"column_start":9,"column_end":19},"alias_span":null,"name":"_serde_json","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":0,"byte_end":12655,"line_start":1,"line_end":411,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":12},{"krate":0,"index":47},{"krate":0,"index":306},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":524},{"krate":0,"index":570},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622}],"decl_id":null,"docs":"Generate JSON Schema documents from Rust code","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":0,"byte_end":23,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"*\nGenerate JSON Schema documents from Rust code\n\n## Basic Usage\n\nIf you don't really care about the specifics, the easiest way to generate a JSON schema for your types is to `#[derive(JsonSchema)]` and use the `schema_for!` macro. All fields of the type must also implement `JsonSchema` - Schemars implements this for many standard library types.\n\n```rust\nuse schemars::{schema_for, JsonSchema};\n\n#[derive(JsonSchema)]\npub struct MyStruct {\n    pub my_int: i32,\n    pub my_bool: bool,\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(JsonSchema)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for!(MyStruct);\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"type\": \"object\",\n    \"required\": [\n        \"my_bool\",\n        \"my_int\"\n    ],\n    \"properties\": {\n        \"my_bool\": {\n            \"type\": \"boolean\"\n        },\n        \"my_int\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        },\n        \"my_nullable_enum\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/MyEnum\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        }\n    },\n    \"definitions\": {\n        \"MyEnum\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"StringNewType\"\n                    ],\n                    \"properties\": {\n                        \"StringNewType\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"additionalProperties\": false\n                },\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"StructVariant\"\n                    ],\n                    \"properties\": {\n                        \"StructVariant\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                                \"floats\"\n                            ],\n                            \"properties\": {\n                                \"floats\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"number\",\n                                        \"format\": \"float\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"additionalProperties\": false\n                }\n            ]\n        }\n    }\n}\n```\n</details>\n\n### Serde Compatibility\n\nOne of the main aims of this library is compatibility with [Serde](https://github.com/serde-rs/serde). Any generated schema *should* match how [serde_json](https://github.com/serde-rs/json) would serialize/deserialize to/from JSON. To support this, Schemars will check for any `#[serde(...)]` attributes on types that derive `JsonSchema`, and adjust the generated schema accordingly.\n\n```rust\nuse schemars::{schema_for, JsonSchema};\nuse serde::{Deserialize, Serialize};\n\n#[derive(Deserialize, Serialize, JsonSchema)]\n#[serde(rename_all = \"camelCase\", deny_unknown_fields)]\npub struct MyStruct {\n    #[serde(rename = \"myNumber\")]\n    pub my_int: i32,\n    pub my_bool: bool,\n    #[serde(default)]\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(Deserialize, Serialize, JsonSchema)]\n#[serde(untagged)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for!(MyStruct);\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"type\": \"object\",\n    \"required\": [\n        \"myBool\",\n        \"myNumber\"\n    ],\n    \"properties\": {\n        \"myBool\": {\n            \"type\": \"boolean\"\n        },\n        \"myNullableEnum\": {\n            \"default\": null,\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/MyEnum\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        },\n        \"myNumber\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        }\n    },\n    \"additionalProperties\": false,\n    \"definitions\": {\n        \"MyEnum\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"floats\"\n                    ],\n                    \"properties\": {\n                        \"floats\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"number\",\n                                \"format\": \"float\"\n                            }\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}\n```\n</details>\n\n`#[serde(...)]` attributes can be overriden using `#[schemars(...)]` attributes, which behave identically (e.g. `#[schemars(rename_all = \"camelCase\")]`). You may find this useful if you want to change the generated schema without affecting Serde's behaviour, or if you're just not using Serde.\n\n### Schema from Example Value\n\nIf you want a schema for a type that can't/doesn't implement `JsonSchema`, but does implement `serde::Serialize`, then you can generate a JSON schema from a value of that type. However, this schema will generally be less precise than if the type implemented `JsonSchema` - particularly when it involves enums, since schemars will not make any assumptions about the structure of an enum based on a single variant.\n\n```rust\nuse schemars::schema_for_value;\nuse serde::Serialize;\n\n#[derive(Serialize)]\npub struct MyStruct {\n    pub my_int: i32,\n    pub my_bool: bool,\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(Serialize)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for_value!(MyStruct {\n    my_int: 123,\n    my_bool: true,\n    my_nullable_enum: Some(MyEnum::StringNewType(\"foo\".to_string()))\n});\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"examples\": [\n        {\n            \"my_bool\": true,\n            \"my_int\": 123,\n            \"my_nullable_enum\": {\n                \"StringNewType\": \"foo\"\n            }\n        }\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"my_bool\": {\n            \"type\": \"boolean\"\n        },\n        \"my_int\": {\n            \"type\": \"integer\"\n        },\n        \"my_nullable_enum\": true\n    }\n}\n```\n</details>\n\n## Feature Flags\n- `derive` (enabled by default) - provides `#[derive(JsonSchema)]` macro\n- `impl_json_schema` - implements `JsonSchema` for Schemars types themselves\n- `preserve_order` - keep the order of struct fields in `Schema` and `SchemaObject`\n\n## Optional Dependencies\nSchemars can implement `JsonSchema` on types from several popular crates, enabled via optional dependencies (dependency versions are shown in brackets):\n- [`chrono`](https://crates.io/crates/chrono) (^0.4)\n- [`indexmap`](https://crates.io/crates/indexmap) (^1.2)\n- [`either`](https://crates.io/crates/either) (^1.3)\n- [`uuid`](https://crates.io/crates/uuid) (^0.8)\n- [`smallvec`](https://crates.io/crates/smallvec) (^1.0)\n- [`arrayvec`](https://crates.io/crates/arrayvec) (^0.5)\n- [`url`](https://crates.io/crates/url) (^2.0)\n- [`bytes`](https://crates.io/crates/bytes) (^1.0)\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":24,"byte_end":7980,"line_start":2,"line_end":272,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":3},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8411,"byte_end":8414,"line_start":282,"line_end":282,"column_start":10,"column_end":13},"name":"Map","qualname":"::Map","value":"indexmap::IndexMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"preserve_order\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8367,"byte_end":8401,"line_start":281,"line_end":281,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":6},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8643,"byte_end":8646,"line_start":287,"line_end":287,"column_start":10,"column_end":13},"name":"Set","qualname":"::Set","value":"std::collections::BTreeSet<T>","parent":null,"children":[],"decl_id":null,"docs":" The set type used by schemars types.","sig":null,"attributes":[{"value":"/ The set type used by schemars types.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8449,"byte_end":8489,"line_start":283,"line_end":283,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8490,"byte_end":8493,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ Currently a `BTreeSet`, but this may change to a different implementation","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8494,"byte_end":8571,"line_start":285,"line_end":285,"column_start":1,"column_end":78}},{"value":"/ with a similar interface in a future version of schemars.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8572,"byte_end":8633,"line_start":286,"line_end":286,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9072,"byte_end":9080,"line_start":296,"line_end":296,"column_start":10,"column_end":18},"name":"MapEntry","qualname":"::MapEntry","value":"indexmap::map::Entry","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"preserve_order\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9028,"byte_end":9062,"line_start":295,"line_end":295,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13291,"byte_end":13298,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"flatten","qualname":"<Schema>::flatten","value":"pub fn flatten(Self, Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" This function is only public for use by schemars_derive.","sig":null,"attributes":[{"value":"/ This function is only public for use by schemars_derive.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13132,"byte_end":13192,"line_start":5,"line_end":5,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13197,"byte_end":13200,"line_start":6,"line_end":6,"column_start":5,"column_end":8}},{"value":"/ It should not be considered part of the public API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13205,"byte_end":13260,"line_start":7,"line_end":7,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":436},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gen","qualname":"::gen","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":1483},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":1495},{"krate":0,"index":1499},{"krate":0,"index":1501},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":519},{"krate":0,"index":1503},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":521}],"decl_id":null,"docs":"JSON Schema generator and settings.","sig":null,"attributes":[{"value":"*\nJSON Schema generator and settings.\n\nThis module is useful if you want more control over how the schema generated than the [`schema_for!`] macro gives you.\nThere are two main types in this module:two main types in this module:\n* [`SchemaSettings`], which defines what JSON Schema features should be used when generating schemas (for example, how `Option`s should be represented).\n* [`SchemaGenerator`], which manages the generation of a schema document.\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65216,"byte_end":65676,"line_start":1,"line_end":8,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":1483},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66323,"byte_end":66337,"line_start":22,"line_end":22,"column_start":12,"column_end":26},"name":"SchemaSettings","qualname":"::gen::SchemaSettings","value":"SchemaSettings { option_nullable, option_add_null_type, definitions_path, meta_schema, visitors, inline_subschemas }","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490}],"decl_id":null,"docs":" Settings to customize how Schemas are generated.","sig":null,"attributes":[{"value":"/ Settings to customize how Schemas are generated.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65870,"byte_end":65922,"line_start":17,"line_end":17,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65923,"byte_end":65926,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The default settings currently conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7), but this is liable to change in a future version of Schemars if support for other JSON Schema versions is added.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65927,"byte_end":66166,"line_start":19,"line_end":19,"column_start":1,"column_end":240}},{"value":"/ If you require your generated schemas to conform to draft 7, consider using the [`draft07`](#method.draft07) method.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66167,"byte_end":66287,"line_start":20,"line_end":20,"column_start":1,"column_end":121}}]},{"kind":"Field","id":{"krate":0,"index":1484},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66572,"byte_end":66587,"line_start":28,"line_end":28,"column_start":9,"column_end":24},"name":"option_nullable","qualname":"::gen::SchemaSettings::option_nullable","value":"bool","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will include a `nullable` property.","sig":null,"attributes":[{"value":"/ If `true`, schemas for [`Option<T>`](Option) will include a `nullable` property.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66344,"byte_end":66428,"line_start":23,"line_end":23,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66433,"byte_end":66436,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This is not part of the JSON Schema spec, but is used in Swagger/OpenAPI schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66441,"byte_end":66526,"line_start":25,"line_end":25,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66531,"byte_end":66534,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66539,"byte_end":66563,"line_start":27,"line_end":27,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1485},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66796,"byte_end":66816,"line_start":32,"line_end":32,"column_start":9,"column_end":29},"name":"option_add_null_type","qualname":"::gen::SchemaSettings::option_add_null_type","value":"bool","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will have `null` added to their [`type`](../schema/struct.SchemaObject.html#structfield.instance_type).","sig":null,"attributes":[{"value":"/ If `true`, schemas for [`Option<T>`](Option) will have `null` added to their [`type`](../schema/struct.SchemaObject.html#structfield.instance_type).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66599,"byte_end":66751,"line_start":29,"line_end":29,"column_start":5,"column_end":157}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66756,"byte_end":66759,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66764,"byte_end":66787,"line_start":31,"line_end":31,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1486},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66990,"byte_end":67006,"line_start":36,"line_end":36,"column_start":9,"column_end":25},"name":"definitions_path","qualname":"::gen::SchemaSettings::definitions_path","value":"std::string::String","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" A JSON pointer to the expected location of referenceable subschemas within the resulting root schema.","sig":null,"attributes":[{"value":"/ A JSON pointer to the expected location of referenceable subschemas within the resulting root schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66828,"byte_end":66933,"line_start":33,"line_end":33,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66938,"byte_end":66941,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Defaults to `\"#/definitions/\"`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66946,"byte_end":66981,"line_start":35,"line_end":35,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1487},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67183,"byte_end":67194,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::gen::SchemaSettings::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" The URI of the meta-schema describing the structure of the generated schemas.","sig":null,"attributes":[{"value":"/ The URI of the meta-schema describing the structure of the generated schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67020,"byte_end":67101,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67106,"byte_end":67109,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Defaults to `\"http://json-schema.org/draft-07/schema#\"`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67114,"byte_end":67174,"line_start":39,"line_end":39,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1488},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67295,"byte_end":67303,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"name":"visitors","qualname":"::gen::SchemaSettings::visitors","value":"std::vec::Vec<std::boxed::Box<(dyn gen::GenVisitor + 'static)>>","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" A list of visitors that get applied to all generated root schemas.\n","sig":null,"attributes":[{"value":"/ A list of visitors that get applied to all generated root schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67216,"byte_end":67286,"line_start":41,"line_end":41,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1489},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67522,"byte_end":67539,"line_start":48,"line_end":48,"column_start":9,"column_end":26},"name":"inline_subschemas","qualname":"::gen::SchemaSettings::inline_subschemas","value":"bool","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Inline all subschemas instead of using references.","sig":null,"attributes":[{"value":"/ Inline all subschemas instead of using references.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67335,"byte_end":67389,"line_start":43,"line_end":43,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67394,"byte_end":67397,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Some references may still be generated in schemas for recursive types.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67402,"byte_end":67476,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67481,"byte_end":67484,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67489,"byte_end":67513,"line_start":47,"line_end":47,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67844,"byte_end":67851,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"draft07","qualname":"<SchemaSettings>::draft07","value":"pub fn draft07() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67707,"byte_end":67832,"line_start":59,"line_end":59,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68423,"byte_end":68435,"line_start":73,"line_end":73,"column_start":12,"column_end":24},"name":"draft2019_09","qualname":"<SchemaSettings>::draft2019_09","value":"pub fn draft2019_09() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema 2019-09](https://json-schema.org/specification-links.html#2019-09-formerly-known-as-draft-8).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [JSON Schema 2019-09](https://json-schema.org/specification-links.html#2019-09-formerly-known-as-draft-8).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68260,"byte_end":68411,"line_start":72,"line_end":72,"column_start":5,"column_end":156}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68990,"byte_end":68998,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"openapi3","qualname":"<SchemaSettings>::openapi3","value":"pub fn openapi3() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68830,"byte_end":68978,"line_start":85,"line_end":85,"column_start":5,"column_end":153}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70152,"byte_end":70156,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"with","qualname":"<SchemaSettings>::with","value":"pub fn with<impl FnOnce(&mut Self): FnOnce(&mut Self) ->\n            ()>(Self, impl FnOnce(&mut Self)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modifies the `SchemaSettings` by calling the given function.","sig":null,"attributes":[{"value":"/ Modifies the `SchemaSettings` by calling the given function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69757,"byte_end":69821,"line_start":109,"line_end":109,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69826,"byte_end":69829,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69834,"byte_end":69847,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69852,"byte_end":69859,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use schemars::gen::{SchemaGenerator, SchemaSettings};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69864,"byte_end":69921,"line_start":113,"line_end":113,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69926,"byte_end":69929,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let settings = SchemaSettings::default().with(|s| {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69934,"byte_end":69989,"line_start":115,"line_end":115,"column_start":5,"column_end":60}},{"value":"/     s.option_nullable = true;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69994,"byte_end":70027,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/     s.option_add_null_type = false;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70032,"byte_end":70071,"line_start":117,"line_end":117,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70076,"byte_end":70083,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ let gen = settings.into_generator();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70088,"byte_end":70128,"line_start":119,"line_end":119,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70133,"byte_end":70140,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70393,"byte_end":70405,"line_start":127,"line_end":127,"column_start":12,"column_end":24},"name":"with_visitor","qualname":"<SchemaSettings>::with_visitor","value":"pub fn with_visitor<impl Visitor + Debug + Clone + 'static: Visitor + Debug +\n                    Clone +\n                    'static>(Self, impl Visitor + Debug + Clone + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends the given visitor to the list of [visitors](SchemaSettings::visitors) for these `SchemaSettings`.\n","sig":null,"attributes":[{"value":"/ Appends the given visitor to the list of [visitors](SchemaSettings::visitors) for these `SchemaSettings`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70272,"byte_end":70381,"line_start":126,"line_end":126,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70617,"byte_end":70631,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"into_generator","qualname":"<SchemaSettings>::into_generator","value":"pub fn into_generator(Self) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`SchemaGenerator`] using these settings.\n","sig":null,"attributes":[{"value":"/ Creates a new [`SchemaGenerator`] using these settings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70546,"byte_end":70605,"line_start":132,"line_end":132,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1495},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71056,"byte_end":71071,"line_start":153,"line_end":153,"column_start":12,"column_end":27},"name":"SchemaGenerator","qualname":"::gen::SchemaGenerator","value":"SchemaGenerator {  }","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498}],"decl_id":null,"docs":" The main type used to generate JSON Schemas.","sig":null,"attributes":[{"value":"/ The main type used to generate JSON Schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70703,"byte_end":70751,"line_start":138,"line_end":138,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70752,"byte_end":70755,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70756,"byte_end":70769,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70770,"byte_end":70777,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ use schemars::{JsonSchema, gen::SchemaGenerator};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70778,"byte_end":70831,"line_start":142,"line_end":142,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70832,"byte_end":70835,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70836,"byte_end":70861,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70862,"byte_end":70883,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/     foo: i32,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70884,"byte_end":70901,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70902,"byte_end":70907,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70908,"byte_end":70911,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ let gen = SchemaGenerator::default();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70912,"byte_end":70953,"line_start":149,"line_end":149,"column_start":1,"column_end":42}},{"value":"/ let schema = gen.into_root_schema_for::<MyStruct>();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70954,"byte_end":71010,"line_start":150,"line_end":150,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71011,"byte_end":71018,"line_start":151,"line_end":151,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71670,"byte_end":71673,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<SchemaGenerator>::new","value":"pub fn new(SchemaSettings) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SchemaGenerator` using the given settings.\n","sig":null,"attributes":[{"value":"/ Creates a new `SchemaGenerator` using the given settings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71597,"byte_end":71658,"line_start":176,"line_end":176,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72159,"byte_end":72167,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"settings","qualname":"<SchemaGenerator>::settings","value":"pub fn settings(&Self) -> &SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`SchemaSettings`] being used by this `SchemaGenerator`.","sig":null,"attributes":[{"value":"/ Borrows the [`SchemaSettings`] being used by this `SchemaGenerator`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71823,"byte_end":71895,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71900,"byte_end":71903,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71908,"byte_end":71921,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71926,"byte_end":71933,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use schemars::gen::SchemaGenerator;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71938,"byte_end":71977,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71982,"byte_end":71985,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ let gen = SchemaGenerator::default();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71990,"byte_end":72031,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/ let settings = gen.settings();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72036,"byte_end":72070,"line_start":191,"line_end":191,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72075,"byte_end":72078,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(settings.option_add_null_type, true);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72083,"byte_end":72135,"line_start":193,"line_end":193,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72140,"byte_end":72147,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72297,"byte_end":72312,"line_start":200,"line_end":200,"column_start":12,"column_end":27},"name":"make_extensible","qualname":"<SchemaGenerator>::make_extensible","value":"pub fn make_extensible(&Self, &mut SchemaObject)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"This method no longer has any effect.\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72230,"byte_end":72285,"line_start":199,"line_end":199,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72418,"byte_end":72432,"line_start":203,"line_end":203,"column_start":12,"column_end":26},"name":"schema_for_any","qualname":"<SchemaGenerator>::schema_for_any","value":"pub fn schema_for_any(&Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Use `Schema::Bool(true)` instead\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72356,"byte_end":72406,"line_start":202,"line_end":202,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72553,"byte_end":72568,"line_start":208,"line_end":208,"column_start":12,"column_end":27},"name":"schema_for_none","qualname":"<SchemaGenerator>::schema_for_none","value":"pub fn schema_for_none(&Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Use `Schema::Bool(false)` instead\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72490,"byte_end":72541,"line_start":207,"line_end":207,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73222,"byte_end":73235,"line_start":219,"line_end":219,"column_start":12,"column_end":25},"name":"subschema_for","qualname":"<SchemaGenerator>::subschema_for","value":"pub fn subschema_for<T: ?Sized + JsonSchema>(&mut Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" Generates a JSON Schema for the type `T`, and returns either the schema itself or a `$ref` schema referencing `T`'s schema.","sig":null,"attributes":[{"value":"/ Generates a JSON Schema for the type `T`, and returns either the schema itself or a `$ref` schema referencing `T`'s schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72627,"byte_end":72754,"line_start":212,"line_end":212,"column_start":5,"column_end":132}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72759,"byte_end":72762,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If `T` is [referenceable](JsonSchema::is_referenceable), this will add `T`'s schema to this generator's definitions, and","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72767,"byte_end":72891,"line_start":214,"line_end":214,"column_start":5,"column_end":129}},{"value":"/ return a `$ref` schema referencing that schema. Otherwise, this method behaves identically to [`JsonSchema::json_schema`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72896,"byte_end":73022,"line_start":215,"line_end":215,"column_start":5,"column_end":131}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73027,"byte_end":73030,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73035,"byte_end":73146,"line_start":217,"line_end":217,"column_start":5,"column_end":116}},{"value":"/ add them to the `SchemaGenerator`'s schema definitions.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73151,"byte_end":73210,"line_start":218,"line_end":218,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74483,"byte_end":74494,"line_start":249,"line_end":249,"column_start":12,"column_end":23},"name":"definitions","qualname":"<SchemaGenerator>::definitions","value":"pub fn definitions(&Self) -> &Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[{"value":"/ Borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74211,"byte_end":74324,"line_start":245,"line_end":245,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74329,"byte_end":74332,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74337,"byte_end":74451,"line_start":247,"line_end":247,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74456,"byte_end":74471,"line_start":248,"line_end":248,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74845,"byte_end":74860,"line_start":257,"line_end":257,"column_start":12,"column_end":27},"name":"definitions_mut","qualname":"<SchemaGenerator>::definitions_mut","value":"pub fn definitions_mut(&mut Self) -> &mut Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[{"value":"/ Mutably borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74565,"byte_end":74686,"line_start":253,"line_end":253,"column_start":5,"column_end":126}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74691,"byte_end":74694,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74699,"byte_end":74813,"line_start":255,"line_end":255,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74818,"byte_end":74833,"line_start":256,"line_end":256,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75258,"byte_end":75274,"line_start":266,"line_end":266,"column_start":12,"column_end":28},"name":"take_definitions","qualname":"<SchemaGenerator>::take_definitions","value":"pub fn take_definitions(&mut Self) -> Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated,\n leaving an empty map in its place.","sig":null,"attributes":[{"value":"/ Returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74943,"byte_end":75056,"line_start":261,"line_end":261,"column_start":5,"column_end":118}},{"value":"/ leaving an empty map in its place.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75061,"byte_end":75099,"line_start":262,"line_end":262,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75104,"byte_end":75107,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75112,"byte_end":75226,"line_start":264,"line_end":264,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75231,"byte_end":75246,"line_start":265,"line_end":265,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75506,"byte_end":75518,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"visitors_mut","qualname":"<SchemaGenerator>::visitors_mut","value":"pub fn visitors_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [visitors](SchemaSettings::visitors) being used by this `SchemaGenerator`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the [visitors](SchemaSettings::visitors) being used by this `SchemaGenerator`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75387,"byte_end":75494,"line_start":270,"line_end":270,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":76029,"byte_end":76044,"line_start":280,"line_end":280,"column_start":12,"column_end":27},"name":"root_schema_for","qualname":"<SchemaGenerator>::root_schema_for","value":"pub fn root_schema_for<T: ?Sized + JsonSchema>(&mut Self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Generates a root JSON Schema for the type `T`.","sig":null,"attributes":[{"value":"/ Generates a root JSON Schema for the type `T`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75650,"byte_end":75700,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75705,"byte_end":75708,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75713,"byte_end":75824,"line_start":277,"line_end":277,"column_start":5,"column_end":116}},{"value":"/ add them to the `SchemaGenerator`'s schema definitions and include them in the returned `SchemaObject`'s","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75829,"byte_end":75937,"line_start":278,"line_end":278,"column_start":5,"column_end":113}},{"value":"/ [`definitions`](../schema/struct.Metadata.html#structfield.definitions)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75942,"byte_end":76017,"line_start":279,"line_end":279,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":76912,"byte_end":76932,"line_start":301,"line_end":301,"column_start":12,"column_end":32},"name":"into_root_schema_for","qualname":"<SchemaGenerator>::into_root_schema_for","value":"pub fn into_root_schema_for<T: ?Sized + JsonSchema>(Self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and generates a root JSON Schema for the type `T`.","sig":null,"attributes":[{"value":"/ Consumes `self` and generates a root JSON Schema for the type `T`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":76580,"byte_end":76650,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":76655,"byte_end":76658,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":76663,"byte_end":76774,"line_start":299,"line_end":299,"column_start":5,"column_end":116}},{"value":"/ include them in the returned `SchemaObject`'s [`definitions`](../schema/struct.Metadata.html#structfield.definitions)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":76779,"byte_end":76900,"line_start":300,"line_end":300,"column_start":5,"column_end":126}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":77785,"byte_end":77806,"line_start":322,"line_end":322,"column_start":12,"column_end":33},"name":"root_schema_for_value","qualname":"<SchemaGenerator>::root_schema_for_value","value":"pub fn root_schema_for_value<T: ?Sized + Serialize>(&mut Self, &T)\n-> Result<RootSchema, serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":" Generates a root JSON Schema for the given example value.","sig":null,"attributes":[{"value":"/ Generates a root JSON Schema for the given example value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":77451,"byte_end":77512,"line_start":318,"line_end":318,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":77517,"byte_end":77520,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ If the value implements [`JsonSchema`](crate::JsonSchema), then prefer using the [`root_schema_for()`](Self::root_schema_for())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":77525,"byte_end":77656,"line_start":320,"line_end":320,"column_start":5,"column_end":136}},{"value":"/ function which will generally produce a more precise schema, particularly when the value contains any enums.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":77661,"byte_end":77773,"line_start":321,"line_end":321,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78916,"byte_end":78942,"line_start":354,"line_end":354,"column_start":12,"column_end":38},"name":"into_root_schema_for_value","qualname":"<SchemaGenerator>::into_root_schema_for_value","value":"pub fn into_root_schema_for_value<T: ?Sized + Serialize>(Self, &T)\n-> Result<RootSchema, serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and generates a root JSON Schema for the given example value.","sig":null,"attributes":[{"value":"/ Consumes `self` and generates a root JSON Schema for the given example value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78550,"byte_end":78631,"line_start":350,"line_end":350,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78636,"byte_end":78639,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If the value  implements [`JsonSchema`](crate::JsonSchema), then prefer using the [`into_root_schema_for()!`](Self::into_root_schema_for())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78644,"byte_end":78787,"line_start":352,"line_end":352,"column_start":5,"column_end":148}},{"value":"/ function which will generally produce a more precise schema, particularly when the value contains any enums.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78792,"byte_end":78904,"line_start":353,"line_end":353,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80613,"byte_end":80624,"line_start":407,"line_end":407,"column_start":12,"column_end":23},"name":"dereference","qualname":"<SchemaGenerator>::dereference","value":"pub fn dereference<'a>(&'a Self, &Schema) -> Option<&'a Schema>","parent":null,"children":[],"decl_id":null,"docs":" Attemps to find the schema that the given `schema` is referencing.","sig":null,"attributes":[{"value":"/ Attemps to find the schema that the given `schema` is referencing.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79674,"byte_end":79744,"line_start":382,"line_end":382,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79749,"byte_end":79752,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ If the given `schema` has a [`$ref`](../schema/struct.SchemaObject.html#structfield.reference) property which refers","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79757,"byte_end":79877,"line_start":384,"line_end":384,"column_start":5,"column_end":125}},{"value":"/ to another schema in `self`'s schema definitions, the referenced schema will be returned. Otherwise, returns `None`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79882,"byte_end":80002,"line_start":385,"line_end":385,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80007,"byte_end":80010,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80015,"byte_end":80028,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80033,"byte_end":80040,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use schemars::{JsonSchema, gen::SchemaGenerator};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80045,"byte_end":80098,"line_start":389,"line_end":389,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80103,"byte_end":80106,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80111,"byte_end":80136,"line_start":391,"line_end":391,"column_start":5,"column_end":30}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80141,"byte_end":80162,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/     foo: i32,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80167,"byte_end":80184,"line_start":393,"line_end":393,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80189,"byte_end":80194,"line_start":394,"line_end":394,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80199,"byte_end":80202,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let mut gen = SchemaGenerator::default();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80207,"byte_end":80252,"line_start":396,"line_end":396,"column_start":5,"column_end":50}},{"value":"/ let ref_schema = gen.subschema_for::<MyStruct>();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80257,"byte_end":80310,"line_start":397,"line_end":397,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80315,"byte_end":80318,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ assert!(ref_schema.is_ref());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80323,"byte_end":80356,"line_start":399,"line_end":399,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80361,"byte_end":80364,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let dereferenced = gen.dereference(&ref_schema);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80369,"byte_end":80421,"line_start":401,"line_end":401,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80426,"byte_end":80429,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ assert!(dereferenced.is_some());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80434,"byte_end":80470,"line_start":403,"line_end":403,"column_start":5,"column_end":41}},{"value":"/ assert!(!dereferenced.unwrap().is_ref());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80475,"byte_end":80520,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(dereferenced, gen.definitions().get(\"MyStruct\"));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80525,"byte_end":80589,"line_start":405,"line_end":405,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80594,"byte_end":80601,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81371,"byte_end":81385,"line_start":429,"line_end":429,"column_start":12,"column_end":26},"name":"apply_metadata","qualname":"<SchemaGenerator>::apply_metadata","value":"pub fn apply_metadata(&Self, Schema, Option<Metadata>) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" This function is only public for use by schemars_derive.","sig":null,"attributes":[{"value":"/ This function is only public for use by schemars_derive.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81212,"byte_end":81272,"line_start":425,"line_end":425,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81277,"byte_end":81280,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ It should not be considered part of the public API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81285,"byte_end":81340,"line_start":427,"line_end":427,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":519},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83321,"byte_end":83331,"line_start":489,"line_end":489,"column_start":11,"column_end":21},"name":"GenVisitor","qualname":"::gen::GenVisitor","value":"GenVisitor: Visitor + Debug + DynClone + Any","parent":null,"children":[{"krate":0,"index":520}],"decl_id":null,"docs":" A [Visitor](Visitor) which implements additional traits required to be included in a [SchemaSettings].","sig":null,"attributes":[{"value":"/ A [Visitor](Visitor) which implements additional traits required to be included in a [SchemaSettings].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82657,"byte_end":82763,"line_start":468,"line_end":468,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82764,"byte_end":82767,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to use this trait directly as it is automatically implemented for any type which implements all of:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82768,"byte_end":82892,"line_start":470,"line_end":470,"column_start":1,"column_end":125}},{"value":"/ - [`Visitor`]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82893,"byte_end":82910,"line_start":471,"line_end":471,"column_start":1,"column_end":18}},{"value":"/ - [`std::fmt::Debug`]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82911,"byte_end":82936,"line_start":472,"line_end":472,"column_start":1,"column_end":26}},{"value":"/ - [`std::any::Any`] (implemented for all `'static` types)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82937,"byte_end":82998,"line_start":473,"line_end":473,"column_start":1,"column_end":62}},{"value":"/ - [`std::clone::Clone`]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82999,"byte_end":83026,"line_start":474,"line_end":474,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83027,"byte_end":83030,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83031,"byte_end":83044,"line_start":476,"line_end":476,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83045,"byte_end":83052,"line_start":477,"line_end":477,"column_start":1,"column_end":8}},{"value":"/ use schemars::visit::Visitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83053,"byte_end":83086,"line_start":478,"line_end":478,"column_start":1,"column_end":34}},{"value":"/ use schemars::gen::GenVisitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83087,"byte_end":83121,"line_start":479,"line_end":479,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83122,"byte_end":83125,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83126,"byte_end":83153,"line_start":481,"line_end":481,"column_start":1,"column_end":28}},{"value":"/ struct MyVisitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83154,"byte_end":83175,"line_start":482,"line_end":482,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83176,"byte_end":83179,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ impl Visitor for MyVisitor { }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83180,"byte_end":83214,"line_start":484,"line_end":484,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83215,"byte_end":83218,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ let v: &dyn GenVisitor = &MyVisitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83219,"byte_end":83259,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/ assert!(v.as_any().is::<MyVisitor>());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83260,"byte_end":83302,"line_start":487,"line_end":487,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83303,"byte_end":83310,"line_start":488,"line_end":488,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83488,"byte_end":83494,"line_start":491,"line_end":491,"column_start":8,"column_end":14},"name":"as_any","qualname":"::gen::GenVisitor::as_any","value":"pub fn as_any(&Self) -> &dyn Any","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Upcasts this visitor into an `Any`, which can be used to inspect and manipulate it as its concrete type.\n","sig":null,"attributes":[{"value":"/ Upcasts this visitor into an `Any`, which can be used to inspect and manipulate it as its concrete type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83372,"byte_end":83480,"line_start":490,"line_end":490,"column_start":5,"column_end":113}}]},{"kind":"Mod","id":{"krate":0,"index":524},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schema","qualname":"::schema","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":1536},{"krate":0,"index":1515},{"krate":0,"index":1521},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":542},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":1629},{"krate":0,"index":1543},{"krate":0,"index":1549},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1734},{"krate":0,"index":1633},{"krate":0,"index":1639},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1732},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":1843},{"krate":0,"index":1753},{"krate":0,"index":1759},{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":563},{"krate":0,"index":1921},{"krate":0,"index":1852},{"krate":0,"index":1858},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1919},{"krate":0,"index":1994},{"krate":0,"index":1929},{"krate":0,"index":1935},{"krate":0,"index":1984},{"krate":0,"index":1986},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1992},{"krate":0,"index":2061},{"krate":0,"index":2000},{"krate":0,"index":2006},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2059},{"krate":0,"index":2132},{"krate":0,"index":2065},{"krate":0,"index":2071},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2130},{"krate":0,"index":2208},{"krate":0,"index":2139},{"krate":0,"index":2145},{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2206},{"krate":0,"index":2289},{"krate":0,"index":2216},{"krate":0,"index":2222},{"krate":0,"index":2271},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2342},{"krate":0,"index":2304},{"krate":0,"index":2311},{"krate":0,"index":2319},{"krate":0,"index":2322},{"krate":0,"index":2325},{"krate":0,"index":2327},{"krate":0,"index":2331},{"krate":0,"index":2333},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":564},{"krate":0,"index":567}],"decl_id":null,"docs":"JSON Schema types.\n","sig":null,"attributes":[{"value":"*\nJSON Schema types.\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84194,"byte_end":84219,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1537},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84841,"byte_end":84845,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Bool","qualname":"::schema::Schema::Bool","value":"Schema::Bool(bool)","parent":{"krate":0,"index":1536},"children":[],"decl_id":null,"docs":" A trivial boolean JSON Schema.","sig":null,"attributes":[{"value":"/ A trivial boolean JSON Schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84643,"byte_end":84677,"line_start":19,"line_end":19,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84682,"byte_end":84685,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ The schema `true` matches everything (always passes validation), whereas the schema `false`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84690,"byte_end":84785,"line_start":21,"line_end":21,"column_start":5,"column_end":100}},{"value":"/ matches nothing (always fails validation).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84790,"byte_end":84836,"line_start":22,"line_end":22,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1540},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84887,"byte_end":84893,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::Schema::Object","value":"Schema::Object(SchemaObject)","parent":{"krate":0,"index":1536},"children":[],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[{"value":"/ A JSON Schema object.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84857,"byte_end":84882,"line_start":24,"line_end":24,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1536},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84630,"byte_end":84636,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Schema","qualname":"::schema::Schema","value":"pub enum Schema { Bool(bool), Object(SchemaObject), }","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1540}],"decl_id":null,"docs":" A JSON Schema.\n","sig":null,"attributes":[{"value":"/ A JSON Schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84425,"byte_end":84443,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"allow(clippy :: large_enum_variant)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84444,"byte_end":84480,"line_start":14,"line_end":14,"column_start":1,"column_end":37}},{"value":"serde(untagged)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84602,"byte_end":84620,"line_start":17,"line_end":17,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85169,"byte_end":85176,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<Schema>::new_ref","value":"pub fn new_ref(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[{"value":"/ Creates a new `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84930,"byte_end":84962,"line_start":29,"line_end":29,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84967,"byte_end":84970,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The given reference string should be a URI reference. This will usually be a JSON Pointer","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84975,"byte_end":85068,"line_start":31,"line_end":31,"column_start":5,"column_end":98}},{"value":"/ in [URI Fragment representation](https://tools.ietf.org/html/rfc6901#section-6).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85073,"byte_end":85157,"line_start":32,"line_end":32,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85509,"byte_end":85515,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<Schema>::is_ref","value":"pub fn is_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85265,"byte_end":85313,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85318,"byte_end":85321,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ If `self` is a [`SchemaObject`] with `Some` [`reference`](struct.SchemaObject.html#structfield.reference) set, this returns `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85326,"byte_end":85461,"line_start":39,"line_end":39,"column_start":5,"column_end":140}},{"value":"/ Otherwise, returns `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85466,"byte_end":85497,"line_start":40,"line_end":40,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86069,"byte_end":86080,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"into_object","qualname":"<Schema>::into_object","value":"pub fn into_object(Self) -> SchemaObject","parent":null,"children":[],"decl_id":null,"docs":" Converts the given schema (if it is a boolean schema) into an equivalent schema object.","sig":null,"attributes":[{"value":"/ Converts the given schema (if it is a boolean schema) into an equivalent schema object.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85644,"byte_end":85735,"line_start":48,"line_end":48,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85740,"byte_end":85743,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the given schema is already a schema object, this has no effect.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85748,"byte_end":85819,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85824,"byte_end":85827,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85832,"byte_end":85845,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85850,"byte_end":85857,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use schemars::schema::{Schema, SchemaObject};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85862,"byte_end":85911,"line_start":54,"line_end":54,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85916,"byte_end":85919,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let bool_schema = Schema::Bool(true);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85924,"byte_end":85965,"line_start":56,"line_end":56,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85970,"byte_end":85973,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bool_schema.into_object(), SchemaObject::default());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85978,"byte_end":86045,"line_start":58,"line_end":58,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86050,"byte_end":86057,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1629},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86978,"byte_end":86988,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"RootSchema","qualname":"::schema::RootSchema","value":"RootSchema { meta_schema, schema, definitions }","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632}],"decl_id":null,"docs":" The root object of a JSON Schema document.\n","sig":null,"attributes":[{"value":"/ The root object of a JSON Schema document.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86746,"byte_end":86792,"line_start":87,"line_end":87,"column_start":1,"column_end":47}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86923,"byte_end":86966,"line_start":90,"line_end":90,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1630},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87241,"byte_end":87252,"line_start":96,"line_end":96,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::schema::RootSchema::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1629},"children":[],"decl_id":null,"docs":" The `$schema` keyword.","sig":null,"attributes":[{"value":"/ The `$schema` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86995,"byte_end":87021,"line_start":92,"line_end":92,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87026,"byte_end":87029,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.1.1. The \"$schema\" Keyword](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.1.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87034,"byte_end":87158,"line_start":94,"line_end":94,"column_start":5,"column_end":129}},{"value":"serde(rename = \"$schema\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87163,"byte_end":87232,"line_start":95,"line_end":95,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1631},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87332,"byte_end":87338,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"name":"schema","qualname":"::schema::RootSchema::schema","value":"schema::SchemaObject","parent":{"krate":0,"index":1629},"children":[],"decl_id":null,"docs":" The root schema itself.\n","sig":null,"attributes":[{"value":"/ The root schema itself.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87274,"byte_end":87301,"line_start":97,"line_end":97,"column_start":5,"column_end":32}},{"value":"serde(flatten)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87306,"byte_end":87323,"line_start":98,"line_end":98,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1632},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87929,"byte_end":87940,"line_start":108,"line_end":108,"column_start":9,"column_end":20},"name":"definitions","qualname":"::schema::RootSchema::definitions","value":"indexmap::IndexMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":1629},"children":[],"decl_id":null,"docs":" The `definitions` keyword.","sig":null,"attributes":[{"value":"/ The `definitions` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87358,"byte_end":87388,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87393,"byte_end":87396,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ In JSON Schema draft 2019-09 this was replaced by $defs, but in Schemars this is still","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87401,"byte_end":87491,"line_start":102,"line_end":102,"column_start":5,"column_end":95}},{"value":"/ serialized as `definitions` for backward-compatibility.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87496,"byte_end":87555,"line_start":103,"line_end":103,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87560,"byte_end":87563,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.5. Schema Re-Use With \"$defs\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.5),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87568,"byte_end":87697,"line_start":105,"line_end":105,"column_start":5,"column_end":134}},{"value":"/ and [JSON Schema (draft 07) 9. Schema Re-Use With \"definitions\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01#section-9).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87702,"byte_end":87851,"line_start":106,"line_end":106,"column_start":5,"column_end":154}},{"value":"serde(alias = \"$defs\", skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87856,"byte_end":87920,"line_start":107,"line_end":107,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1734},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88177,"byte_end":88189,"line_start":115,"line_end":115,"column_start":12,"column_end":24},"name":"SchemaObject","qualname":"::schema::SchemaObject","value":"SchemaObject { metadata, instance_type, format, enum_values, const_value, subschemas, number, string, array, object, reference, extensions }","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746}],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[{"value":"/ A JSON Schema object.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87966,"byte_end":87991,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88122,"byte_end":88165,"line_start":114,"line_end":114,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1735},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88400,"byte_end":88408,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"metadata","qualname":"::schema::SchemaObject::metadata","value":"std::option::Option<std::boxed::Box<schema::Metadata>>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" Properties which annotate the [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"/ Properties which annotate the [`SchemaObject`] which typically have no effect when an object is being validated against the schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88196,"byte_end":88331,"line_start":116,"line_end":116,"column_start":5,"column_end":140}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88336,"byte_end":88391,"line_start":117,"line_end":117,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1736},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88810,"byte_end":88823,"line_start":124,"line_end":124,"column_start":9,"column_end":22},"name":"instance_type","qualname":"::schema::SchemaObject::instance_type","value":"std::option::Option<schema::SingleOrVec<schema::InstanceType>>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" The `type` keyword.","sig":null,"attributes":[{"value":"/ The `type` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88437,"byte_end":88460,"line_start":119,"line_end":119,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88465,"byte_end":88468,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.1. \"type\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.1)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88473,"byte_end":88603,"line_start":121,"line_end":121,"column_start":5,"column_end":135}},{"value":"/ and [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88608,"byte_end":88730,"line_start":122,"line_end":122,"column_start":5,"column_end":127}},{"value":"serde(rename = \"type\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88735,"byte_end":88801,"line_start":123,"line_end":123,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1737},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89129,"byte_end":89135,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"format","qualname":"::schema::SchemaObject::format","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" The `format` keyword.","sig":null,"attributes":[{"value":"/ The `format` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88864,"byte_end":88889,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88894,"byte_end":88897,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 7. A Vocabulary for Semantic Content With \"format\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-7).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88902,"byte_end":89066,"line_start":127,"line_end":127,"column_start":5,"column_end":169}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89071,"byte_end":89120,"line_start":128,"line_end":128,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1738},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89403,"byte_end":89414,"line_start":134,"line_end":134,"column_start":9,"column_end":20},"name":"enum_values","qualname":"::schema::SchemaObject::enum_values","value":"std::option::Option<std::vec::Vec<serde_json::Value>>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" The `enum` keyword.","sig":null,"attributes":[{"value":"/ The `enum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89157,"byte_end":89180,"line_start":130,"line_end":130,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89185,"byte_end":89188,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.2. \"enum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.2)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89193,"byte_end":89323,"line_start":132,"line_end":132,"column_start":5,"column_end":135}},{"value":"serde(rename = \"enum\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89328,"byte_end":89394,"line_start":133,"line_end":133,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1739},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89752,"byte_end":89763,"line_start":143,"line_end":143,"column_start":9,"column_end":20},"name":"const_value","qualname":"::schema::SchemaObject::const_value","value":"std::option::Option<serde_json::Value>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" The `const` keyword.","sig":null,"attributes":[{"value":"/ The `const` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89440,"byte_end":89464,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89469,"byte_end":89472,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.3. \"const\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.3)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89477,"byte_end":89608,"line_start":137,"line_end":137,"column_start":5,"column_end":136}},{"value":"serde(rename = \"const\", skip_serializing_if = \"Option::is_none\",\n        deserialize_with = \"allow_null\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89613,"byte_end":89743,"line_start":138,"line_end":142,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1740},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89953,"byte_end":89963,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"name":"subschemas","qualname":"::schema::SchemaObject::subschemas","value":"std::option::Option<std::boxed::Box<schema::SubschemaValidation>>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions in terms of other schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89784,"byte_end":89884,"line_start":144,"line_end":144,"column_start":5,"column_end":105}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89889,"byte_end":89944,"line_start":145,"line_end":145,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1741},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90158,"byte_end":90164,"line_start":149,"line_end":149,"column_start":9,"column_end":15},"name":"number","qualname":"::schema::SchemaObject::number","value":"std::option::Option<std::boxed::Box<schema::NumberValidation>>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for numbers.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90003,"byte_end":90089,"line_start":147,"line_end":147,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90094,"byte_end":90149,"line_start":148,"line_end":148,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1742},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90356,"byte_end":90362,"line_start":152,"line_end":152,"column_start":9,"column_end":15},"name":"string","qualname":"::schema::SchemaObject::string","value":"std::option::Option<std::boxed::Box<schema::StringValidation>>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for strings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90201,"byte_end":90287,"line_start":150,"line_end":150,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90292,"byte_end":90347,"line_start":151,"line_end":151,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1743},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90553,"byte_end":90558,"line_start":155,"line_end":155,"column_start":9,"column_end":14},"name":"array","qualname":"::schema::SchemaObject::array","value":"std::option::Option<std::boxed::Box<schema::ArrayValidation>>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for arrays.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90399,"byte_end":90484,"line_start":153,"line_end":153,"column_start":5,"column_end":90}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90489,"byte_end":90544,"line_start":154,"line_end":154,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1744},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90749,"byte_end":90755,"line_start":158,"line_end":158,"column_start":9,"column_end":15},"name":"object","qualname":"::schema::SchemaObject::object","value":"std::option::Option<std::boxed::Box<schema::ObjectValidation>>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for objects.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90594,"byte_end":90680,"line_start":156,"line_end":156,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90685,"byte_end":90740,"line_start":157,"line_end":157,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1745},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91044,"byte_end":91053,"line_start":163,"line_end":163,"column_start":9,"column_end":18},"name":"reference","qualname":"::schema::SchemaObject::reference","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" The `$ref` keyword.","sig":null,"attributes":[{"value":"/ The `$ref` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90792,"byte_end":90815,"line_start":159,"line_end":159,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90820,"byte_end":90823,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.4.1. Direct References with \"$ref\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.4.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90828,"byte_end":90964,"line_start":161,"line_end":161,"column_start":5,"column_end":141}},{"value":"serde(rename = \"$ref\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":90969,"byte_end":91035,"line_start":162,"line_end":162,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1746},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91227,"byte_end":91237,"line_start":166,"line_end":166,"column_start":9,"column_end":19},"name":"extensions","qualname":"::schema::SchemaObject::extensions","value":"indexmap::IndexMap<std::string::String, serde_json::Value>","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" Arbitrary extra properties which are not part of the JSON Schema specification, or which `schemars` does not support.\n","sig":null,"attributes":[{"value":"/ Arbitrary extra properties which are not part of the JSON Schema specification, or which `schemars` does not support.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91075,"byte_end":91196,"line_start":164,"line_end":164,"column_start":5,"column_end":126}},{"value":"serde(flatten)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91201,"byte_end":91218,"line_start":165,"line_end":165,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92659,"byte_end":92666,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<SchemaObject>::new_ref","value":"pub fn new_ref(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[{"value":"/ Creates a new `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92420,"byte_end":92452,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92457,"byte_end":92460,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The given reference string should be a URI reference. This will usually be a JSON Pointer","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92465,"byte_end":92558,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ in [URI Fragment representation](https://tools.ietf.org/html/rfc6901#section-6).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92563,"byte_end":92647,"line_start":211,"line_end":211,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93034,"byte_end":93040,"line_start":223,"line_end":223,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<SchemaObject>::is_ref","value":"pub fn is_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92813,"byte_end":92861,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92866,"byte_end":92869,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ If `self` has `Some` [`reference`](struct.SchemaObject.html#structfield.reference) set, this returns `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92874,"byte_end":92986,"line_start":221,"line_end":221,"column_start":5,"column_end":117}},{"value":"/ Otherwise, returns `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92991,"byte_end":93022,"line_start":222,"line_end":222,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93128,"byte_end":93136,"line_start":227,"line_end":227,"column_start":31,"column_end":39},"name":"metadata","qualname":"<SchemaObject>::metadata","value":"pub fn metadata(&mut Self) -> &mut Metadata","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`Metadata`](#structfield.metadata), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93179,"byte_end":93189,"line_start":228,"line_end":228,"column_start":31,"column_end":41},"name":"subschemas","qualname":"<SchemaObject>::subschemas","value":"pub fn subschemas(&mut Self) -> &mut SubschemaValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`SubschemaValidation`](#structfield.subschemas), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93243,"byte_end":93249,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"name":"number","qualname":"<SchemaObject>::number","value":"pub fn number(&mut Self) -> &mut NumberValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`NumberValidation`](#structfield.number), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93300,"byte_end":93306,"line_start":230,"line_end":230,"column_start":31,"column_end":37},"name":"string","qualname":"<SchemaObject>::string","value":"pub fn string(&mut Self) -> &mut StringValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`StringValidation`](#structfield.string), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93357,"byte_end":93362,"line_start":231,"line_end":231,"column_start":31,"column_end":36},"name":"array","qualname":"<SchemaObject>::array","value":"pub fn array(&mut Self) -> &mut ArrayValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ArrayValidation`](#structfield.array), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93412,"byte_end":93418,"line_start":232,"line_end":232,"column_start":31,"column_end":37},"name":"object","qualname":"<SchemaObject>::object","value":"pub fn object(&mut Self) -> &mut ObjectValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ObjectValidation`](#structfield.object), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1843},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93874,"byte_end":93882,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::schema::Metadata","value":"Metadata { id, title, description, default, deprecated, read_only, write_only, examples }","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851}],"decl_id":null,"docs":" Properties which annotate a [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"/ Properties which annotate a [`SchemaObject`] which typically have no effect when an object is being validated against the schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93555,"byte_end":93688,"line_start":241,"line_end":241,"column_start":1,"column_end":134}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93819,"byte_end":93862,"line_start":244,"line_end":244,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1844},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94123,"byte_end":94125,"line_start":250,"line_end":250,"column_start":9,"column_end":11},"name":"id","qualname":"::schema::Metadata::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1843},"children":[],"decl_id":null,"docs":" The `$id` keyword.","sig":null,"attributes":[{"value":"/ The `$id` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93889,"byte_end":93911,"line_start":246,"line_end":246,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93916,"byte_end":93919,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.2. The \"$id\" Keyword](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93924,"byte_end":94044,"line_start":248,"line_end":248,"column_start":5,"column_end":125}},{"value":"serde(rename = \"$id\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94049,"byte_end":94114,"line_start":249,"line_end":249,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1845},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94393,"byte_end":94398,"line_start":255,"line_end":255,"column_start":9,"column_end":14},"name":"title","qualname":"::schema::Metadata::title","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1843},"children":[],"decl_id":null,"docs":" The `title` keyword.","sig":null,"attributes":[{"value":"/ The `title` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94147,"byte_end":94171,"line_start":251,"line_end":251,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94176,"byte_end":94179,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94184,"byte_end":94330,"line_start":253,"line_end":253,"column_start":5,"column_end":151}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94335,"byte_end":94384,"line_start":254,"line_end":254,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1846},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94672,"byte_end":94683,"line_start":260,"line_end":260,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::Metadata::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1843},"children":[],"decl_id":null,"docs":" The `description` keyword.","sig":null,"attributes":[{"value":"/ The `description` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94420,"byte_end":94450,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94455,"byte_end":94458,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94463,"byte_end":94609,"line_start":258,"line_end":258,"column_start":5,"column_end":151}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94614,"byte_end":94663,"line_start":259,"line_end":259,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1847},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94992,"byte_end":94999,"line_start":268,"line_end":268,"column_start":9,"column_end":16},"name":"default","qualname":"::schema::Metadata::default","value":"std::option::Option<serde_json::Value>","parent":{"krate":0,"index":1843},"children":[],"decl_id":null,"docs":" The `default` keyword.","sig":null,"attributes":[{"value":"/ The `default` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94705,"byte_end":94731,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94736,"byte_end":94739,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.2. \"default\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94744,"byte_end":94874,"line_start":263,"line_end":263,"column_start":5,"column_end":135}},{"value":"serde(skip_serializing_if = \"Option::is_none\", deserialize_with =\n        \"allow_null\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94879,"byte_end":94983,"line_start":264,"line_end":267,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1848},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95251,"byte_end":95261,"line_start":273,"line_end":273,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::schema::Metadata::deprecated","value":"bool","parent":{"krate":0,"index":1843},"children":[],"decl_id":null,"docs":" The `deprecated` keyword.","sig":null,"attributes":[{"value":"/ The `deprecated` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95020,"byte_end":95049,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95054,"byte_end":95057,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.3. \"deprecated\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95062,"byte_end":95195,"line_start":271,"line_end":271,"column_start":5,"column_end":138}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95200,"byte_end":95242,"line_start":272,"line_end":272,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1849},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95516,"byte_end":95525,"line_start":278,"line_end":278,"column_start":9,"column_end":18},"name":"read_only","qualname":"::schema::Metadata::read_only","value":"bool","parent":{"krate":0,"index":1843},"children":[],"decl_id":null,"docs":" The `readOnly` keyword.","sig":null,"attributes":[{"value":"/ The `readOnly` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95273,"byte_end":95300,"line_start":274,"line_end":274,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95305,"byte_end":95308,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95313,"byte_end":95460,"line_start":276,"line_end":276,"column_start":5,"column_end":152}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95465,"byte_end":95507,"line_start":277,"line_end":277,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1850},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95781,"byte_end":95791,"line_start":283,"line_end":283,"column_start":9,"column_end":19},"name":"write_only","qualname":"::schema::Metadata::write_only","value":"bool","parent":{"krate":0,"index":1843},"children":[],"decl_id":null,"docs":" The `writeOnly` keyword.","sig":null,"attributes":[{"value":"/ The `writeOnly` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95537,"byte_end":95565,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95570,"byte_end":95573,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95578,"byte_end":95725,"line_start":281,"line_end":281,"column_start":5,"column_end":152}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95730,"byte_end":95772,"line_start":282,"line_end":282,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1851},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96035,"byte_end":96043,"line_start":288,"line_end":288,"column_start":9,"column_end":17},"name":"examples","qualname":"::schema::Metadata::examples","value":"std::vec::Vec<serde_json::Value>","parent":{"krate":0,"index":1843},"children":[],"decl_id":null,"docs":" The `examples` keyword.","sig":null,"attributes":[{"value":"/ The `examples` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95803,"byte_end":95830,"line_start":284,"line_end":284,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95835,"byte_end":95838,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.5. \"examples\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.5).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95843,"byte_end":95974,"line_start":286,"line_end":286,"column_start":5,"column_end":136}},{"value":"serde(skip_serializing_if = \"Vec::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95979,"byte_end":96026,"line_start":287,"line_end":287,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1921},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96431,"byte_end":96450,"line_start":300,"line_end":300,"column_start":12,"column_end":31},"name":"SubschemaValidation","qualname":"::schema::SubschemaValidation","value":"SubschemaValidation { all_of, any_of, one_of, not, if_schema, then_schema, else_schema }","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions in terms of other schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96147,"byte_end":96245,"line_start":296,"line_end":296,"column_start":1,"column_end":99}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96376,"byte_end":96419,"line_start":299,"line_end":299,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1922},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96671,"byte_end":96677,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"name":"all_of","qualname":"::schema::SubschemaValidation::all_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" The `allOf` keyword.","sig":null,"attributes":[{"value":"/ The `allOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96457,"byte_end":96481,"line_start":301,"line_end":301,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96486,"byte_end":96489,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.1. \"allOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96494,"byte_end":96608,"line_start":303,"line_end":303,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96613,"byte_end":96662,"line_start":304,"line_end":304,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1923},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96918,"byte_end":96924,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"name":"any_of","qualname":"::schema::SubschemaValidation::any_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" The `anyOf` keyword.","sig":null,"attributes":[{"value":"/ The `anyOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96704,"byte_end":96728,"line_start":306,"line_end":306,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96733,"byte_end":96736,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.2. \"anyOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96741,"byte_end":96855,"line_start":308,"line_end":308,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96860,"byte_end":96909,"line_start":309,"line_end":309,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1924},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97165,"byte_end":97171,"line_start":315,"line_end":315,"column_start":9,"column_end":15},"name":"one_of","qualname":"::schema::SubschemaValidation::one_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" The `oneOf` keyword.","sig":null,"attributes":[{"value":"/ The `oneOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96951,"byte_end":96975,"line_start":311,"line_end":311,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96980,"byte_end":96983,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.3. \"oneOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96988,"byte_end":97102,"line_start":313,"line_end":313,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97107,"byte_end":97156,"line_start":314,"line_end":314,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1925},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97408,"byte_end":97411,"line_start":320,"line_end":320,"column_start":9,"column_end":12},"name":"not","qualname":"::schema::SubschemaValidation::not","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" The `not` keyword.","sig":null,"attributes":[{"value":"/ The `not` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97198,"byte_end":97220,"line_start":316,"line_end":316,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97225,"byte_end":97228,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.4. \"not\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97233,"byte_end":97345,"line_start":318,"line_end":318,"column_start":5,"column_end":117}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97350,"byte_end":97399,"line_start":319,"line_end":319,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1926},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97661,"byte_end":97670,"line_start":325,"line_end":325,"column_start":9,"column_end":18},"name":"if_schema","qualname":"::schema::SubschemaValidation::if_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" The `if` keyword.","sig":null,"attributes":[{"value":"/ The `if` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97438,"byte_end":97459,"line_start":321,"line_end":321,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97464,"byte_end":97467,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.1. \"if\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97472,"byte_end":97583,"line_start":323,"line_end":323,"column_start":5,"column_end":116}},{"value":"serde(rename = \"if\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97588,"byte_end":97652,"line_start":324,"line_end":324,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1927},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97926,"byte_end":97937,"line_start":330,"line_end":330,"column_start":9,"column_end":20},"name":"then_schema","qualname":"::schema::SubschemaValidation::then_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" The `then` keyword.","sig":null,"attributes":[{"value":"/ The `then` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97697,"byte_end":97720,"line_start":326,"line_end":326,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97725,"byte_end":97728,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.2. \"then\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97733,"byte_end":97846,"line_start":328,"line_end":328,"column_start":5,"column_end":118}},{"value":"serde(rename = \"then\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97851,"byte_end":97917,"line_start":329,"line_end":329,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1928},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98193,"byte_end":98204,"line_start":335,"line_end":335,"column_start":9,"column_end":20},"name":"else_schema","qualname":"::schema::SubschemaValidation::else_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" The `else` keyword.","sig":null,"attributes":[{"value":"/ The `else` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97964,"byte_end":97987,"line_start":331,"line_end":331,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97992,"byte_end":97995,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.3. \"else\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98000,"byte_end":98113,"line_start":333,"line_end":333,"column_start":5,"column_end":118}},{"value":"serde(rename = \"else\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98118,"byte_end":98184,"line_start":334,"line_end":334,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1994},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98500,"byte_end":98516,"line_start":342,"line_end":342,"column_start":12,"column_end":28},"name":"NumberValidation","qualname":"::schema::NumberValidation","value":"NumberValidation { multiple_of, maximum, exclusive_maximum, minimum, exclusive_minimum }","parent":null,"children":[{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for numbers.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98230,"byte_end":98314,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98445,"byte_end":98488,"line_start":341,"line_end":341,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1995},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98765,"byte_end":98776,"line_start":347,"line_end":347,"column_start":9,"column_end":20},"name":"multiple_of","qualname":"::schema::NumberValidation::multiple_of","value":"std::option::Option<f64>","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":" The `multipleOf` keyword.","sig":null,"attributes":[{"value":"/ The `multipleOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98523,"byte_end":98552,"line_start":343,"line_end":343,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98557,"byte_end":98560,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.1. \"multipleOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98565,"byte_end":98702,"line_start":345,"line_end":345,"column_start":5,"column_end":142}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98707,"byte_end":98756,"line_start":346,"line_end":346,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1996},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99031,"byte_end":99038,"line_start":352,"line_end":352,"column_start":9,"column_end":16},"name":"maximum","qualname":"::schema::NumberValidation::maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":" The `maximum` keyword.","sig":null,"attributes":[{"value":"/ The `maximum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98795,"byte_end":98821,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98826,"byte_end":98829,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.2. \"maximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98834,"byte_end":98968,"line_start":350,"line_end":350,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98973,"byte_end":99022,"line_start":351,"line_end":351,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1997},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99311,"byte_end":99328,"line_start":357,"line_end":357,"column_start":9,"column_end":26},"name":"exclusive_maximum","qualname":"::schema::NumberValidation::exclusive_maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":" The `exclusiveMaximum` keyword.","sig":null,"attributes":[{"value":"/ The `exclusiveMaximum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99057,"byte_end":99092,"line_start":353,"line_end":353,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99097,"byte_end":99100,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.3. \"exclusiveMaximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99105,"byte_end":99248,"line_start":355,"line_end":355,"column_start":5,"column_end":148}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99253,"byte_end":99302,"line_start":356,"line_end":356,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1998},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99583,"byte_end":99590,"line_start":362,"line_end":362,"column_start":9,"column_end":16},"name":"minimum","qualname":"::schema::NumberValidation::minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":" The `minimum` keyword.","sig":null,"attributes":[{"value":"/ The `minimum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99347,"byte_end":99373,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99378,"byte_end":99381,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.4. \"minimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99386,"byte_end":99520,"line_start":360,"line_end":360,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99525,"byte_end":99574,"line_start":361,"line_end":361,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1999},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99863,"byte_end":99880,"line_start":367,"line_end":367,"column_start":9,"column_end":26},"name":"exclusive_minimum","qualname":"::schema::NumberValidation::exclusive_minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":" The `exclusiveMinimum` keyword.","sig":null,"attributes":[{"value":"/ The `exclusiveMinimum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99609,"byte_end":99644,"line_start":363,"line_end":363,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99649,"byte_end":99652,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.5. \"exclusiveMinimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.5).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99657,"byte_end":99800,"line_start":365,"line_end":365,"column_start":5,"column_end":148}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99805,"byte_end":99854,"line_start":366,"line_end":366,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2061},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100168,"byte_end":100184,"line_start":374,"line_end":374,"column_start":12,"column_end":28},"name":"StringValidation","qualname":"::schema::StringValidation","value":"StringValidation { max_length, min_length, pattern }","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for strings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99898,"byte_end":99982,"line_start":370,"line_end":370,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100113,"byte_end":100156,"line_start":373,"line_end":373,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2062},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100431,"byte_end":100441,"line_start":379,"line_end":379,"column_start":9,"column_end":19},"name":"max_length","qualname":"::schema::StringValidation::max_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" The `maxLength` keyword.","sig":null,"attributes":[{"value":"/ The `maxLength` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100191,"byte_end":100219,"line_start":375,"line_end":375,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100224,"byte_end":100227,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.1. \"maxLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100232,"byte_end":100368,"line_start":377,"line_end":377,"column_start":5,"column_end":141}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100373,"byte_end":100422,"line_start":378,"line_end":378,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2063},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100700,"byte_end":100710,"line_start":384,"line_end":384,"column_start":9,"column_end":19},"name":"min_length","qualname":"::schema::StringValidation::min_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" The `minLength` keyword.","sig":null,"attributes":[{"value":"/ The `minLength` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100460,"byte_end":100488,"line_start":380,"line_end":380,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100493,"byte_end":100496,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.2. \"minLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100501,"byte_end":100637,"line_start":382,"line_end":382,"column_start":5,"column_end":141}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100642,"byte_end":100691,"line_start":383,"line_end":383,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2064},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100965,"byte_end":100972,"line_start":389,"line_end":389,"column_start":9,"column_end":16},"name":"pattern","qualname":"::schema::StringValidation::pattern","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" The `pattern` keyword.","sig":null,"attributes":[{"value":"/ The `pattern` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100729,"byte_end":100755,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100760,"byte_end":100763,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.3. \"pattern\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100768,"byte_end":100902,"line_start":387,"line_end":387,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100907,"byte_end":100956,"line_start":388,"line_end":388,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2132},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101262,"byte_end":101277,"line_start":396,"line_end":396,"column_start":12,"column_end":27},"name":"ArrayValidation","qualname":"::schema::ArrayValidation","value":"ArrayValidation { items, additional_items, max_items, min_items, unique_items, contains }","parent":null,"children":[{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for arrays.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100993,"byte_end":101076,"line_start":392,"line_end":392,"column_start":1,"column_end":84}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101207,"byte_end":101250,"line_start":395,"line_end":395,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2133},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101498,"byte_end":101503,"line_start":401,"line_end":401,"column_start":9,"column_end":14},"name":"items","qualname":"::schema::ArrayValidation::items","value":"std::option::Option<schema::SingleOrVec<schema::Schema>>","parent":{"krate":0,"index":2132},"children":[],"decl_id":null,"docs":" The `items` keyword.","sig":null,"attributes":[{"value":"/ The `items` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101284,"byte_end":101308,"line_start":397,"line_end":397,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101313,"byte_end":101316,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.1. \"items\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101321,"byte_end":101435,"line_start":399,"line_end":399,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101440,"byte_end":101489,"line_start":400,"line_end":400,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2134},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101772,"byte_end":101788,"line_start":406,"line_end":406,"column_start":9,"column_end":25},"name":"additional_items","qualname":"::schema::ArrayValidation::additional_items","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2132},"children":[],"decl_id":null,"docs":" The `additionalItems` keyword.","sig":null,"attributes":[{"value":"/ The `additionalItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101538,"byte_end":101572,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101577,"byte_end":101580,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.2. \"additionalItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101585,"byte_end":101709,"line_start":404,"line_end":404,"column_start":5,"column_end":129}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101714,"byte_end":101763,"line_start":405,"line_end":405,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2135},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102053,"byte_end":102062,"line_start":411,"line_end":411,"column_start":9,"column_end":18},"name":"max_items","qualname":"::schema::ArrayValidation::max_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":2132},"children":[],"decl_id":null,"docs":" The `maxItems` keyword.","sig":null,"attributes":[{"value":"/ The `maxItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101815,"byte_end":101842,"line_start":407,"line_end":407,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101847,"byte_end":101850,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.1. \"maxItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101855,"byte_end":101990,"line_start":409,"line_end":409,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101995,"byte_end":102044,"line_start":410,"line_end":410,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2136},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102319,"byte_end":102328,"line_start":416,"line_end":416,"column_start":9,"column_end":18},"name":"min_items","qualname":"::schema::ArrayValidation::min_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":2132},"children":[],"decl_id":null,"docs":" The `minItems` keyword.","sig":null,"attributes":[{"value":"/ The `minItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102081,"byte_end":102108,"line_start":412,"line_end":412,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102113,"byte_end":102116,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.2. \"minItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102121,"byte_end":102256,"line_start":414,"line_end":414,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102261,"byte_end":102310,"line_start":415,"line_end":415,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2137},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102591,"byte_end":102603,"line_start":421,"line_end":421,"column_start":9,"column_end":21},"name":"unique_items","qualname":"::schema::ArrayValidation::unique_items","value":"std::option::Option<bool>","parent":{"krate":0,"index":2132},"children":[],"decl_id":null,"docs":" The `uniqueItems` keyword.","sig":null,"attributes":[{"value":"/ The `uniqueItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102347,"byte_end":102377,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102382,"byte_end":102385,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.3. \"uniqueItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102390,"byte_end":102528,"line_start":419,"line_end":419,"column_start":5,"column_end":143}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102533,"byte_end":102582,"line_start":420,"line_end":420,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2138},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102843,"byte_end":102851,"line_start":426,"line_end":426,"column_start":9,"column_end":17},"name":"contains","qualname":"::schema::ArrayValidation::contains","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2132},"children":[],"decl_id":null,"docs":" The `contains` keyword.","sig":null,"attributes":[{"value":"/ The `contains` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102623,"byte_end":102650,"line_start":422,"line_end":422,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102655,"byte_end":102658,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.4. \"contains\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102663,"byte_end":102780,"line_start":424,"line_end":424,"column_start":5,"column_end":122}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102785,"byte_end":102834,"line_start":425,"line_end":425,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2208},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103147,"byte_end":103163,"line_start":433,"line_end":433,"column_start":12,"column_end":28},"name":"ObjectValidation","qualname":"::schema::ObjectValidation","value":"ObjectValidation { max_properties, min_properties, required, properties, pattern_properties, additional_properties, property_names }","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for objects.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102877,"byte_end":102961,"line_start":429,"line_end":429,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103092,"byte_end":103135,"line_start":432,"line_end":432,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2209},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103418,"byte_end":103432,"line_start":438,"line_end":438,"column_start":9,"column_end":23},"name":"max_properties","qualname":"::schema::ObjectValidation::max_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" The `maxProperties` keyword.","sig":null,"attributes":[{"value":"/ The `maxProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103170,"byte_end":103202,"line_start":434,"line_end":434,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103207,"byte_end":103210,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.1. \"maxProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103215,"byte_end":103355,"line_start":436,"line_end":436,"column_start":5,"column_end":145}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103360,"byte_end":103409,"line_start":437,"line_end":437,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2210},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103699,"byte_end":103713,"line_start":443,"line_end":443,"column_start":9,"column_end":23},"name":"min_properties","qualname":"::schema::ObjectValidation::min_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" The `minProperties` keyword.","sig":null,"attributes":[{"value":"/ The `minProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103451,"byte_end":103483,"line_start":439,"line_end":439,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103488,"byte_end":103491,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.2. \"minProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103496,"byte_end":103636,"line_start":441,"line_end":441,"column_start":5,"column_end":145}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103641,"byte_end":103690,"line_start":442,"line_end":442,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2211},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103968,"byte_end":103976,"line_start":448,"line_end":448,"column_start":9,"column_end":17},"name":"required","qualname":"::schema::ObjectValidation::required","value":"std::collections::BTreeSet<std::string::String>","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" The `required` keyword.","sig":null,"attributes":[{"value":"/ The `required` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103732,"byte_end":103759,"line_start":444,"line_end":444,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103764,"byte_end":103767,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.3. \"required\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103772,"byte_end":103907,"line_start":446,"line_end":446,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Set::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103912,"byte_end":103959,"line_start":447,"line_end":447,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2212},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104217,"byte_end":104227,"line_start":453,"line_end":453,"column_start":9,"column_end":19},"name":"properties","qualname":"::schema::ObjectValidation::properties","value":"indexmap::IndexMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" The `properties` keyword.","sig":null,"attributes":[{"value":"/ The `properties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103995,"byte_end":104024,"line_start":449,"line_end":449,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104029,"byte_end":104032,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.1. \"properties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104037,"byte_end":104156,"line_start":451,"line_end":451,"column_start":5,"column_end":124}},{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104161,"byte_end":104208,"line_start":452,"line_end":452,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2213},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104490,"byte_end":104508,"line_start":458,"line_end":458,"column_start":9,"column_end":27},"name":"pattern_properties","qualname":"::schema::ObjectValidation::pattern_properties","value":"indexmap::IndexMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" The `patternProperties` keyword.","sig":null,"attributes":[{"value":"/ The `patternProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104254,"byte_end":104290,"line_start":454,"line_end":454,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104295,"byte_end":104298,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.2. \"patternProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104303,"byte_end":104429,"line_start":456,"line_end":456,"column_start":5,"column_end":131}},{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104434,"byte_end":104481,"line_start":457,"line_end":457,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2214},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104779,"byte_end":104800,"line_start":463,"line_end":463,"column_start":9,"column_end":30},"name":"additional_properties","qualname":"::schema::ObjectValidation::additional_properties","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" The `additionalProperties` keyword.","sig":null,"attributes":[{"value":"/ The `additionalProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104535,"byte_end":104574,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104579,"byte_end":104582,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.3. \"additionalProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104587,"byte_end":104716,"line_start":461,"line_end":461,"column_start":5,"column_end":134}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104721,"byte_end":104770,"line_start":462,"line_end":462,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2215},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105057,"byte_end":105071,"line_start":468,"line_end":468,"column_start":9,"column_end":23},"name":"property_names","qualname":"::schema::ObjectValidation::property_names","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" The `propertyNames` keyword.","sig":null,"attributes":[{"value":"/ The `propertyNames` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104827,"byte_end":104859,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104864,"byte_end":104867,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.5. \"propertyNames\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.5).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104872,"byte_end":104994,"line_start":466,"line_end":466,"column_start":5,"column_end":127}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104999,"byte_end":105048,"line_start":467,"line_end":467,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2290},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105500,"byte_end":105504,"line_start":478,"line_end":478,"column_start":5,"column_end":9},"name":"Null","qualname":"::schema::InstanceType::Null","value":"InstanceType::Null","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2292},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105510,"byte_end":105517,"line_start":479,"line_end":479,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::schema::InstanceType::Boolean","value":"InstanceType::Boolean","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2294},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105523,"byte_end":105529,"line_start":480,"line_end":480,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::InstanceType::Object","value":"InstanceType::Object","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2296},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105535,"byte_end":105540,"line_start":481,"line_end":481,"column_start":5,"column_end":10},"name":"Array","qualname":"::schema::InstanceType::Array","value":"InstanceType::Array","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2298},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105546,"byte_end":105552,"line_start":482,"line_end":482,"column_start":5,"column_end":11},"name":"Number","qualname":"::schema::InstanceType::Number","value":"InstanceType::Number","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2300},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105558,"byte_end":105564,"line_start":483,"line_end":483,"column_start":5,"column_end":11},"name":"String","qualname":"::schema::InstanceType::String","value":"InstanceType::String","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2302},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105570,"byte_end":105577,"line_start":484,"line_end":484,"column_start":5,"column_end":12},"name":"Integer","qualname":"::schema::InstanceType::Integer","value":"InstanceType::Integer","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2289},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105481,"byte_end":105493,"line_start":477,"line_end":477,"column_start":10,"column_end":22},"name":"InstanceType","qualname":"::schema::InstanceType","value":"pub enum InstanceType {\n    Null,\n    Boolean,\n    Object,\n    Array,\n    Number,\n    String,\n    Integer,\n}","parent":null,"children":[{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2296},{"krate":0,"index":2298},{"krate":0,"index":2300},{"krate":0,"index":2302}],"decl_id":null,"docs":" The possible types of values in JSON Schema documents.","sig":null,"attributes":[{"value":"/ The possible types of values in JSON Schema documents.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105097,"byte_end":105155,"line_start":471,"line_end":471,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105156,"byte_end":105159,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ See [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105160,"byte_end":105282,"line_start":473,"line_end":473,"column_start":1,"column_end":123}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105437,"byte_end":105471,"line_start":476,"line_end":476,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2344},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105946,"byte_end":105952,"line_start":494,"line_end":494,"column_start":5,"column_end":11},"name":"Single","qualname":"::schema::SingleOrVec::Single","value":"SingleOrVec::Single(Box<T>)","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2347},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105966,"byte_end":105969,"line_start":495,"line_end":495,"column_start":5,"column_end":8},"name":"Vec","qualname":"::schema::SingleOrVec::Vec","value":"SingleOrVec::Vec(Vec<T>)","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2342},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105925,"byte_end":105936,"line_start":493,"line_end":493,"column_start":10,"column_end":21},"name":"SingleOrVec","qualname":"::schema::SingleOrVec","value":"pub enum SingleOrVec<T> { Single(Box<T>), Vec(Vec<T>), }","parent":null,"children":[{"krate":0,"index":2344},{"krate":0,"index":2347}],"decl_id":null,"docs":" A type which can be serialized as a single item, or multiple items.","sig":null,"attributes":[{"value":"/ A type which can be serialized as a single item, or multiple items.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105582,"byte_end":105653,"line_start":487,"line_end":487,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105654,"byte_end":105657,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ In some contexts, a `Single` may be semantically distinct from a `Vec` containing only item.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105658,"byte_end":105754,"line_start":489,"line_end":489,"column_start":1,"column_end":97}},{"value":"serde(untagged)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":105897,"byte_end":105915,"line_start":492,"line_end":492,"column_start":1,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":570},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::visit","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":2350},{"krate":0,"index":2352},{"krate":0,"index":2354},{"krate":0,"index":602},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2360},{"krate":0,"index":605},{"krate":0,"index":2362},{"krate":0,"index":2364},{"krate":0,"index":2366},{"krate":0,"index":607}],"decl_id":null,"docs":"Contains the [`Visitor`] trait, used to recursively modify a constructed schema and its subschemas.","sig":null,"attributes":[{"value":"*\nContains the [`Visitor`] trait, used to recursively modify a constructed schema and its subschemas.\n\nSometimes you may want to apply a change to a schema, as well as all schemas contained within it.\nThe easiest way to achieve this is by defining a type that implements [`Visitor`].\nAll methods of `Visitor` have a default implementation that makes no change but recursively visits all subschemas.\nWhen overriding one of these methods, you will *usually* want to still call this default implementation.\n\n# Example\nTo add a custom property to all schemas:\n```\nuse schemars::schema::SchemaObject;\nuse schemars::visit::{Visitor, visit_schema_object};\n\npub struct MyVisitor;\n\nimpl Visitor for MyVisitor {\n    fn visit_schema_object(&mut self, schema: &mut SchemaObject) {\n        // First, make our change to this schema\n        schema.extensions.insert(\"my_property\".to_string(), serde_json::json!(\"hello world\"));\n\n        // Then delegate to default implementation to visit any subschemas\n        visit_schema_object(self, schema);\n    }\n}\n```\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":106731,"byte_end":107779,"line_start":1,"line_end":27,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":584},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107937,"byte_end":107944,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"Visitor","qualname":"::visit::Visitor","value":"Visitor","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"decl_id":null,"docs":" Trait used to recursively modify a constructed schema and its subschemas.\n","sig":null,"attributes":[{"value":"/ Trait used to recursively modify a constructed schema and its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107849,"byte_end":107926,"line_start":30,"line_end":30,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108174,"byte_end":108191,"line_start":35,"line_end":35,"column_start":8,"column_end":25},"name":"visit_root_schema","qualname":"::visit::Visitor::visit_root_schema","value":"pub fn visit_root_schema(&mut Self, &mut RootSchema)","parent":{"krate":0,"index":584},"children":[],"decl_id":null,"docs":" Override this method to modify a [`RootSchema`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`RootSchema`] and (optionally) its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107951,"byte_end":108035,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108040,"byte_end":108043,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_root_schema`] function to visit subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108048,"byte_end":108166,"line_start":34,"line_end":34,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108491,"byte_end":108503,"line_start":42,"line_end":42,"column_start":8,"column_end":20},"name":"visit_schema","qualname":"::visit::Visitor::visit_schema","value":"pub fn visit_schema(&mut Self, &mut Schema)","parent":{"krate":0,"index":584},"children":[],"decl_id":null,"docs":" Override this method to modify a [`Schema`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`Schema`] and (optionally) its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108277,"byte_end":108357,"line_start":39,"line_end":39,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108362,"byte_end":108365,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_schema`] function to visit subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108370,"byte_end":108483,"line_start":41,"line_end":41,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108811,"byte_end":108830,"line_start":49,"line_end":49,"column_start":8,"column_end":27},"name":"visit_schema_object","qualname":"::visit::Visitor::visit_schema_object","value":"pub fn visit_schema_object(&mut Self, &mut SchemaObject)","parent":{"krate":0,"index":584},"children":[],"decl_id":null,"docs":" Override this method to modify a [`SchemaObject`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`SchemaObject`] and (optionally) its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108584,"byte_end":108670,"line_start":46,"line_end":46,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108675,"byte_end":108678,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_schema_object`] function to visit subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108683,"byte_end":108803,"line_start":48,"line_end":48,"column_start":5,"column_end":125}}]},{"kind":"Function","id":{"krate":0,"index":588},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108978,"byte_end":108995,"line_start":55,"line_end":55,"column_start":8,"column_end":25},"name":"visit_root_schema","qualname":"::visit::visit_root_schema","value":"pub fn visit_root_schema<V: Visitor + ?Sized>(&mut V, &mut RootSchema)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`RootSchema`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`RootSchema`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108922,"byte_end":108970,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":590},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":109201,"byte_end":109213,"line_start":61,"line_end":61,"column_start":8,"column_end":20},"name":"visit_schema","qualname":"::visit::visit_schema","value":"pub fn visit_schema<V: Visitor + ?Sized>(&mut V, &mut Schema)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`Schema`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`Schema`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":109149,"byte_end":109193,"line_start":60,"line_end":60,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":592},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":109419,"byte_end":109438,"line_start":68,"line_end":68,"column_start":8,"column_end":27},"name":"visit_schema_object","qualname":"::visit::visit_schema_object","value":"pub fn visit_schema_object<V: Visitor + ?Sized>(&mut V, &mut SchemaObject)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`SchemaObject`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`SchemaObject`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":109361,"byte_end":109411,"line_start":67,"line_end":67,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2350},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111348,"byte_end":111366,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"ReplaceBoolSchemas","qualname":"::visit::ReplaceBoolSchemas","value":"ReplaceBoolSchemas { skip_additional_properties }","parent":null,"children":[{"krate":0,"index":2351}],"decl_id":null,"docs":" This visitor will replace all boolean JSON Schemas with equivalent object schemas.","sig":null,"attributes":[{"value":"/ This visitor will replace all boolean JSON Schemas with equivalent object schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111115,"byte_end":111201,"line_start":125,"line_end":125,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111202,"byte_end":111205,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. OpenAPI 3.0) that do not support booleans as schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111206,"byte_end":111312,"line_start":127,"line_end":127,"column_start":1,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":2351},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111484,"byte_end":111510,"line_start":131,"line_end":131,"column_start":9,"column_end":35},"name":"skip_additional_properties","qualname":"::visit::ReplaceBoolSchemas::skip_additional_properties","value":"bool","parent":{"krate":0,"index":2350},"children":[],"decl_id":null,"docs":" When set to `true`, a schema's `additionalProperties` property will not be changed from a boolean.\n","sig":null,"attributes":[{"value":"/ When set to `true`, a schema's `additionalProperties` property will not be changed from a boolean.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111373,"byte_end":111475,"line_start":130,"line_end":130,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":2356},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112725,"byte_end":112742,"line_start":166,"line_end":166,"column_start":12,"column_end":29},"name":"RemoveRefSiblings","qualname":"::visit::RemoveRefSiblings","value":"","parent":null,"children":[],"decl_id":null,"docs":" This visitor will restructure JSON Schema objects so that the `$ref` property will never appear alongside any other properties.","sig":null,"attributes":[{"value":"/ This visitor will restructure JSON Schema objects so that the `$ref` property will never appear alongside any other properties.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112437,"byte_end":112568,"line_start":162,"line_end":162,"column_start":1,"column_end":132}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112569,"byte_end":112572,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. Draft 7) that do not support other properties alongside `$ref`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112573,"byte_end":112689,"line_start":164,"line_end":164,"column_start":1,"column_end":117}}]},{"kind":"Struct","id":{"krate":0,"index":2362},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":113673,"byte_end":113689,"line_start":191,"line_end":191,"column_start":12,"column_end":28},"name":"SetSingleExample","qualname":"::visit::SetSingleExample","value":"SetSingleExample { retain_examples }","parent":null,"children":[{"krate":0,"index":2363}],"decl_id":null,"docs":" This visitor will remove the `examples` schema property and (if present) set its first value as the `example` property.","sig":null,"attributes":[{"value":"/ This visitor will remove the `examples` schema property and (if present) set its first value as the `example` property.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":113399,"byte_end":113522,"line_start":187,"line_end":187,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":113523,"byte_end":113526,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. OpenAPI 3.0) that do not support the `examples` property.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":113527,"byte_end":113637,"line_start":189,"line_end":189,"column_start":1,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":2363},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":113828,"byte_end":113843,"line_start":193,"line_end":193,"column_start":9,"column_end":24},"name":"retain_examples","qualname":"::visit::SetSingleExample::retain_examples","value":"bool","parent":{"krate":0,"index":2362},"children":[],"decl_id":null,"docs":" When set to `true`, the `examples` property will not be removed, but its first value will still be copied to `example`.\n","sig":null,"attributes":[{"value":"/ When set to `true`, the `examples` property will not be removed, but its first value will still be copied to `example`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":113696,"byte_end":113819,"line_start":192,"line_end":192,"column_start":5,"column_end":128}}]},{"kind":"Trait","id":{"krate":0,"index":622},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9962,"byte_end":9972,"line_start":336,"line_end":336,"column_start":11,"column_end":21},"name":"JsonSchema","qualname":"::JsonSchema","value":"JsonSchema","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"decl_id":null,"docs":" A type which can be described as a JSON Schema document.","sig":null,"attributes":[{"value":"/ A type which can be described as a JSON Schema document.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9512,"byte_end":9572,"line_start":319,"line_end":319,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9573,"byte_end":9576,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ This is implemented for many Rust primitive and standard library types.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9577,"byte_end":9652,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9653,"byte_end":9656,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ This can also be automatically derived on most custom types with `#[derive(JsonSchema)]`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9657,"byte_end":9750,"line_start":323,"line_end":323,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9751,"byte_end":9754,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9755,"byte_end":9768,"line_start":325,"line_end":325,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9769,"byte_end":9776,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ use schemars::{schema_for, JsonSchema};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9777,"byte_end":9820,"line_start":327,"line_end":327,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9821,"byte_end":9824,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9825,"byte_end":9850,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9851,"byte_end":9872,"line_start":330,"line_end":330,"column_start":1,"column_end":22}},{"value":"/     foo: i32,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9873,"byte_end":9890,"line_start":331,"line_end":331,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9891,"byte_end":9896,"line_start":332,"line_end":332,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9897,"byte_end":9900,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ let my_schema = schema_for!(MyStruct);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9901,"byte_end":9943,"line_start":334,"line_end":334,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9944,"byte_end":9951,"line_start":335,"line_end":335,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10385,"byte_end":10401,"line_start":343,"line_end":343,"column_start":8,"column_end":24},"name":"is_referenceable","qualname":"::JsonSchema::is_referenceable","value":"pub fn is_referenceable() -> bool","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":" Whether JSON Schemas generated for this type should be re-used where possible using the `$ref` keyword.","sig":null,"attributes":[{"value":"/ Whether JSON Schemas generated for this type should be re-used where possible using the `$ref` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9979,"byte_end":10086,"line_start":337,"line_end":337,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10091,"byte_end":10094,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ For trivial types (such as primitives), this should return `false`. For more complex types, it should return `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10099,"byte_end":10219,"line_start":339,"line_end":339,"column_start":5,"column_end":125}},{"value":"/ For recursive types, this **must** return `true` to prevent infinite cycles when generating schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10224,"byte_end":10328,"line_start":340,"line_end":340,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10333,"byte_end":10336,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ By default, this returns `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10341,"byte_end":10377,"line_start":342,"line_end":342,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10617,"byte_end":10628,"line_start":350,"line_end":350,"column_start":8,"column_end":19},"name":"schema_name","qualname":"::JsonSchema::schema_name","value":"pub fn schema_name() -> String","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":" The name of the generated JSON Schema.","sig":null,"attributes":[{"value":"/ The name of the generated JSON Schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10438,"byte_end":10480,"line_start":347,"line_end":347,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10485,"byte_end":10488,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This is used as the title for root schemas, and the key within the root's `definitions` property for subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10493,"byte_end":10609,"line_start":349,"line_end":349,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10972,"byte_end":10983,"line_start":358,"line_end":358,"column_start":8,"column_end":19},"name":"json_schema","qualname":"::JsonSchema::json_schema","value":"pub fn json_schema(&mut gen::SchemaGenerator) -> Schema","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":" Generates a JSON Schema for this type.","sig":null,"attributes":[{"value":"/ Generates a JSON Schema for this type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10647,"byte_end":10689,"line_start":352,"line_end":352,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10694,"byte_end":10697,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If the returned schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10702,"byte_end":10820,"line_start":354,"line_end":354,"column_start":5,"column_end":123}},{"value":"/ add them to the [`SchemaGenerator`](gen::SchemaGenerator)'s schema definitions.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10825,"byte_end":10908,"line_start":355,"line_end":355,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10913,"byte_end":10916,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This should not return a `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10921,"byte_end":10964,"line_start":357,"line_end":357,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11280,"byte_end":11303,"line_start":365,"line_end":365,"column_start":8,"column_end":31},"name":"json_schema_for_flatten","qualname":"::JsonSchema::json_schema_for_flatten","value":"pub fn json_schema_for_flatten(&mut gen::SchemaGenerator) -> Schema","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":" Helper for generating schemas for flattened `Option` fields.","sig":null,"attributes":[{"value":"/ Helper for generating schemas for flattened `Option` fields.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11032,"byte_end":11096,"line_start":360,"line_end":360,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11101,"byte_end":11104,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This should not need to be called or implemented by code outside of `schemars`,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11109,"byte_end":11192,"line_start":362,"line_end":362,"column_start":5,"column_end":88}},{"value":"/ and should not be considered part of the public API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11197,"byte_end":11253,"line_start":363,"line_end":363,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11628,"byte_end":11650,"line_start":374,"line_end":374,"column_start":8,"column_end":30},"name":"add_schema_as_property","qualname":"::JsonSchema::add_schema_as_property","value":"pub fn add_schema_as_property(&mut gen::SchemaGenerator, &mut SchemaObject,\n                              String, Option<schema::Metadata>, bool)","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":" Helper for generating schemas for `Option` fields.","sig":null,"attributes":[{"value":"/ Helper for generating schemas for `Option` fields.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11390,"byte_end":11444,"line_start":369,"line_end":369,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11449,"byte_end":11452,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This should not need to be called or implemented by code outside of `schemars`,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11457,"byte_end":11540,"line_start":371,"line_end":371,"column_start":5,"column_end":88}},{"value":"/ and should not be considered part of the public API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11545,"byte_end":11601,"line_start":372,"line_end":372,"column_start":5,"column_end":61}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13119,"byte_end":13125,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":14395,"byte_end":14403,"line_start":47,"line_end":47,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15516,"byte_end":15522,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15752,"byte_end":15755,"line_start":93,"line_end":93,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15886,"byte_end":15889,"line_start":100,"line_end":100,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16012,"byte_end":16015,"line_start":107,"line_end":107,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16184,"byte_end":16187,"line_start":117,"line_end":117,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16304,"byte_end":16315,"line_start":124,"line_end":124,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":23340,"byte_end":23346,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":25945,"byte_end":25951,"line_start":85,"line_end":85,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":26980,"byte_end":26985,"line_start":115,"line_end":115,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":28317,"byte_end":28322,"line_start":155,"line_end":155,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/ffi.rs","byte_start":31326,"byte_end":31334,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/serdejson.rs","byte_start":41887,"byte_end":41892,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/serdejson.rs","byte_start":42163,"byte_end":42169,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1165},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/time.rs","byte_start":42645,"byte_end":42653,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/time.rs","byte_start":43290,"byte_end":43300,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":49045,"byte_end":49055,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":56871,"byte_end":56881,"line_start":304,"line_end":304,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":57222,"byte_end":57232,"line_start":320,"line_end":320,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":57614,"byte_end":57626,"line_start":340,"line_end":340,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":58776,"byte_end":58790,"line_start":380,"line_end":380,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":59835,"byte_end":59849,"line_start":417,"line_end":417,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":60246,"byte_end":60258,"line_start":433,"line_end":433,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":61723,"byte_end":61735,"line_start":485,"line_end":485,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67584,"byte_end":67598,"line_start":52,"line_end":52,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67686,"byte_end":67700,"line_start":58,"line_end":58,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71203,"byte_end":71218,"line_start":159,"line_end":159,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71461,"byte_end":71476,"line_start":169,"line_end":169,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71575,"byte_end":71590,"line_start":175,"line_end":175,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82087,"byte_end":82105,"line_start":448,"line_end":448,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82357,"byte_end":82375,"line_start":455,"line_end":455,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83586,"byte_end":83587,"line_start":496,"line_end":496,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84917,"byte_end":84923,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86570,"byte_end":86576,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86673,"byte_end":86679,"line_start":81,"line_end":81,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92401,"byte_end":92413,"line_start":207,"line_end":207,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93464,"byte_end":93476,"line_start":235,"line_end":235,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":106002,"byte_end":106013,"line_start":498,"line_end":498,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":106132,"byte_end":106143,"line_start":504,"line_end":504,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111538,"byte_end":111556,"line_start":134,"line_end":134,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112762,"byte_end":112779,"line_start":168,"line_end":168,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":113871,"byte_end":113887,"line_start":196,"line_end":196,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9205,"byte_end":9208,"line_start":304,"line_end":304,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":436}},{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9218,"byte_end":9224,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":524}},{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9234,"byte_end":9239,"line_start":306,"line_end":306,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":570}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13119,"byte_end":13125,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13624,"byte_end":13629,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2854},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":14395,"byte_end":14403,"line_start":47,"line_end":47,"column_start":16,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15516,"byte_end":15522,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":40103},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15752,"byte_end":15755,"line_start":93,"line_end":93,"column_start":26,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15886,"byte_end":15889,"line_start":100,"line_end":100,"column_start":19,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":6780},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16012,"byte_end":16015,"line_start":107,"line_end":107,"column_start":22,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16184,"byte_end":16187,"line_start":117,"line_end":117,"column_start":24,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":6},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16304,"byte_end":16315,"line_start":124,"line_end":124,"column_start":16,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2342},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":23340,"byte_end":23346,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":40103},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":25945,"byte_end":25951,"line_start":85,"line_end":85,"column_start":51,"column_end":57},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":40235},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":26980,"byte_end":26985,"line_start":115,"line_end":115,"column_start":36,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":2,"index":38799},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":28317,"byte_end":28322,"line_start":155,"line_end":155,"column_start":36,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":38684},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/ffi.rs","byte_start":31326,"byte_end":31334,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":2768},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/serdejson.rs","byte_start":41887,"byte_end":41892,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"kind":{"Impl":{"id":78}},"from":{"krate":20,"index":2535},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/serdejson.rs","byte_start":42163,"byte_end":42169,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"kind":{"Impl":{"id":80}},"from":{"krate":20,"index":3112},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/time.rs","byte_start":42645,"byte_end":42653,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":2,"index":42629},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/time.rs","byte_start":43290,"byte_end":43300,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":1,"index":11537},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":49045,"byte_end":49055,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":332},"to":{"krate":21,"index":2078}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":56871,"byte_end":56881,"line_start":304,"line_end":304,"column_start":44,"column_end":54},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":332},"to":{"krate":21,"index":2146}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":57222,"byte_end":57232,"line_start":320,"line_end":320,"column_start":45,"column_end":55},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":332},"to":{"krate":21,"index":2170}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":57614,"byte_end":57626,"line_start":340,"line_end":340,"column_start":35,"column_end":47},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":336},"to":{"krate":21,"index":2128}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":58776,"byte_end":58790,"line_start":380,"line_end":380,"column_start":37,"column_end":51},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":340},"to":{"krate":21,"index":2134}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":59835,"byte_end":59849,"line_start":417,"line_end":417,"column_start":43,"column_end":57},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":340},"to":{"krate":21,"index":2140}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":60246,"byte_end":60258,"line_start":433,"line_end":433,"column_start":35,"column_end":47},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":345},"to":{"krate":21,"index":2152}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":61723,"byte_end":61735,"line_start":485,"line_end":485,"column_start":38,"column_end":50},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":345},"to":{"krate":21,"index":2163}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67584,"byte_end":67598,"line_start":52,"line_end":52,"column_start":18,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1483},"to":{"krate":2,"index":2827}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67686,"byte_end":67700,"line_start":58,"line_end":58,"column_start":6,"column_end":20},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71203,"byte_end":71218,"line_start":159,"line_end":159,"column_start":16,"column_end":31},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1495},"to":{"krate":2,"index":2470}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71461,"byte_end":71476,"line_start":169,"line_end":169,"column_start":31,"column_end":46},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1495},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71575,"byte_end":71590,"line_start":175,"line_end":175,"column_start":6,"column_end":21},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82087,"byte_end":82105,"line_start":448,"line_end":448,"column_start":18,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82357,"byte_end":82375,"line_start":455,"line_end":455,"column_start":23,"column_end":41},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":509},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83333,"byte_end":83340,"line_start":489,"line_end":489,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":584},"to":{"krate":0,"index":519}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83343,"byte_end":83348,"line_start":489,"line_end":489,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":8891},"to":{"krate":0,"index":519}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83351,"byte_end":83359,"line_start":489,"line_end":489,"column_start":41,"column_end":49},"kind":"SuperTrait","from":{"krate":27,"index":35},"to":{"krate":0,"index":519}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83362,"byte_end":83365,"line_start":489,"line_end":489,"column_start":52,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":3512},"to":{"krate":0,"index":519}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":83586,"byte_end":83587,"line_start":496,"line_end":496,"column_start":24,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":522},"to":{"krate":0,"index":519}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84917,"byte_end":84923,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86570,"byte_end":86576,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1536},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86673,"byte_end":86679,"line_start":81,"line_end":81,"column_start":21,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1536},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92401,"byte_end":92413,"line_start":207,"line_end":207,"column_start":6,"column_end":18},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93464,"byte_end":93476,"line_start":235,"line_end":235,"column_start":23,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1734},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":106002,"byte_end":106013,"line_start":498,"line_end":498,"column_start":21,"column_end":32},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2342},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":106132,"byte_end":106143,"line_start":504,"line_end":504,"column_start":26,"column_end":37},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2342},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111538,"byte_end":111556,"line_start":134,"line_end":134,"column_start":18,"column_end":36},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2350},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112762,"byte_end":112779,"line_start":168,"line_end":168,"column_start":18,"column_end":35},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2356},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":113871,"byte_end":113887,"line_start":196,"line_end":196,"column_start":18,"column_end":34},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2362},"to":{"krate":0,"index":584}}]}