{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0","program":"/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wasmi","--edition=2018","/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"libc\"","--cfg","feature=\"std\"","-C","metadata=342afb8af9611fc4","-C","extra-filename=-342afb8af9611fc4","--out-dir","/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps","-L","dependency=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps","--extern","downcast_rs=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libdowncast_rs-d2a3ae47d90e5713.rmeta","--extern","libc=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/liblibc-0794c1839e6e99ea.rmeta","--extern","memory_units=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libmemory_units-86b4c42895ef3f01.rmeta","--extern","num_rational=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libnum_rational-0e9bb61d4eb789f1.rmeta","--extern","num_traits=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libnum_traits-6b7089eb21777081.rmeta","--extern","parity_wasm=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libparity_wasm-e40010214358a528.rmeta","--extern","validation=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libwasmi_validation-c24b5746292a5a14.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu"],"output":"/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/target/rls/debug/deps/libwasmi-342afb8af9611fc4.rmeta"},"prelude":{"crate_id":{"name":"wasmi","disambiguator":[11729612931558425261,5555832423302988092]},"crate_root":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src","external_crates":[{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10283585399922801530,3113815793436671734]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4001252548733048619,17242313319436819942]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5352780060018682353,5212160423076132458]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17147711338457548981,6939542792032145917]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2842547253401849104,13491194742958542480]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[743652736616489669,1287960927584068912]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16292678807852148020,5791869870655771082]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[9404817637945341771,5464406936793117880]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17888196348013287212,15275907588461469564]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1276787031323089283,14926302036319710225]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[3988411805964943353,12607049771423756955]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[2565427104194196404,14362732384292144629]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[11025534897254923617,14932093111515565771]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[6421578182970509025,18151391361782090522]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[6900026989174100552,1126691905217298232]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":19,"id":{"name":"num_rational","disambiguator":[1512490156504942878,4568184969788970835]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":20,"id":{"name":"num_bigint","disambiguator":[17802361920694981400,13673590979808270237]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":21,"id":{"name":"num_integer","disambiguator":[13590646736213179345,3968456472901781956]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":22,"id":{"name":"num_traits","disambiguator":[9478064405720627977,16070201030793647158]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","num":23,"id":{"name":"parity_wasm","disambiguator":[11380852109291907178,13395067299273316619]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","num":24,"id":{"name":"downcast_rs","disambiguator":[6318835023558804005,17103449425152447175]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","num":25,"id":{"name":"wasmi_validation","disambiguator":[6179453967506652571,10362158619331547932]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","num":26,"id":{"name":"memory_units","disambiguator":[4083470618220657391,15903631758332431648]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mmap_bytebuf.rs","num":27,"id":{"name":"libc","disambiguator":[3007975702234999712,17051625982276154889]}}],"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":0,"byte_end":18903,"line_start":1,"line_end":599,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13305,"byte_end":13317,"line_start":438,"line_end":438,"column_start":22,"column_end":34},"alias_span":null,"name":"FuncInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13319,"byte_end":13333,"line_start":438,"line_end":438,"column_start":36,"column_end":50},"alias_span":null,"name":"FuncInvocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1778},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13335,"byte_end":13342,"line_start":438,"line_end":438,"column_start":52,"column_end":59},"alias_span":null,"name":"FuncRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1795},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13344,"byte_end":13358,"line_start":438,"line_end":438,"column_start":61,"column_end":75},"alias_span":null,"name":"ResumableError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1819},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13384,"byte_end":13398,"line_start":439,"line_end":439,"column_start":24,"column_end":38},"alias_span":null,"name":"GlobalInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1812},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13400,"byte_end":13409,"line_start":439,"line_end":439,"column_start":40,"column_end":49},"alias_span":null,"name":"GlobalRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":230},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13433,"byte_end":13442,"line_start":440,"line_end":440,"column_start":22,"column_end":31},"alias_span":null,"name":"Externals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13444,"byte_end":13453,"line_start":440,"line_end":440,"column_start":33,"column_end":42},"alias_span":null,"name":"HostError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":232},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13455,"byte_end":13467,"line_start":440,"line_end":440,"column_start":44,"column_end":56},"alias_span":null,"name":"NopExternals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13455,"byte_end":13467,"line_start":440,"line_end":440,"column_start":44,"column_end":56},"alias_span":null,"name":"NopExternals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1824},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13469,"byte_end":13480,"line_start":440,"line_end":440,"column_start":58,"column_end":69},"alias_span":null,"name":"RuntimeArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13507,"byte_end":13521,"line_start":441,"line_end":441,"column_start":25,"column_end":39},"alias_span":null,"name":"ImportResolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13523,"byte_end":13537,"line_start":441,"line_end":441,"column_start":41,"column_end":55},"alias_span":null,"name":"ImportsBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":305},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13539,"byte_end":13559,"line_start":441,"line_end":441,"column_start":57,"column_end":77},"alias_span":null,"name":"ModuleImportResolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13585,"byte_end":13599,"line_start":442,"line_end":442,"column_start":24,"column_end":38},"alias_span":null,"name":"MemoryInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2709},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13601,"byte_end":13610,"line_start":442,"line_end":442,"column_start":40,"column_end":49},"alias_span":null,"name":"MemoryRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13612,"byte_end":13635,"line_start":442,"line_end":442,"column_start":51,"column_end":74},"alias_span":null,"name":"LINEAR_MEMORY_PAGE_SIZE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13661,"byte_end":13670,"line_start":443,"line_end":443,"column_start":24,"column_end":33},"alias_span":null,"name":"ExternVal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2723},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13672,"byte_end":13686,"line_start":443,"line_end":443,"column_start":35,"column_end":49},"alias_span":null,"name":"ModuleInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2716},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13688,"byte_end":13697,"line_start":443,"line_end":443,"column_start":51,"column_end":60},"alias_span":null,"name":"ModuleRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2717},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13688,"byte_end":13697,"line_start":443,"line_end":443,"column_start":51,"column_end":60},"alias_span":null,"name":"ModuleRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":713},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13699,"byte_end":13718,"line_start":443,"line_end":443,"column_start":62,"column_end":81},"alias_span":null,"name":"NotStartedModuleRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1270},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13744,"byte_end":13757,"line_start":444,"line_end":444,"column_start":24,"column_end":37},"alias_span":null,"name":"StackRecycler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1025},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13759,"byte_end":13783,"line_start":444,"line_end":444,"column_start":39,"column_end":63},"alias_span":null,"name":"DEFAULT_CALL_STACK_LIMIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13785,"byte_end":13810,"line_start":444,"line_end":444,"column_start":65,"column_end":90},"alias_span":null,"name":"DEFAULT_VALUE_STACK_LIMIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1320},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13835,"byte_end":13848,"line_start":445,"line_end":445,"column_start":23,"column_end":36},"alias_span":null,"name":"TableInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3043},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13850,"byte_end":13858,"line_start":445,"line_end":445,"column_start":38,"column_end":46},"alias_span":null,"name":"TableRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13883,"byte_end":13899,"line_start":446,"line_end":446,"column_start":23,"column_end":39},"alias_span":null,"name":"GlobalDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1382},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13901,"byte_end":13917,"line_start":446,"line_end":446,"column_start":41,"column_end":57},"alias_span":null,"name":"MemoryDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3050},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13919,"byte_end":13928,"line_start":446,"line_end":446,"column_start":59,"column_end":68},"alias_span":null,"name":"Signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1375},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13930,"byte_end":13945,"line_start":446,"line_end":446,"column_start":70,"column_end":85},"alias_span":null,"name":"TableDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3064},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13947,"byte_end":13956,"line_start":446,"line_end":446,"column_start":87,"column_end":96},"alias_span":null,"name":"ValueType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3084},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13981,"byte_end":13986,"line_start":447,"line_end":447,"column_start":23,"column_end":28},"alias_span":null,"name":"ValueError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14002,"byte_end":14018,"line_start":447,"line_end":447,"column_start":44,"column_end":60},"alias_span":null,"name":"FromRuntimeValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1434},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14020,"byte_end":14039,"line_start":447,"line_end":447,"column_start":62,"column_end":81},"alias_span":null,"name":"LittleEndianConvert","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3089},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14041,"byte_end":14053,"line_start":447,"line_end":447,"column_start":83,"column_end":95},"alias_span":null,"name":"RuntimeValue","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14156,"byte_end":14157,"line_start":451,"line_end":451,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"Pages","parent":{"krate":0,"index":1696}},{"kind":"Use","ref_id":{"krate":26,"index":15},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14186,"byte_end":14193,"line_start":452,"line_end":452,"column_start":28,"column_end":35},"alias_span":null,"name":"size_of","value":"","parent":{"krate":0,"index":1696}},{"kind":"Use","ref_id":{"krate":26,"index":21},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14195,"byte_end":14203,"line_start":452,"line_end":452,"column_start":37,"column_end":45},"alias_span":null,"name":"ByteSize","value":"","parent":{"krate":0,"index":1696}},{"kind":"Use","ref_id":{"krate":26,"index":37},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14205,"byte_end":14210,"line_start":452,"line_end":452,"column_start":47,"column_end":52},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":1696}},{"kind":"Use","ref_id":{"krate":26,"index":38},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14205,"byte_end":14210,"line_start":452,"line_end":452,"column_start":47,"column_end":52},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":1696}},{"kind":"Use","ref_id":{"krate":26,"index":17},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14212,"byte_end":14221,"line_start":452,"line_end":452,"column_start":54,"column_end":63},"alias_span":null,"name":"RoundUpTo","value":"","parent":{"krate":0,"index":1696}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":0,"byte_end":18903,"line_start":1,"line_end":599,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":27},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":1726},{"krate":0,"index":1746},{"krate":0,"index":35},{"krate":0,"index":1748},{"krate":0,"index":1776},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":164},{"krate":0,"index":193},{"krate":0,"index":236},{"krate":0,"index":323},{"krate":0,"index":350},{"krate":0,"index":519},{"krate":0,"index":729},{"krate":0,"index":772},{"krate":0,"index":920},{"krate":0,"index":1288},{"krate":0,"index":1339},{"krate":0,"index":1389},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1594},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1608},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1671},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1711},{"krate":0,"index":1714}],"decl_id":null,"docs":" # wasmi","sig":null,"attributes":[{"value":"/ # wasmi","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library allows WebAssembly modules to be loaded in binary format and their functions invoked.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16,"byte_end":118,"line_start":3,"line_end":3,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":119,"byte_end":122,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Introduction","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":123,"byte_end":141,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":142,"byte_end":145,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ WebAssembly (wasm) is a safe, portable and compact format that is designed for efficient execution.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":146,"byte_end":249,"line_start":7,"line_end":7,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":250,"byte_end":253,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Wasm code is distributed in the form of modules that contains definitions of:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":254,"byte_end":335,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":336,"byte_end":339,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - functions,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":340,"byte_end":356,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"/ - global variables,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":357,"byte_end":380,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/ - linear memory instances and","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":381,"byte_end":414,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ - tables.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":415,"byte_end":428,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":429,"byte_end":432,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Each of these definitions can be imported and exported.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":433,"byte_end":492,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":493,"byte_end":496,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In addition to these definitions, modules can define initialization data for their memory or tables. This initialization data can take the","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":497,"byte_end":639,"line_start":18,"line_end":18,"column_start":1,"column_end":143}},{"value":"/ form of segments, copied to given offsets. They can also define a `start` function that is automatically executed when the module is loaded.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":640,"byte_end":784,"line_start":19,"line_end":19,"column_start":1,"column_end":145}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":785,"byte_end":788,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Loading and Validation","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":789,"byte_end":818,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":819,"byte_end":822,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Before execution, a module must be validated. This process checks that the module is well-formed","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":823,"byte_end":923,"line_start":23,"line_end":23,"column_start":1,"column_end":101}},{"value":"/ and makes only allowed operations.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":924,"byte_end":962,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":963,"byte_end":966,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A valid module can't access memory outside its sandbox, can't cause stack underflows","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":967,"byte_end":1055,"line_start":26,"line_end":26,"column_start":1,"column_end":89}},{"value":"/ and can only call functions with correct signatures.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1056,"byte_end":1112,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1113,"byte_end":1116,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Instantiation","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1117,"byte_end":1137,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1138,"byte_end":1141,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In order to execute code from a wasm module, it must be instantiated.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1142,"byte_end":1215,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ Instantiation includes the following steps:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1216,"byte_end":1263,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1264,"byte_end":1267,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ 1. Creating an empty module instance.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1268,"byte_end":1309,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ 2. Resolving the definition instances for each declared import in the module.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1310,"byte_end":1391,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ 3. Instantiating definitions declared in the module (e.g. allocate global variables, allocate linear memory, etc.).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1392,"byte_end":1511,"line_start":36,"line_end":36,"column_start":1,"column_end":120}},{"value":"/ 4. Initializing memory and table contents by copying segments into them.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1512,"byte_end":1588,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ 5. Executing the `start` function, if any.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1589,"byte_end":1635,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1636,"byte_end":1639,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ After these steps, the module instance is ready to execute functions.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1640,"byte_end":1713,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1714,"byte_end":1717,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Execution","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1718,"byte_end":1734,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1735,"byte_end":1738,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ It only is allowed to call functions which are exported by the module.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1739,"byte_end":1813,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ Functions can either return a result or trap (e.g. there can't be linking error in the middle of the function execution).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1814,"byte_end":1939,"line_start":45,"line_end":45,"column_start":1,"column_end":126}},{"value":"/ This property is ensured by the validation process.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1940,"byte_end":1995,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":1996,"byte_end":1999,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2000,"byte_end":2014,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2015,"byte_end":2018,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2019,"byte_end":2030,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ extern crate wasmi;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2031,"byte_end":2054,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/ extern crate wabt;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2055,"byte_end":2077,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2078,"byte_end":2081,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder, NopExternals, RuntimeValue};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2082,"byte_end":2158,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2159,"byte_end":2162,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2163,"byte_end":2178,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     // Parse WAT (WebAssembly Text format) into wasm bytecode.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2179,"byte_end":2245,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/     let wasm_binary: Vec<u8> =","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2246,"byte_end":2280,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/         wabt::wat2wasm(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2281,"byte_end":2308,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/             r#\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2309,"byte_end":2328,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/             (module","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2329,"byte_end":2352,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/                 (func (export \"test\") (result i32)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2353,"byte_end":2407,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/                     i32.const 1337","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2408,"byte_end":2446,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/                 )","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2447,"byte_end":2468,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/             )","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2469,"byte_end":2486,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/             \"#,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2487,"byte_end":2506,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/         )","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2507,"byte_end":2520,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/         .expect(\"failed to parse wat\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2521,"byte_end":2564,"line_start":68,"line_end":68,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2565,"byte_end":2568,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     // Load wasm binary and prepare it for instantiation.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2569,"byte_end":2630,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/     let module = wasmi::Module::from_buffer(&wasm_binary)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2631,"byte_end":2692,"line_start":71,"line_end":71,"column_start":1,"column_end":62}},{"value":"/         .expect(\"failed to load wasm\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2693,"byte_end":2736,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2737,"byte_end":2740,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Instantiate a module with empty imports and","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2741,"byte_end":2795,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/     // assert that there is no `start` function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2796,"byte_end":2848,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/     let instance =","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2849,"byte_end":2871,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/         ModuleInstance::new(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2872,"byte_end":2904,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/             &module,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2905,"byte_end":2929,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/             &ImportsBuilder::default()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2930,"byte_end":2972,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/         )","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2973,"byte_end":2986,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/         .expect(\"failed to instantiate wasm module\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":2987,"byte_end":3043,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/         .assert_no_start();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3044,"byte_end":3075,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3076,"byte_end":3079,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     // Finally, invoke the exported function \"test\" with no parameters","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3080,"byte_end":3154,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"/     // and empty external function executor.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3155,"byte_end":3203,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/     assert_eq!(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3204,"byte_end":3223,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/         instance.invoke_export(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3224,"byte_end":3259,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/             \"test\",","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3260,"byte_end":3283,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"/             &[],","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3284,"byte_end":3304,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"/             &mut NopExternals,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3305,"byte_end":3339,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/         ).expect(\"failed to execute export\"),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3340,"byte_end":3389,"line_start":91,"line_end":91,"column_start":1,"column_end":50}},{"value":"/         Some(RuntimeValue::I32(1337)),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3390,"byte_end":3432,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/     );","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3433,"byte_end":3443,"line_start":93,"line_end":93,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3444,"byte_end":3449,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3450,"byte_end":3457,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3459,"byte_end":3481,"line_start":97,"line_end":97,"column_start":1,"column_end":23}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3525,"byte_end":3564,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":3565,"byte_end":3599,"line_start":100,"line_end":100,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1722},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4369,"byte_end":4373,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"Trap","qualname":"::Trap","value":"Trap {  }","parent":null,"children":[{"krate":0,"index":1723}],"decl_id":null,"docs":" Error type which can be thrown by wasm code or by host environment.","sig":null,"attributes":[{"value":"/ Error type which can be thrown by wasm code or by host environment.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4083,"byte_end":4154,"line_start":132,"line_end":132,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4155,"byte_end":4158,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Under some conditions, wasm execution may produce a `Trap`, which immediately aborts execution.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4159,"byte_end":4258,"line_start":134,"line_end":134,"column_start":1,"column_end":100}},{"value":"/ Traps can't be handled by WebAssembly code, but are reported to the embedder.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4259,"byte_end":4340,"line_start":135,"line_end":135,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4447,"byte_end":4450,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<Trap>::new","value":"pub fn new(TrapKind) -> Trap","parent":null,"children":[],"decl_id":null,"docs":" Create new trap.\n","sig":null,"attributes":[{"value":"/ Create new trap.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4415,"byte_end":4435,"line_start":142,"line_end":142,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4552,"byte_end":4556,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"kind","qualname":"<Trap>::kind","value":"pub fn kind(&Self) -> &TrapKind","parent":null,"children":[],"decl_id":null,"docs":" Returns kind of this trap.\n","sig":null,"attributes":[{"value":"/ Returns kind of this trap.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4510,"byte_end":4540,"line_start":147,"line_end":147,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4657,"byte_end":4666,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"into_kind","qualname":"<Trap>::into_kind","value":"pub fn into_kind(Self) -> TrapKind","parent":null,"children":[],"decl_id":null,"docs":" Converts into kind of this trap.\n","sig":null,"attributes":[{"value":"/ Converts into kind of this trap.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4609,"byte_end":4645,"line_start":152,"line_end":152,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1727},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5351,"byte_end":5362,"line_start":182,"line_end":182,"column_start":5,"column_end":16},"name":"Unreachable","qualname":"::TrapKind::Unreachable","value":"TrapKind::Unreachable","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" Wasm code executed `unreachable` opcode.","sig":null,"attributes":[{"value":"/ Wasm code executed `unreachable` opcode.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5157,"byte_end":5201,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5206,"byte_end":5209,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ `unreachable` is a special opcode which always traps upon execution.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5214,"byte_end":5286,"line_start":180,"line_end":180,"column_start":5,"column_end":77}},{"value":"/ This opcode have a similar purpose as `ud2` in x86.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5291,"byte_end":5346,"line_start":181,"line_end":181,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1729},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5635,"byte_end":5658,"line_start":189,"line_end":189,"column_start":5,"column_end":28},"name":"MemoryAccessOutOfBounds","qualname":"::TrapKind::MemoryAccessOutOfBounds","value":"TrapKind::MemoryAccessOutOfBounds","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" Attempt to load or store at the address which\n lies outside of bounds of the memory.","sig":null,"attributes":[{"value":"/ Attempt to load or store at the address which","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5369,"byte_end":5418,"line_start":184,"line_end":184,"column_start":5,"column_end":54}},{"value":"/ lies outside of bounds of the memory.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5423,"byte_end":5464,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5469,"byte_end":5472,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Since addresses are interpreted as unsigned integers, out of bounds access","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5477,"byte_end":5555,"line_start":187,"line_end":187,"column_start":5,"column_end":83}},{"value":"/ can't happen with negative addresses (i.e. they will always wrap).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5560,"byte_end":5630,"line_start":188,"line_end":188,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1731},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6033,"byte_end":6055,"line_start":199,"line_end":199,"column_start":5,"column_end":27},"name":"TableAccessOutOfBounds","qualname":"::TrapKind::TableAccessOutOfBounds","value":"TrapKind::TableAccessOutOfBounds","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" Attempt to access table element at index which\n lies outside of bounds.","sig":null,"attributes":[{"value":"/ Attempt to access table element at index which","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5665,"byte_end":5715,"line_start":191,"line_end":191,"column_start":5,"column_end":55}},{"value":"/ lies outside of bounds.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5720,"byte_end":5747,"line_start":192,"line_end":192,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5752,"byte_end":5755,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This typically can happen when `call_indirect` is executed","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5760,"byte_end":5822,"line_start":194,"line_end":194,"column_start":5,"column_end":67}},{"value":"/ with index that lies out of bounds.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5827,"byte_end":5866,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5871,"byte_end":5874,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Since indexes are interpreted as unsinged integers, out of bounds access","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5879,"byte_end":5955,"line_start":197,"line_end":197,"column_start":5,"column_end":81}},{"value":"/ can't happen with negative indexes (i.e. they will always wrap).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5960,"byte_end":6028,"line_start":198,"line_end":198,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1733},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6216,"byte_end":6233,"line_start":204,"line_end":204,"column_start":5,"column_end":22},"name":"ElemUninitialized","qualname":"::TrapKind::ElemUninitialized","value":"TrapKind::ElemUninitialized","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" Attempt to access table element which is uninitialized (i.e. `None`).","sig":null,"attributes":[{"value":"/ Attempt to access table element which is uninitialized (i.e. `None`).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6062,"byte_end":6135,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6140,"byte_end":6143,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This typically can happen when `call_indirect` is executed.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6148,"byte_end":6211,"line_start":203,"line_end":203,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1735},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6382,"byte_end":6396,"line_start":210,"line_end":210,"column_start":5,"column_end":19},"name":"DivisionByZero","qualname":"::TrapKind::DivisionByZero","value":"TrapKind::DivisionByZero","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" Attempt to divide by zero.","sig":null,"attributes":[{"value":"/ Attempt to divide by zero.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6240,"byte_end":6270,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6275,"byte_end":6278,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This trap typically can happen if `div` or `rem` is executed with","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6283,"byte_end":6352,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/ zero as divider.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6357,"byte_end":6377,"line_start":209,"line_end":209,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1737},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6801,"byte_end":6823,"line_start":219,"line_end":219,"column_start":5,"column_end":27},"name":"InvalidConversionToInt","qualname":"::TrapKind::InvalidConversionToInt","value":"TrapKind::InvalidConversionToInt","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" Attempt to make a conversion to an int failed.","sig":null,"attributes":[{"value":"/ Attempt to make a conversion to an int failed.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6403,"byte_end":6453,"line_start":212,"line_end":212,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6458,"byte_end":6461,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This can happen when:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6466,"byte_end":6491,"line_start":214,"line_end":214,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6496,"byte_end":6499,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ - trying to do signed division (or get the remainder) -2<sup>N-1</sup> over -1. This is","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6504,"byte_end":6595,"line_start":216,"line_end":216,"column_start":5,"column_end":96}},{"value":"/   because the result +2<sup>N-1</sup> isn't representable as a N-bit signed integer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6600,"byte_end":6688,"line_start":217,"line_end":217,"column_start":5,"column_end":93}},{"value":"/ - trying to truncate NaNs, infinity, or value for which the result is out of range into an integer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6693,"byte_end":6796,"line_start":218,"line_end":218,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1739},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7003,"byte_end":7016,"line_start":225,"line_end":225,"column_start":5,"column_end":18},"name":"StackOverflow","qualname":"::TrapKind::StackOverflow","value":"TrapKind::StackOverflow","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" Stack overflow.","sig":null,"attributes":[{"value":"/ Stack overflow.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6830,"byte_end":6849,"line_start":221,"line_end":221,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6854,"byte_end":6857,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This is likely caused by some infinite or very deep recursion.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6862,"byte_end":6928,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/ Extensive inlining might also be the cause of stack overflow.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":6933,"byte_end":6998,"line_start":224,"line_end":224,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1741},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7575,"byte_end":7594,"line_start":238,"line_end":238,"column_start":5,"column_end":24},"name":"UnexpectedSignature","qualname":"::TrapKind::UnexpectedSignature","value":"TrapKind::UnexpectedSignature","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" Attempt to invoke a function with mismatching signature.","sig":null,"attributes":[{"value":"/ Attempt to invoke a function with mismatching signature.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7023,"byte_end":7083,"line_start":227,"line_end":227,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7088,"byte_end":7091,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This can happen if [`FuncInstance`] was invoked","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7096,"byte_end":7147,"line_start":229,"line_end":229,"column_start":5,"column_end":56}},{"value":"/ with mismatching [signature][`Signature`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7152,"byte_end":7198,"line_start":230,"line_end":230,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7203,"byte_end":7206,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ This can always happen with indirect calls. `call_indirect` instruction always","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7211,"byte_end":7293,"line_start":232,"line_end":232,"column_start":5,"column_end":87}},{"value":"/ specifies the expected signature of function. If `call_indirect` is executed","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7298,"byte_end":7378,"line_start":233,"line_end":233,"column_start":5,"column_end":85}},{"value":"/ with index that points on function with signature different that is","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7383,"byte_end":7454,"line_start":234,"line_end":234,"column_start":5,"column_end":76}},{"value":"/ expected by this `call_indirect`, this trap is raised.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7459,"byte_end":7517,"line_start":235,"line_end":235,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7522,"byte_end":7525,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`Signature`]: struct.Signature.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7530,"byte_end":7570,"line_start":237,"line_end":237,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1743},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7766,"byte_end":7770,"line_start":245,"line_end":245,"column_start":5,"column_end":9},"name":"Host","qualname":"::TrapKind::Host","value":"TrapKind::Host(Box<dyn host::HostError>)","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" Error specified by the host.","sig":null,"attributes":[{"value":"/ Error specified by the host.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7601,"byte_end":7633,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7638,"byte_end":7641,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Typically returned from an implementation of [`Externals`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7646,"byte_end":7709,"line_start":242,"line_end":242,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7714,"byte_end":7717,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ [`Externals`]: trait.Externals.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7722,"byte_end":7761,"line_start":244,"line_end":244,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":1726},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5142,"byte_end":5150,"line_start":177,"line_end":177,"column_start":10,"column_end":18},"name":"TrapKind","qualname":"::TrapKind","value":"pub enum TrapKind {\n    Unreachable,\n    MemoryAccessOutOfBounds,\n    TableAccessOutOfBounds,\n    ElemUninitialized,\n    DivisionByZero,\n    InvalidConversionToInt,\n    StackOverflow,\n    UnexpectedSignature,\n    Host(Box<dyn host::HostError>),\n}","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1741},{"krate":0,"index":1743}],"decl_id":null,"docs":" Error type which can be thrown by wasm code or by host environment.","sig":null,"attributes":[{"value":"/ Error type which can be thrown by wasm code or by host environment.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4975,"byte_end":5046,"line_start":171,"line_end":171,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5047,"byte_end":5050,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ See [`Trap`] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5051,"byte_end":5080,"line_start":173,"line_end":173,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5081,"byte_end":5084,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Trap`]: struct.Trap.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":5085,"byte_end":5115,"line_start":175,"line_end":175,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7880,"byte_end":7887,"line_start":250,"line_end":250,"column_start":12,"column_end":19},"name":"is_host","qualname":"<TrapKind>::is_host","value":"pub fn is_host(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this trap is specified by the host.\n","sig":null,"attributes":[{"value":"/ Whether this trap is specified by the host.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7821,"byte_end":7868,"line_start":249,"line_end":249,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1749},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8090,"byte_end":8100,"line_start":259,"line_end":259,"column_start":5,"column_end":15},"name":"Validation","qualname":"::Error::Validation","value":"Error::Validation(String)","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":" Module validation error. Might occur only at load time.\n","sig":null,"attributes":[{"value":"/ Module validation error. Might occur only at load time.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8026,"byte_end":8085,"line_start":258,"line_end":258,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1752},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8239,"byte_end":8252,"line_start":262,"line_end":262,"column_start":5,"column_end":18},"name":"Instantiation","qualname":"::Error::Instantiation","value":"Error::Instantiation(String)","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":" Error while instantiating a module. Might occur when provided\n with incorrect exports (i.e. linkage failure).\n","sig":null,"attributes":[{"value":"/ Error while instantiating a module. Might occur when provided","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8114,"byte_end":8179,"line_start":260,"line_end":260,"column_start":5,"column_end":70}},{"value":"/ with incorrect exports (i.e. linkage failure).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8184,"byte_end":8234,"line_start":261,"line_end":261,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1755},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8296,"byte_end":8304,"line_start":264,"line_end":264,"column_start":5,"column_end":13},"name":"Function","qualname":"::Error::Function","value":"Error::Function(String)","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":" Function-level error.\n","sig":null,"attributes":[{"value":"/ Function-level error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8266,"byte_end":8291,"line_start":263,"line_end":263,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1758},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8345,"byte_end":8350,"line_start":266,"line_end":266,"column_start":5,"column_end":10},"name":"Table","qualname":"::Error::Table","value":"Error::Table(String)","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":" Table-level error.\n","sig":null,"attributes":[{"value":"/ Table-level error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8318,"byte_end":8340,"line_start":265,"line_end":265,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1761},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8392,"byte_end":8398,"line_start":268,"line_end":268,"column_start":5,"column_end":11},"name":"Memory","qualname":"::Error::Memory","value":"Error::Memory(String)","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":" Memory-level error.\n","sig":null,"attributes":[{"value":"/ Memory-level error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8364,"byte_end":8387,"line_start":267,"line_end":267,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1764},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8440,"byte_end":8446,"line_start":270,"line_end":270,"column_start":5,"column_end":11},"name":"Global","qualname":"::Error::Global","value":"Error::Global(String)","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":" Global-level error.\n","sig":null,"attributes":[{"value":"/ Global-level error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8412,"byte_end":8435,"line_start":269,"line_end":269,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1767},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8487,"byte_end":8492,"line_start":272,"line_end":272,"column_start":5,"column_end":10},"name":"Value","qualname":"::Error::Value","value":"Error::Value(String)","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":" Value-level error.\n","sig":null,"attributes":[{"value":"/ Value-level error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8460,"byte_end":8482,"line_start":271,"line_end":271,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1770},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8520,"byte_end":8524,"line_start":274,"line_end":274,"column_start":5,"column_end":9},"name":"Trap","qualname":"::Error::Trap","value":"Error::Trap(Trap)","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":" Trap.\n","sig":null,"attributes":[{"value":"/ Trap.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8506,"byte_end":8515,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1773},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8567,"byte_end":8571,"line_start":276,"line_end":276,"column_start":5,"column_end":9},"name":"Host","qualname":"::Error::Host","value":"Error::Host(Box<dyn host::HostError>)","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":" Custom embedder error.\n","sig":null,"attributes":[{"value":"/ Custom embedder error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8536,"byte_end":8562,"line_start":275,"line_end":275,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1748},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8014,"byte_end":8019,"line_start":257,"line_end":257,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    Validation(String),\n    Instantiation(String),\n    Function(String),\n    Table(String),\n    Memory(String),\n    Global(String),\n    Value(String),\n    Trap(Trap),\n    Host(Box<dyn host::HostError>),\n}","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":1752},{"krate":0,"index":1755},{"krate":0,"index":1758},{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1770},{"krate":0,"index":1773}],"decl_id":null,"docs":" Internal interpreter error.\n","sig":null,"attributes":[{"value":"/ Internal interpreter error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7956,"byte_end":7987,"line_start":255,"line_end":255,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":9037,"byte_end":9050,"line_start":288,"line_end":288,"column_start":12,"column_end":25},"name":"as_host_error","qualname":"<Error>::as_host_error","value":"pub fn as_host_error(&Self) -> Option<&dyn host::HostError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a [`HostError`] if this `Error` represents some host error.","sig":null,"attributes":[{"value":"/ Returns a reference to a [`HostError`] if this `Error` represents some host error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8619,"byte_end":8705,"line_start":280,"line_end":280,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8710,"byte_end":8713,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ I.e. if this error have variant [`Host`] or [`Trap`][`Trap`] with [host][`TrapKind::Host`] error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8718,"byte_end":8819,"line_start":282,"line_end":282,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8824,"byte_end":8827,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ [`HostError`]: trait.HostError.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8832,"byte_end":8871,"line_start":284,"line_end":284,"column_start":5,"column_end":44}},{"value":"/ [`Host`]: enum.Error.html#variant.Host","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8876,"byte_end":8918,"line_start":285,"line_end":285,"column_start":5,"column_end":47}},{"value":"/ [`Trap`]: enum.Error.html#variant.Trap","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8923,"byte_end":8965,"line_start":286,"line_end":286,"column_start":5,"column_end":47}},{"value":"/ [`TrapKind::Host`]: enum.TrapKind.html#variant.Host","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8970,"byte_end":9025,"line_start":287,"line_end":287,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":9730,"byte_end":9745,"line_start":306,"line_end":306,"column_start":12,"column_end":27},"name":"into_host_error","qualname":"<Error>::into_host_error","value":"pub fn into_host_error(Self) -> Option<Box<dyn host::HostError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`HostError`] if this `Error` represents some host error.","sig":null,"attributes":[{"value":"/ Returns [`HostError`] if this `Error` represents some host error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":9329,"byte_end":9398,"line_start":298,"line_end":298,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":9403,"byte_end":9406,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ I.e. if this error have variant [`Host`] or [`Trap`][`Trap`] with [host][`TrapKind::Host`] error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":9411,"byte_end":9512,"line_start":300,"line_end":300,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":9517,"byte_end":9520,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ [`HostError`]: trait.HostError.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":9525,"byte_end":9564,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ [`Host`]: enum.Error.html#variant.Host","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":9569,"byte_end":9611,"line_start":303,"line_end":303,"column_start":5,"column_end":47}},{"value":"/ [`Trap`]: enum.Error.html#variant.Trap","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":9616,"byte_end":9658,"line_start":304,"line_end":304,"column_start":5,"column_end":47}},{"value":"/ [`TrapKind::Host`]: enum.TrapKind.html#variant.Host","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":9663,"byte_end":9718,"line_start":305,"line_end":305,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":10460,"byte_end":10479,"line_start":324,"line_end":324,"column_start":12,"column_end":31},"name":"try_into_host_error","qualname":"<Error>::try_into_host_error","value":"pub fn try_into_host_error(Self) -> Result<Box<dyn host::HostError>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`HostError`] if this `Error` represents some host error, otherwise returns the original error.","sig":null,"attributes":[{"value":"/ Returns [`HostError`] if this `Error` represents some host error, otherwise returns the original error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":10021,"byte_end":10128,"line_start":316,"line_end":316,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":10133,"byte_end":10136,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ I.e. if this error have variant [`Host`] or [`Trap`][`Trap`] with [host][`TrapKind::Host`] error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":10141,"byte_end":10242,"line_start":318,"line_end":318,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":10247,"byte_end":10250,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ [`HostError`]: trait.HostError.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":10255,"byte_end":10294,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/ [`Host`]: enum.Error.html#variant.Host","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":10299,"byte_end":10341,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/ [`Trap`]: enum.Error.html#variant.Trap","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":10346,"byte_end":10388,"line_start":322,"line_end":322,"column_start":5,"column_end":47}},{"value":"/ [`TrapKind::Host`]: enum.TrapKind.html#variant.Host","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":10393,"byte_end":10448,"line_start":323,"line_end":323,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1778},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19489,"byte_end":19496,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"FuncRef","qualname":"::func::FuncRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a function (See [`FuncInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a function (See [`FuncInstance`] for details).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19280,"byte_end":19343,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19344,"byte_end":19347,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19348,"byte_end":19402,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19403,"byte_end":19406,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`FuncInstance`]: struct.FuncInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19407,"byte_end":19453,"line_start":20,"line_end":20,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":118},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":20284,"byte_end":20296,"line_start":45,"line_end":45,"column_start":12,"column_end":24},"name":"FuncInstance","qualname":"::func::FuncInstance","value":"","parent":null,"children":[],"decl_id":null,"docs":" Runtime representation of a function.","sig":null,"attributes":[{"value":"/ Runtime representation of a function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19651,"byte_end":19692,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19693,"byte_end":19696,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Functions are the unit of organization of code in WebAssembly. Each function takes a sequence of values","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19697,"byte_end":19804,"line_start":33,"line_end":33,"column_start":1,"column_end":108}},{"value":"/ as parameters and either optionally return a value or trap.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19805,"byte_end":19868,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/ Functions can call other function including itself (i.e recursive calls are allowed) and imported functions","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19869,"byte_end":19980,"line_start":35,"line_end":35,"column_start":1,"column_end":112}},{"value":"/ (i.e functions defined in another module or by the host environment).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19981,"byte_end":20054,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":20055,"byte_end":20058,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Functions can be defined either:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":20059,"byte_end":20095,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":20096,"byte_end":20099,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ - by a wasm module,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":20100,"byte_end":20123,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ - by the host environment and passed to a wasm module as an import.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":20124,"byte_end":20195,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/   See more in [`Externals`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":20196,"byte_end":20228,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":20229,"byte_end":20232,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Externals`]: trait.Externals.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":20233,"byte_end":20272,"line_start":44,"line_end":44,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21622,"byte_end":21632,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"alloc_host","qualname":"<FuncInstance>::alloc_host","value":"pub fn alloc_host(Signature, usize) -> FuncRef","parent":null,"children":[],"decl_id":null,"docs":" Allocate a function instance for a host function.","sig":null,"attributes":[{"value":"/ Allocate a function instance for a host function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21234,"byte_end":21287,"line_start":76,"line_end":76,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21292,"byte_end":21295,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ When this function instance will be called by the wasm code,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21300,"byte_end":21364,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/ the instance of [`Externals`] will be invoked by calling `invoke_index`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21369,"byte_end":21444,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ with specified `host_func_index` here.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21449,"byte_end":21491,"line_start":80,"line_end":80,"column_start":5,"column_end":47}},{"value":"/ This call will be made with the `signature` provided here.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21496,"byte_end":21558,"line_start":81,"line_end":81,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21563,"byte_end":21566,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ [`Externals`]: trait.Externals.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21571,"byte_end":21610,"line_start":83,"line_end":83,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":22056,"byte_end":22065,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"signature","qualname":"<FuncInstance>::signature","value":"pub fn signature(&Self) -> &Signature","parent":null,"children":[],"decl_id":null,"docs":" Returns [signature] of this function instance.","sig":null,"attributes":[{"value":"/ Returns [signature] of this function instance.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21859,"byte_end":21909,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21914,"byte_end":21917,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function instance can only be called with matching signatures.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21922,"byte_end":21993,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21998,"byte_end":22001,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [signature]: struct.Signature.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":22006,"byte_end":22044,"line_start":96,"line_end":96,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23254,"byte_end":23260,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"invoke","qualname":"<FuncInstance>::invoke","value":"pub fn invoke<E: Externals>(&FuncRef, &[RuntimeValue], &mut E)\n-> Result<Option<RuntimeValue>, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke this function.","sig":null,"attributes":[{"value":"/ Invoke this function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":22977,"byte_end":23002,"line_start":128,"line_end":128,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23007,"byte_end":23010,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23015,"byte_end":23027,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23032,"byte_end":23035,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if `args` types is not match function [`signature`] or","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23040,"byte_end":23112,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ if [`Trap`] at execution time occured.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23117,"byte_end":23159,"line_start":133,"line_end":133,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23164,"byte_end":23167,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`signature`]: #method.signature","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23172,"byte_end":23208,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/ [`Trap`]: #enum.Trap.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23213,"byte_end":23242,"line_start":136,"line_end":136,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":24047,"byte_end":24064,"line_start":162,"line_end":162,"column_start":12,"column_end":29},"name":"invoke_with_stack","qualname":"<FuncInstance>::invoke_with_stack","value":"pub fn invoke_with_stack<E: Externals>(&FuncRef, &[RuntimeValue], &mut E,\n                                       &mut StackRecycler)\n-> Result<Option<RuntimeValue>, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke this function using recycled stacks.","sig":null,"attributes":[{"value":"/ Invoke this function using recycled stacks.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23884,"byte_end":23931,"line_start":155,"line_end":155,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23936,"byte_end":23939,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23944,"byte_end":23956,"line_start":157,"line_end":157,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23961,"byte_end":23964,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Same as [`invoke`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23969,"byte_end":23992,"line_start":159,"line_end":159,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":23997,"byte_end":24000,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`invoke`]: #method.invoke","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":24005,"byte_end":24035,"line_start":161,"line_end":161,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25585,"byte_end":25601,"line_start":197,"line_end":197,"column_start":12,"column_end":28},"name":"invoke_resumable","qualname":"<FuncInstance>::invoke_resumable","value":"pub fn invoke_resumable<'args,\n                        impl Into<Cow<'args, [RuntimeValue]>>: Into<Cow>>(&FuncRef,\n                                                                          impl Into<Cow<'args, [RuntimeValue]>>)\n-> Result<FuncInvocation, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke the function, get a resumable handle. This handle can then be used to [`start_execution`]. If a\n Host trap happens, caller can use [`resume_execution`] to feed the expected return value back in, and then\n continue the execution.","sig":null,"attributes":[{"value":"/ Invoke the function, get a resumable handle. This handle can then be used to [`start_execution`]. If a","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":24850,"byte_end":24956,"line_start":183,"line_end":183,"column_start":5,"column_end":111}},{"value":"/ Host trap happens, caller can use [`resume_execution`] to feed the expected return value back in, and then","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":24961,"byte_end":25071,"line_start":184,"line_end":184,"column_start":5,"column_end":115}},{"value":"/ continue the execution.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25076,"byte_end":25103,"line_start":185,"line_end":185,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25108,"byte_end":25111,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This is an experimental API, and this functionality may not be available in other WebAssembly engines.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25116,"byte_end":25222,"line_start":187,"line_end":187,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25227,"byte_end":25230,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25235,"byte_end":25247,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25252,"byte_end":25255,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if `args` types is not match function [`signature`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25260,"byte_end":25330,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25335,"byte_end":25338,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ [`signature`]: #method.signature","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25343,"byte_end":25379,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"/ [`Trap`]: #enum.Trap.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25384,"byte_end":25413,"line_start":194,"line_end":194,"column_start":5,"column_end":34}},{"value":"/ [`start_execution`]: struct.FuncInvocation.html#method.start_execution","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25418,"byte_end":25492,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ [`resume_execution`]: struct.FuncInvocation.html#method.resume_execution","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":25497,"byte_end":25573,"line_start":196,"line_end":196,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1796},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":26582,"byte_end":26586,"line_start":228,"line_end":228,"column_start":5,"column_end":9},"name":"Trap","qualname":"::func::ResumableError::Trap","value":"ResumableError::Trap(Trap)","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" Trap happened.\n","sig":null,"attributes":[{"value":"/ Trap happened.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":26559,"byte_end":26577,"line_start":227,"line_end":227,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1799},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27170,"byte_end":27182,"line_start":239,"line_end":239,"column_start":5,"column_end":17},"name":"NotResumable","qualname":"::func::ResumableError::NotResumable","value":"ResumableError::NotResumable","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" The invocation is not resumable.","sig":null,"attributes":[{"value":"/ The invocation is not resumable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":26598,"byte_end":26634,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":26639,"byte_end":26642,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Invocations are only resumable if a host function is called, and the host function returns a trap of `Host` kind. For other cases, this error will be returned. This includes:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":26647,"byte_end":26825,"line_start":231,"line_end":231,"column_start":5,"column_end":183}},{"value":"/ - The invocation is directly a host function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":26830,"byte_end":26879,"line_start":232,"line_end":232,"column_start":5,"column_end":54}},{"value":"/ - The invocation has not been started.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":26884,"byte_end":26926,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ - The invocation returns normally or returns any trap other than `Host` kind.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":26931,"byte_end":27012,"line_start":234,"line_end":234,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27017,"byte_end":27020,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This error is returned by [`resume_execution`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27025,"byte_end":27076,"line_start":236,"line_end":236,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27081,"byte_end":27084,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`resume_execution`]: struct.FuncInvocation.html#method.resume_execution","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27089,"byte_end":27165,"line_start":238,"line_end":238,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1801},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27387,"byte_end":27401,"line_start":245,"line_end":245,"column_start":5,"column_end":19},"name":"AlreadyStarted","qualname":"::func::ResumableError::AlreadyStarted","value":"ResumableError::AlreadyStarted","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" The invocation has already been started.","sig":null,"attributes":[{"value":"/ The invocation has already been started.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27188,"byte_end":27232,"line_start":240,"line_end":240,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27237,"byte_end":27240,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This error is returned by [`start_execution`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27245,"byte_end":27295,"line_start":242,"line_end":242,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27300,"byte_end":27303,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ [`start_execution`]: struct.FuncInvocation.html#method.start_execution","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27308,"byte_end":27382,"line_start":244,"line_end":244,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":1795},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":26538,"byte_end":26552,"line_start":226,"line_end":226,"column_start":10,"column_end":24},"name":"ResumableError","qualname":"::func::ResumableError","value":"pub enum ResumableError { Trap(Trap), NotResumable, AlreadyStarted, }","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":1799},{"krate":0,"index":1801}],"decl_id":null,"docs":" A resumable invocation error.\n","sig":null,"attributes":[{"value":"/ A resumable invocation error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":26478,"byte_end":26511,"line_start":224,"line_end":224,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27628,"byte_end":27642,"line_start":255,"line_end":255,"column_start":12,"column_end":26},"name":"FuncInvocation","qualname":"::func::FuncInvocation","value":"FuncInvocation {  }","parent":null,"children":[{"krate":0,"index":140}],"decl_id":null,"docs":" A resumable invocation handle. This struct is returned by `FuncInstance::invoke_resumable`.\n","sig":null,"attributes":[{"value":"/ A resumable invocation handle. This struct is returned by `FuncInstance::invoke_resumable`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27521,"byte_end":27616,"line_start":254,"line_end":254,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27974,"byte_end":27986,"line_start":270,"line_end":270,"column_start":12,"column_end":24},"name":"is_resumable","qualname":"<FuncInvocation>::is_resumable","value":"pub fn is_resumable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this invocation is currently resumable.\n","sig":null,"attributes":[{"value":"/ Whether this invocation is currently resumable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27911,"byte_end":27962,"line_start":269,"line_end":269,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":28301,"byte_end":28321,"line_start":278,"line_end":278,"column_start":12,"column_end":32},"name":"resumable_value_type","qualname":"<FuncInvocation>::resumable_value_type","value":"pub fn resumable_value_type(&Self) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" If the invocation is resumable, the expected return value type to be feed back in.\n","sig":null,"attributes":[{"value":"/ If the invocation is resumable, the expected return value type to be feed back in.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":28203,"byte_end":28289,"line_start":277,"line_end":277,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":28707,"byte_end":28722,"line_start":289,"line_end":289,"column_start":12,"column_end":27},"name":"start_execution","qualname":"<FuncInvocation>::start_execution","value":"pub fn start_execution<'externals, E: Externals +\n                       'externals>(&mut Self, &'externals mut E)\n-> Result<Option<RuntimeValue>, ResumableError>","parent":null,"children":[],"decl_id":null,"docs":" Start the invocation execution.\n","sig":null,"attributes":[{"value":"/ Start the invocation execution.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":28660,"byte_end":28695,"line_start":288,"line_end":288,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":30122,"byte_end":30138,"line_start":322,"line_end":322,"column_start":12,"column_end":28},"name":"resume_execution","qualname":"<FuncInvocation>::resume_execution","value":"pub fn resume_execution<'externals, E: Externals +\n                        'externals>(&mut Self, Option<RuntimeValue>,\n                                    &'externals mut E)\n-> Result<Option<RuntimeValue>, ResumableError>","parent":null,"children":[],"decl_id":null,"docs":" Resume an execution if a previous trap of Host kind happened.","sig":null,"attributes":[{"value":"/ Resume an execution if a previous trap of Host kind happened.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":29621,"byte_end":29686,"line_start":314,"line_end":314,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":29691,"byte_end":29694,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ `return_val` must be of the value type [`resumable_value_type`], defined by the host function import. Otherwise,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":29699,"byte_end":29815,"line_start":316,"line_end":316,"column_start":5,"column_end":121}},{"value":"/ `UnexpectedSignature` trap will be returned. The current invocation must also be resumable","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":29820,"byte_end":29914,"line_start":317,"line_end":317,"column_start":5,"column_end":99}},{"value":"/ [`is_resumable`]. Otherwise, a `NotResumable` error will be returned.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":29919,"byte_end":29992,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":29997,"byte_end":30000,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ [`resumable_value_type`]: #method.resumable_value_type","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":30005,"byte_end":30063,"line_start":320,"line_end":320,"column_start":5,"column_end":63}},{"value":"/ [`is_resumable`]: #method.is_resumable","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":30068,"byte_end":30110,"line_start":321,"line_end":321,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1812},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31515,"byte_end":31524,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"GlobalRef","qualname":"::global::GlobalRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a global variable (See [`GlobalInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a global variable (See [`GlobalInstance`] for details).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31293,"byte_end":31365,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31366,"byte_end":31369,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31370,"byte_end":31424,"line_start":10,"line_end":10,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31425,"byte_end":31428,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`GlobalInstance`]: struct.GlobalInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31429,"byte_end":31479,"line_start":12,"line_end":12,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1819},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32280,"byte_end":32294,"line_start":35,"line_end":35,"column_start":12,"column_end":26},"name":"GlobalInstance","qualname":"::global::GlobalInstance","value":"GlobalInstance {  }","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1821}],"decl_id":null,"docs":" Runtime representation of a global variable (or `global` for short).","sig":null,"attributes":[{"value":"/ Runtime representation of a global variable (or `global` for short).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31687,"byte_end":31759,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31760,"byte_end":31763,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Global contains a value of a specified type and flag which specifies whether this","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31764,"byte_end":31849,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ global are mutable or immutable. Neither type of the value nor immutability can't be changed","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31850,"byte_end":31946,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ after creation.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31947,"byte_end":31966,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31967,"byte_end":31970,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Attempt to change value of immutable global or to change type of","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31971,"byte_end":32039,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ the value (e.g. assign [`I32`] value to a global that was created with [`I64`] type) will lead to an error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32040,"byte_end":32151,"line_start":30,"line_end":30,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32152,"byte_end":32155,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`I32`]: enum.RuntimeValue.html#variant.I32","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32156,"byte_end":32203,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ [`I64`]: enum.RuntimeValue.html#variant.I64","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32204,"byte_end":32251,"line_start":33,"line_end":33,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32552,"byte_end":32557,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"alloc","qualname":"<GlobalInstance>::alloc","value":"pub fn alloc(RuntimeValue, bool) -> GlobalRef","parent":null,"children":[],"decl_id":null,"docs":" Allocate a global variable instance.","sig":null,"attributes":[{"value":"/ Allocate a global variable instance.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32374,"byte_end":32414,"line_start":41,"line_end":41,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32419,"byte_end":32422,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Since it is possible to export only immutable globals,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32427,"byte_end":32485,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/ users likely want to set `mutable` to `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32490,"byte_end":32540,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32925,"byte_end":32928,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"set","qualname":"<GlobalInstance>::set","value":"pub fn set(&Self, RuntimeValue) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Change the value of this global variable.","sig":null,"attributes":[{"value":"/ Change the value of this global variable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32727,"byte_end":32772,"line_start":52,"line_end":52,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32777,"byte_end":32780,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32785,"byte_end":32797,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32802,"byte_end":32805,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if this global isn't mutable or if","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32810,"byte_end":32862,"line_start":56,"line_end":56,"column_start":5,"column_end":57}},{"value":"/ type of `val` doesn't match global's type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32867,"byte_end":32913,"line_start":57,"line_end":57,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":33384,"byte_end":33387,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"get","qualname":"<GlobalInstance>::get","value":"pub fn get(&Self) -> RuntimeValue","parent":null,"children":[],"decl_id":null,"docs":" Get the value of this global variable.\n","sig":null,"attributes":[{"value":"/ Get the value of this global variable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":33330,"byte_end":33372,"line_start":71,"line_end":71,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":33583,"byte_end":33593,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"is_mutable","qualname":"<GlobalInstance>::is_mutable","value":"pub fn is_mutable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if this global variable is mutable.","sig":null,"attributes":[{"value":"/ Returns if this global variable is mutable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":33447,"byte_end":33494,"line_start":76,"line_end":76,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":33499,"byte_end":33502,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Note: Imported and/or exported globals are always immutable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":33507,"byte_end":33571,"line_start":78,"line_end":78,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":33702,"byte_end":33712,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"value_type","qualname":"<GlobalInstance>::value_type","value":"pub fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Returns value type of this global variable.\n","sig":null,"attributes":[{"value":"/ Returns value type of this global variable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":33643,"byte_end":33690,"line_start":83,"line_end":83,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1824},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34194,"byte_end":34205,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"RuntimeArgs","qualname":"::host::RuntimeArgs","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around slice of [`RuntimeValue`] for using it\n as an argument list conveniently.","sig":null,"attributes":[{"value":"/ Wrapper around slice of [`RuntimeValue`] for using it","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34021,"byte_end":34078,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/ as an argument list conveniently.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34079,"byte_end":34116,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34117,"byte_end":34120,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34121,"byte_end":34165,"line_start":9,"line_end":9,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34670,"byte_end":34681,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"nth_checked","qualname":"<RuntimeArgs>::nth_checked","value":"pub fn nth_checked<T>(&Self, usize) -> Result<T, Trap> where\nT: FromRuntimeValue","parent":null,"children":[],"decl_id":null,"docs":" Extract argument by index `idx`.","sig":null,"attributes":[{"value":"/ Extract argument by index `idx`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34523,"byte_end":34559,"line_start":26,"line_end":26,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34564,"byte_end":34567,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34572,"byte_end":34584,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34589,"byte_end":34592,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if cast is invalid or not enough arguments.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34597,"byte_end":34658,"line_start":30,"line_end":30,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35144,"byte_end":35161,"line_start":48,"line_end":48,"column_start":12,"column_end":29},"name":"nth_value_checked","qualname":"<RuntimeArgs>::nth_value_checked","value":"pub fn nth_value_checked(&Self, usize) -> Result<RuntimeValue, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Extract argument as a [`RuntimeValue`] by index `idx`.","sig":null,"attributes":[{"value":"/ Extract argument as a [`RuntimeValue`] by index `idx`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34923,"byte_end":34981,"line_start":41,"line_end":41,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34986,"byte_end":34989,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34994,"byte_end":35006,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35011,"byte_end":35014,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if this list has not enough arguments.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35019,"byte_end":35075,"line_start":45,"line_end":45,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35080,"byte_end":35083,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35088,"byte_end":35132,"line_start":47,"line_end":47,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35493,"byte_end":35496,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"nth","qualname":"<RuntimeArgs>::nth","value":"pub fn nth<T>(&Self, usize) -> T where T: FromRuntimeValue","parent":null,"children":[],"decl_id":null,"docs":" Extract argument by index `idx`.","sig":null,"attributes":[{"value":"/ Extract argument by index `idx`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35353,"byte_end":35389,"line_start":55,"line_end":55,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35394,"byte_end":35397,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35402,"byte_end":35414,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35419,"byte_end":35422,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Panics if cast is invalid or not enough arguments.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35427,"byte_end":35481,"line_start":59,"line_end":59,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35763,"byte_end":35766,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"len","qualname":"<RuntimeArgs>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Total number of arguments\n","sig":null,"attributes":[{"value":"/ Total number of arguments","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35722,"byte_end":35751,"line_start":68,"line_end":68,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":229},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37411,"byte_end":37420,"line_start":127,"line_end":127,"column_start":11,"column_end":20},"name":"HostError","qualname":"::host::HostError","value":"HostError: 'static + ::core::fmt::Display + ::core::fmt::Debug + DowncastSync","parent":null,"children":[],"decl_id":null,"docs":" Trait that allows the host to return custom error.","sig":null,"attributes":[{"value":"/ Trait that allows the host to return custom error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35815,"byte_end":35869,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35870,"byte_end":35873,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ It should be useful for representing custom traps,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35874,"byte_end":35928,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/ troubles at instantiation time or other host specific conditions.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35929,"byte_end":35998,"line_start":77,"line_end":77,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":35999,"byte_end":36002,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Types that implement this trait can automatically be converted to `wasmi::Error` and `wasmi::Trap`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36003,"byte_end":36105,"line_start":79,"line_end":79,"column_start":1,"column_end":103}},{"value":"/ and will be represented as a boxed `HostError`. You can then use the various methods on `wasmi::Error`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36106,"byte_end":36212,"line_start":80,"line_end":80,"column_start":1,"column_end":107}},{"value":"/ to get your custom error type back","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36213,"byte_end":36251,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36252,"byte_end":36255,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36256,"byte_end":36270,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36271,"byte_end":36274,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36275,"byte_end":36286,"line_start":85,"line_end":85,"column_start":1,"column_end":12}},{"value":"/ use std::fmt;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36287,"byte_end":36304,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/ use wasmi::{Error, HostError};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36305,"byte_end":36339,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36340,"byte_end":36343,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36344,"byte_end":36364,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"/ struct MyError {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36365,"byte_end":36385,"line_start":90,"line_end":90,"column_start":1,"column_end":21}},{"value":"/     code: u32,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36386,"byte_end":36404,"line_start":91,"line_end":91,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36405,"byte_end":36410,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36411,"byte_end":36414,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ impl fmt::Display for MyError {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36415,"byte_end":36450,"line_start":94,"line_end":94,"column_start":1,"column_end":36}},{"value":"/     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36451,"byte_end":36513,"line_start":95,"line_end":95,"column_start":1,"column_end":63}},{"value":"/         write!(f, \"MyError, code={}\", self.code)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36514,"byte_end":36566,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36567,"byte_end":36576,"line_start":97,"line_end":97,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36577,"byte_end":36582,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36583,"byte_end":36586,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ impl HostError for MyError { }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36587,"byte_end":36621,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36622,"byte_end":36625,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ fn failable_fn() -> Result<(), Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36626,"byte_end":36669,"line_start":102,"line_end":102,"column_start":1,"column_end":44}},{"value":"/     let my_error = MyError { code: 1312 };","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36670,"byte_end":36716,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/     // Note how you can just convert your errors to `wasmi::Error`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36717,"byte_end":36787,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/     Err(my_error.into())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36788,"byte_end":36816,"line_start":105,"line_end":105,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36817,"byte_end":36822,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36823,"byte_end":36826,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // Get a reference to the concrete error","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36827,"byte_end":36871,"line_start":108,"line_end":108,"column_start":1,"column_end":45}},{"value":"/ match failable_fn() {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36872,"byte_end":36897,"line_start":109,"line_end":109,"column_start":1,"column_end":26}},{"value":"/     Err(Error::Host(host_error)) => {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36898,"byte_end":36939,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/         let my_error: &MyError = host_error.downcast_ref::<MyError>().unwrap();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":36940,"byte_end":37023,"line_start":111,"line_end":111,"column_start":1,"column_end":84}},{"value":"/         assert_eq!(my_error.code, 1312);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37024,"byte_end":37068,"line_start":112,"line_end":112,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37069,"byte_end":37078,"line_start":113,"line_end":113,"column_start":1,"column_end":10}},{"value":"/     _ => panic!(),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37079,"byte_end":37101,"line_start":114,"line_end":114,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37102,"byte_end":37107,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37108,"byte_end":37111,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ // get the concrete error itself","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37112,"byte_end":37148,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"/ match failable_fn() {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37149,"byte_end":37174,"line_start":118,"line_end":118,"column_start":1,"column_end":26}},{"value":"/     Err(err) => {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37175,"byte_end":37196,"line_start":119,"line_end":119,"column_start":1,"column_end":22}},{"value":"/         let my_error: Box<MyError> = err.try_into_host_error().unwrap().downcast::<MyError>().unwrap();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37197,"byte_end":37304,"line_start":120,"line_end":120,"column_start":1,"column_end":108}},{"value":"/         assert_eq!(my_error.code, 1312);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37305,"byte_end":37349,"line_start":121,"line_end":121,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37350,"byte_end":37359,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/     _ => panic!(),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37360,"byte_end":37382,"line_start":123,"line_end":123,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37383,"byte_end":37388,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37389,"byte_end":37392,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37393,"byte_end":37400,"line_start":126,"line_end":126,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":230},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39847,"byte_end":39856,"line_start":207,"line_end":207,"column_start":11,"column_end":20},"name":"Externals","qualname":"::host::Externals","value":"Externals","parent":null,"children":[{"krate":0,"index":231}],"decl_id":null,"docs":" Trait that allows to implement host functions.","sig":null,"attributes":[{"value":"/ Trait that allows to implement host functions.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37520,"byte_end":37570,"line_start":130,"line_end":130,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37571,"byte_end":37574,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37575,"byte_end":37589,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37590,"byte_end":37593,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37594,"byte_end":37605,"line_start":134,"line_end":134,"column_start":1,"column_end":12}},{"value":"/ use wasmi::{","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37606,"byte_end":37622,"line_start":135,"line_end":135,"column_start":1,"column_end":17}},{"value":"/     Externals, RuntimeValue, RuntimeArgs, Error, ModuleImportResolver,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37623,"byte_end":37697,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/     FuncRef, ValueType, Signature, FuncInstance, Trap,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37698,"byte_end":37756,"line_start":137,"line_end":137,"column_start":1,"column_end":59}},{"value":"/ };","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37757,"byte_end":37763,"line_start":138,"line_end":138,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37764,"byte_end":37767,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ struct HostExternals {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37768,"byte_end":37794,"line_start":140,"line_end":140,"column_start":1,"column_end":27}},{"value":"/     counter: usize,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37795,"byte_end":37818,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37819,"byte_end":37824,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37825,"byte_end":37828,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ const ADD_FUNC_INDEX: usize = 0;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37829,"byte_end":37865,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37866,"byte_end":37869,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ impl Externals for HostExternals {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37870,"byte_end":37908,"line_start":146,"line_end":146,"column_start":1,"column_end":39}},{"value":"/     fn invoke_index(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37909,"byte_end":37933,"line_start":147,"line_end":147,"column_start":1,"column_end":25}},{"value":"/         &mut self,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37934,"byte_end":37956,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"/         index: usize,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37957,"byte_end":37982,"line_start":149,"line_end":149,"column_start":1,"column_end":26}},{"value":"/         args: RuntimeArgs,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37983,"byte_end":38013,"line_start":150,"line_end":150,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<RuntimeValue>, Trap> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38014,"byte_end":38063,"line_start":151,"line_end":151,"column_start":1,"column_end":50}},{"value":"/         match index {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38064,"byte_end":38089,"line_start":152,"line_end":152,"column_start":1,"column_end":26}},{"value":"/             ADD_FUNC_INDEX => {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38090,"byte_end":38125,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/                 let a: u32 = args.nth_checked(0)?;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38126,"byte_end":38180,"line_start":154,"line_end":154,"column_start":1,"column_end":55}},{"value":"/                 let b: u32 = args.nth_checked(1)?;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38181,"byte_end":38235,"line_start":155,"line_end":155,"column_start":1,"column_end":55}},{"value":"/                 let result = a + b;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38236,"byte_end":38275,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38276,"byte_end":38279,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/                 Ok(Some(RuntimeValue::I32(result as i32)))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38280,"byte_end":38342,"line_start":158,"line_end":158,"column_start":1,"column_end":63}},{"value":"/             }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38343,"byte_end":38360,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"/             _ => panic!(\"Unimplemented function at {}\", index),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38361,"byte_end":38428,"line_start":160,"line_end":160,"column_start":1,"column_end":68}},{"value":"/         }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38429,"byte_end":38442,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38443,"byte_end":38452,"line_start":162,"line_end":162,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38453,"byte_end":38458,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38459,"byte_end":38462,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ impl HostExternals {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38463,"byte_end":38487,"line_start":165,"line_end":165,"column_start":1,"column_end":25}},{"value":"/     fn check_signature(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38488,"byte_end":38515,"line_start":166,"line_end":166,"column_start":1,"column_end":28}},{"value":"/         &self,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38516,"byte_end":38534,"line_start":167,"line_end":167,"column_start":1,"column_end":19}},{"value":"/         index: usize,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38535,"byte_end":38560,"line_start":168,"line_end":168,"column_start":1,"column_end":26}},{"value":"/         signature: &Signature","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38561,"byte_end":38594,"line_start":169,"line_end":169,"column_start":1,"column_end":34}},{"value":"/     ) -> bool {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38595,"byte_end":38614,"line_start":170,"line_end":170,"column_start":1,"column_end":20}},{"value":"/         let (params, ret_ty): (&[ValueType], Option<ValueType>) = match index {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38615,"byte_end":38698,"line_start":171,"line_end":171,"column_start":1,"column_end":84}},{"value":"/             ADD_FUNC_INDEX => (&[ValueType::I32, ValueType::I32], Some(ValueType::I32)),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38699,"byte_end":38791,"line_start":172,"line_end":172,"column_start":1,"column_end":93}},{"value":"/             _ => return false,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38792,"byte_end":38826,"line_start":173,"line_end":173,"column_start":1,"column_end":35}},{"value":"/         };","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38827,"byte_end":38841,"line_start":174,"line_end":174,"column_start":1,"column_end":15}},{"value":"/         signature.params() == params && signature.return_type() == ret_ty","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38842,"byte_end":38919,"line_start":175,"line_end":175,"column_start":1,"column_end":78}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38920,"byte_end":38929,"line_start":176,"line_end":176,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38930,"byte_end":38935,"line_start":177,"line_end":177,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38936,"byte_end":38939,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ impl ModuleImportResolver for HostExternals {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38940,"byte_end":38989,"line_start":179,"line_end":179,"column_start":1,"column_end":50}},{"value":"/     fn resolve_func(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":38990,"byte_end":39014,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/         &self,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39015,"byte_end":39033,"line_start":181,"line_end":181,"column_start":1,"column_end":19}},{"value":"/         field_name: &str,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39034,"byte_end":39063,"line_start":182,"line_end":182,"column_start":1,"column_end":30}},{"value":"/         signature: &Signature","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39064,"byte_end":39097,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/     ) -> Result<FuncRef, Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39098,"byte_end":39135,"line_start":184,"line_end":184,"column_start":1,"column_end":38}},{"value":"/         let index = match field_name {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39136,"byte_end":39178,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/             \"add\" => ADD_FUNC_INDEX,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39179,"byte_end":39219,"line_start":186,"line_end":186,"column_start":1,"column_end":41}},{"value":"/             _ => {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39220,"byte_end":39242,"line_start":187,"line_end":187,"column_start":1,"column_end":23}},{"value":"/                 return Err(Error::Instantiation(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39243,"byte_end":39295,"line_start":188,"line_end":188,"column_start":1,"column_end":53}},{"value":"/                     format!(\"Export {} not found\", field_name),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39296,"byte_end":39363,"line_start":189,"line_end":189,"column_start":1,"column_end":68}},{"value":"/                 ))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39364,"byte_end":39386,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39387,"byte_end":39404,"line_start":191,"line_end":191,"column_start":1,"column_end":18}},{"value":"/         };","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39405,"byte_end":39419,"line_start":192,"line_end":192,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39420,"byte_end":39423,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/         if !self.check_signature(index, signature) {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39424,"byte_end":39480,"line_start":194,"line_end":194,"column_start":1,"column_end":57}},{"value":"/             return Err(Error::Instantiation(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39481,"byte_end":39529,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/                 format!(\"Export {} has a bad signature\", field_name)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39530,"byte_end":39602,"line_start":196,"line_end":196,"column_start":1,"column_end":73}},{"value":"/             ));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39603,"byte_end":39622,"line_start":197,"line_end":197,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39623,"byte_end":39636,"line_start":198,"line_end":198,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39637,"byte_end":39640,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/         Ok(FuncInstance::alloc_host(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39641,"byte_end":39681,"line_start":200,"line_end":200,"column_start":1,"column_end":41}},{"value":"/             Signature::new(&[ValueType::I32, ValueType::I32][..], Some(ValueType::I32)),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39682,"byte_end":39774,"line_start":201,"line_end":201,"column_start":1,"column_end":93}},{"value":"/             index,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39775,"byte_end":39797,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"/         ))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39798,"byte_end":39812,"line_start":203,"line_end":203,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39813,"byte_end":39822,"line_start":204,"line_end":204,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39823,"byte_end":39828,"line_start":205,"line_end":205,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39829,"byte_end":39836,"line_start":206,"line_end":206,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39930,"byte_end":39942,"line_start":209,"line_end":209,"column_start":8,"column_end":20},"name":"invoke_index","qualname":"::host::Externals::invoke_index","value":"pub fn invoke_index(&mut Self, usize, RuntimeArgs)\n-> Result<Option<RuntimeValue>, Trap>","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" Perform invoke of a host function by specified `index`.\n","sig":null,"attributes":[{"value":"/ Perform invoke of a host function by specified `index`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":39863,"byte_end":39922,"line_start":208,"line_end":208,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":232},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":40253,"byte_end":40265,"line_start":220,"line_end":220,"column_start":12,"column_end":24},"name":"NopExternals","qualname":"::host::NopExternals","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of [`Externals`] that just traps on [`invoke_index`].","sig":null,"attributes":[{"value":"/ Implementation of [`Externals`] that just traps on [`invoke_index`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":40060,"byte_end":40132,"line_start":216,"line_end":216,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":40133,"byte_end":40136,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ [`Externals`]: trait.Externals.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":40137,"byte_end":40176,"line_start":218,"line_end":218,"column_start":1,"column_end":40}},{"value":"/ [`invoke_index`]: trait.Externals.html#tymethod.invoke_index","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":40177,"byte_end":40241,"line_start":219,"line_end":219,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":276},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41810,"byte_end":41824,"line_start":21,"line_end":21,"column_start":11,"column_end":25},"name":"ImportResolver","qualname":"::imports::ImportResolver","value":"ImportResolver","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"decl_id":null,"docs":" Resolver of a module's dependencies.","sig":null,"attributes":[{"value":"/ Resolver of a module's dependencies.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41392,"byte_end":41432,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41433,"byte_end":41436,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A module have dependencies in a form of a list of imports (i.e.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41437,"byte_end":41504,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ tuple of a (`module_name`, `field_name`, `descriptor`)).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41505,"byte_end":41565,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41566,"byte_end":41569,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The job of implementations of this trait is to provide on each","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41570,"byte_end":41636,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ import a corresponding concrete reference.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41637,"byte_end":41683,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41684,"byte_end":41687,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ For simple use-cases you can use [`ImportsBuilder`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41688,"byte_end":41744,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41745,"byte_end":41748,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`ImportsBuilder`]: struct.ImportsBuilder.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41749,"byte_end":41799,"line_start":20,"line_end":20,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42042,"byte_end":42054,"line_start":26,"line_end":26,"column_start":8,"column_end":20},"name":"resolve_func","qualname":"::imports::ImportResolver::resolve_func","value":"pub fn resolve_func(&Self, &str, &str, &Signature) -> Result<FuncRef, Error>","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Resolve a function.","sig":null,"attributes":[{"value":"/ Resolve a function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41831,"byte_end":41854,"line_start":22,"line_end":22,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41859,"byte_end":41862,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Returned function should match given `signature`, i.e. all parameter types and return value should have exact match.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41867,"byte_end":41987,"line_start":24,"line_end":24,"column_start":5,"column_end":125}},{"value":"/ Otherwise, link-time error will occur.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":41992,"byte_end":42034,"line_start":25,"line_end":25,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42384,"byte_end":42398,"line_start":37,"line_end":37,"column_start":8,"column_end":22},"name":"resolve_global","qualname":"::imports::ImportResolver::resolve_global","value":"pub fn resolve_global(&Self, &str, &str, &GlobalDescriptor)\n-> Result<GlobalRef, Error>","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Resolve a global variable.","sig":null,"attributes":[{"value":"/ Resolve a global variable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42195,"byte_end":42225,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42230,"byte_end":42233,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Returned global should match given `descriptor`, i.e. type and mutability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42238,"byte_end":42315,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ should match. Otherwise, link-time error will occur.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42320,"byte_end":42376,"line_start":36,"line_end":36,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43019,"byte_end":43033,"line_start":51,"line_end":51,"column_start":8,"column_end":22},"name":"resolve_memory","qualname":"::imports::ImportResolver::resolve_memory","value":"pub fn resolve_memory(&Self, &str, &str, &MemoryDescriptor)\n-> Result<MemoryRef, Error>","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Resolve a memory.","sig":null,"attributes":[{"value":"/ Resolve a memory.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42547,"byte_end":42568,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42573,"byte_end":42576,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Returned memory should match requested memory (described by the `descriptor`),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42581,"byte_end":42663,"line_start":46,"line_end":46,"column_start":5,"column_end":87}},{"value":"/ i.e. initial size of a returned memory should be equal or larger than requested memory.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42668,"byte_end":42759,"line_start":47,"line_end":47,"column_start":5,"column_end":96}},{"value":"/ Furthermore, if requested memory have maximum size, returned memory either should have","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42764,"byte_end":42854,"line_start":48,"line_end":48,"column_start":5,"column_end":95}},{"value":"/ equal or larger maximum size or have no maximum size at all.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42859,"byte_end":42923,"line_start":49,"line_end":49,"column_start":5,"column_end":69}},{"value":"/ If returned memory doesn't match the requested then link-time error will occur.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":42928,"byte_end":43011,"line_start":50,"line_end":50,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43648,"byte_end":43661,"line_start":65,"line_end":65,"column_start":8,"column_end":21},"name":"resolve_table","qualname":"::imports::ImportResolver::resolve_table","value":"pub fn resolve_table(&Self, &str, &str, &TableDescriptor)\n-> Result<TableRef, Error>","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Resolve a table.","sig":null,"attributes":[{"value":"/ Resolve a table.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43182,"byte_end":43202,"line_start":58,"line_end":58,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43207,"byte_end":43210,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Returned table should match requested table (described by the `descriptor`),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43215,"byte_end":43295,"line_start":60,"line_end":60,"column_start":5,"column_end":85}},{"value":"/ i.e. initial size of a returned table should be equal or larger than requested table.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43300,"byte_end":43389,"line_start":61,"line_end":61,"column_start":5,"column_end":94}},{"value":"/ Furthermore, if requested memory have maximum size, returned memory either should have","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43394,"byte_end":43484,"line_start":62,"line_end":62,"column_start":5,"column_end":95}},{"value":"/ equal or larger maximum size or have no maximum size at all.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43489,"byte_end":43553,"line_start":63,"line_end":63,"column_start":5,"column_end":69}},{"value":"/ If returned table doesn't match the requested then link-time error will occur.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43558,"byte_end":43640,"line_start":64,"line_end":64,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44901,"byte_end":44915,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"name":"ImportsBuilder","qualname":"::imports::ImportsBuilder","value":"ImportsBuilder {  }","parent":null,"children":[{"krate":0,"index":283}],"decl_id":null,"docs":" Convenience builder of [`ImportResolver`].","sig":null,"attributes":[{"value":"/ Convenience builder of [`ImportResolver`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43806,"byte_end":43852,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43853,"byte_end":43856,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ With help of this builder, you can easily create [`ImportResolver`], just by","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43857,"byte_end":43937,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"/ adding needed [resolvers][`ModuleImportResolver`] by names.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":43938,"byte_end":44001,"line_start":76,"line_end":76,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44002,"byte_end":44005,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44006,"byte_end":44020,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44021,"byte_end":44024,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44025,"byte_end":44036,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44037,"byte_end":44085,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44086,"byte_end":44091,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ # struct EnvModuleResolver;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44092,"byte_end":44123,"line_start":83,"line_end":83,"column_start":1,"column_end":32}},{"value":"/ # impl ::wasmi::ModuleImportResolver for EnvModuleResolver { }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44124,"byte_end":44190,"line_start":84,"line_end":84,"column_start":1,"column_end":67}},{"value":"/ # fn func() -> Result<(), ::wasmi::Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44191,"byte_end":44238,"line_start":85,"line_end":85,"column_start":1,"column_end":48}},{"value":"/ # let module = wasmi::Module::from_buffer(&[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]).unwrap();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44239,"byte_end":44345,"line_start":86,"line_end":86,"column_start":1,"column_end":107}},{"value":"/ # let other_instance = ModuleInstance::new(&module, &ImportsBuilder::default())?.assert_no_start();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44346,"byte_end":44449,"line_start":87,"line_end":87,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44450,"byte_end":44453,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ let imports = ImportsBuilder::new()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44454,"byte_end":44493,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/     .with_resolver(\"env\", &EnvModuleResolver)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44494,"byte_end":44543,"line_start":90,"line_end":90,"column_start":1,"column_end":50}},{"value":"/     // Note, that ModuleInstance can be a resolver too.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44544,"byte_end":44603,"line_start":91,"line_end":91,"column_start":1,"column_end":60}},{"value":"/     .with_resolver(\"other_instance\", &other_instance);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44604,"byte_end":44662,"line_start":92,"line_end":92,"column_start":1,"column_end":59}},{"value":"/ let instance = ModuleInstance::new(&module, &imports)?.assert_no_start();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44663,"byte_end":44740,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44741,"byte_end":44744,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44745,"byte_end":44757,"line_start":95,"line_end":95,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44758,"byte_end":44765,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44766,"byte_end":44773,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44774,"byte_end":44777,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44778,"byte_end":44827,"line_start":99,"line_end":99,"column_start":1,"column_end":50}},{"value":"/ [`ModuleImportResolver`]: trait.ModuleImportResolver.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":44828,"byte_end":44889,"line_start":100,"line_end":100,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45167,"byte_end":45170,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<ImportsBuilder>::new","value":"pub fn new() -> ImportsBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `ImportsBuilder`.\n","sig":null,"attributes":[{"value":"/ Create an empty `ImportsBuilder`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45118,"byte_end":45155,"line_start":112,"line_end":112,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45328,"byte_end":45341,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"with_resolver","qualname":"<ImportsBuilder>::with_resolver","value":"pub fn with_resolver<N: Into<String>>(Self, N, &'a dyn ModuleImportResolver)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an resolver by a name.\n","sig":null,"attributes":[{"value":"/ Register an resolver by a name.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45281,"byte_end":45316,"line_start":119,"line_end":119,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45624,"byte_end":45637,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"push_resolver","qualname":"<ImportsBuilder>::push_resolver","value":"pub fn push_resolver<N: Into<String>>(&mut Self, N,\n                                      &'a dyn ModuleImportResolver)","parent":null,"children":[],"decl_id":null,"docs":" Register an resolver by a name.","sig":null,"attributes":[{"value":"/ Register an resolver by a name.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45535,"byte_end":45570,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45575,"byte_end":45578,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Mutable borrowed version.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45583,"byte_end":45612,"line_start":131,"line_end":131,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":305},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47517,"byte_end":47537,"line_start":194,"line_end":194,"column_start":11,"column_end":31},"name":"ModuleImportResolver","qualname":"::imports::ModuleImportResolver","value":"ModuleImportResolver","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"decl_id":null,"docs":" Version of [`ImportResolver`] specialized for a single module.","sig":null,"attributes":[{"value":"/ Version of [`ImportResolver`] specialized for a single module.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47386,"byte_end":47452,"line_start":191,"line_end":191,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47453,"byte_end":47456,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47457,"byte_end":47506,"line_start":193,"line_end":193,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47739,"byte_end":47751,"line_start":200,"line_end":200,"column_start":8,"column_end":20},"name":"resolve_func","qualname":"::imports::ModuleImportResolver::resolve_func","value":"pub fn resolve_func(&Self, &str, &Signature) -> Result<FuncRef, Error>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Resolve a function.","sig":null,"attributes":[{"value":"/ Resolve a function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47544,"byte_end":47567,"line_start":195,"line_end":195,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47572,"byte_end":47575,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_func`] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47580,"byte_end":47633,"line_start":197,"line_end":197,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47638,"byte_end":47641,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_func`]: trait.ImportResolver.html#tymethod.resolve_func","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47646,"byte_end":47731,"line_start":199,"line_end":199,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48160,"byte_end":48174,"line_start":212,"line_end":212,"column_start":8,"column_end":22},"name":"resolve_global","qualname":"::imports::ModuleImportResolver::resolve_global","value":"pub fn resolve_global(&Self, &str, &GlobalDescriptor)\n-> Result<GlobalRef, Error>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Resolve a global variable.","sig":null,"attributes":[{"value":"/ Resolve a global variable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47952,"byte_end":47982,"line_start":207,"line_end":207,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47987,"byte_end":47990,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_global`] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":47995,"byte_end":48050,"line_start":209,"line_end":209,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48055,"byte_end":48058,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_global`]: trait.ImportResolver.html#tymethod.resolve_global","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48063,"byte_end":48152,"line_start":211,"line_end":211,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48616,"byte_end":48630,"line_start":228,"line_end":228,"column_start":8,"column_end":22},"name":"resolve_memory","qualname":"::imports::ModuleImportResolver::resolve_memory","value":"pub fn resolve_memory(&Self, &str, &MemoryDescriptor)\n-> Result<MemoryRef, Error>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Resolve a memory.","sig":null,"attributes":[{"value":"/ Resolve a memory.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48417,"byte_end":48438,"line_start":223,"line_end":223,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48443,"byte_end":48446,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_memory`] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48451,"byte_end":48506,"line_start":225,"line_end":225,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48511,"byte_end":48514,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_memory`]: trait.ImportResolver.html#tymethod.resolve_memory","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48519,"byte_end":48608,"line_start":227,"line_end":227,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":49068,"byte_end":49081,"line_start":244,"line_end":244,"column_start":8,"column_end":21},"name":"resolve_table","qualname":"::imports::ModuleImportResolver::resolve_table","value":"pub fn resolve_table(&Self, &str, &TableDescriptor) -> Result<TableRef, Error>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Resolve a table.","sig":null,"attributes":[{"value":"/ Resolve a table.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48873,"byte_end":48893,"line_start":239,"line_end":239,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48898,"byte_end":48901,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ See [`ImportResolver::resolve_table`] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48906,"byte_end":48960,"line_start":241,"line_end":241,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48965,"byte_end":48968,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`ImportResolver::resolve_table`]: trait.ImportResolver.html#tymethod.resolve_table","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":48973,"byte_end":49060,"line_start":243,"line_end":243,"column_start":5,"column_end":92}}]},{"kind":"Const","id":{"krate":0,"index":442},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76772,"byte_end":76795,"line_start":28,"line_end":28,"column_start":11,"column_end":34},"name":"LINEAR_MEMORY_PAGE_SIZE","qualname":"::memory::LINEAR_MEMORY_PAGE_SIZE","value":"Bytes","parent":null,"children":[],"decl_id":null,"docs":" Size of a page of [linear memory][`MemoryInstance`] - 64KiB.","sig":null,"attributes":[{"value":"/ Size of a page of [linear memory][`MemoryInstance`] - 64KiB.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76568,"byte_end":76632,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76633,"byte_end":76636,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of a memory is always a integer multiple of a page size.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76637,"byte_end":76706,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76707,"byte_end":76710,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76711,"byte_end":76761,"line_start":27,"line_end":27,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2709},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77037,"byte_end":77046,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"MemoryRef","qualname":"::memory::MemoryRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a memory (See [`MemoryInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a memory (See [`MemoryInstance`] for details).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76820,"byte_end":76883,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76884,"byte_end":76887,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76888,"byte_end":76942,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76943,"byte_end":76946,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76947,"byte_end":76997,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":76998,"byte_end":77001,"line_start":35,"line_end":35,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77915,"byte_end":77929,"line_start":59,"line_end":59,"column_start":12,"column_end":26},"name":"MemoryInstance","qualname":"::memory::MemoryInstance","value":"MemoryInstance {  }","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"decl_id":null,"docs":" Runtime representation of a linear memory (or `memory` for short).","sig":null,"attributes":[{"value":"/ Runtime representation of a linear memory (or `memory` for short).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77209,"byte_end":77279,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77280,"byte_end":77283,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A memory is a contiguous, mutable array of raw bytes. Wasm code can load and store values","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77284,"byte_end":77377,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"/ from/to a linear memory at any byte address.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77378,"byte_end":77426,"line_start":49,"line_end":49,"column_start":1,"column_end":49}},{"value":"/ A trap occurs if an access is not within the bounds of the current memory size.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77427,"byte_end":77510,"line_start":50,"line_end":50,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77511,"byte_end":77514,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A memory is created with an initial size but can be grown dynamically.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77515,"byte_end":77589,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/ The growth can be limited by specifying maximum size.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77590,"byte_end":77647,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/ The size of a memory is always a integer multiple of a [page size][`LINEAR_MEMORY_PAGE_SIZE`] - 64KiB.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77648,"byte_end":77754,"line_start":54,"line_end":54,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77755,"byte_end":77758,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ At the moment, wasm doesn't provide any way to shrink the memory.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77759,"byte_end":77828,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77829,"byte_end":77832,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`LINEAR_MEMORY_PAGE_SIZE`]: constant.LINEAR_MEMORY_PAGE_SIZE.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77833,"byte_end":77903,"line_start":58,"line_end":58,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79769,"byte_end":79774,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"alloc","qualname":"<MemoryInstance>::alloc","value":"pub fn alloc(Pages, Option<Pages>) -> Result<MemoryRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allocate a memory instance.","sig":null,"attributes":[{"value":"/ Allocate a memory instance.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":78923,"byte_end":78954,"line_start":99,"line_end":99,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":78959,"byte_end":78962,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The memory allocated with initial number of pages specified by `initial`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":78967,"byte_end":79044,"line_start":101,"line_end":101,"column_start":5,"column_end":82}},{"value":"/ Minimal possible value for `initial` is 0 and maximum possible is `65536`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79049,"byte_end":79127,"line_start":102,"line_end":102,"column_start":5,"column_end":83}},{"value":"/ (Since maximum addressible memory is 2<sup>32</sup> = 4GiB = 65536 * [64KiB][`LINEAR_MEMORY_PAGE_SIZE`]).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79132,"byte_end":79241,"line_start":103,"line_end":103,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79246,"byte_end":79249,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ It is possible to limit maximum number of pages this memory instance can have by specifying","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79254,"byte_end":79349,"line_start":105,"line_end":105,"column_start":5,"column_end":100}},{"value":"/ `maximum`. If not specified, this memory instance would be able to allocate up to 4GiB.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79354,"byte_end":79445,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79450,"byte_end":79453,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Allocated memory is always zeroed.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79458,"byte_end":79496,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79501,"byte_end":79504,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79509,"byte_end":79521,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79526,"byte_end":79529,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79534,"byte_end":79555,"line_start":112,"line_end":112,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79560,"byte_end":79563,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ - `initial` is greater than `maximum`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79568,"byte_end":79609,"line_start":114,"line_end":114,"column_start":5,"column_end":46}},{"value":"/ - either `initial` or `maximum` is greater than `65536`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79614,"byte_end":79674,"line_start":115,"line_end":115,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79679,"byte_end":79682,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`LINEAR_MEMORY_PAGE_SIZE`]: constant.LINEAR_MEMORY_PAGE_SIZE.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":79687,"byte_end":79757,"line_start":117,"line_end":117,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81402,"byte_end":81409,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"initial","qualname":"<MemoryInstance>::initial","value":"pub fn initial(&Self) -> Pages","parent":null,"children":[],"decl_id":null,"docs":" Returns number of pages this `MemoryInstance` was created with.\n","sig":null,"attributes":[{"value":"/ Returns number of pages this `MemoryInstance` was created with.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81323,"byte_end":81390,"line_start":160,"line_end":160,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81664,"byte_end":81671,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"maximum","qualname":"<MemoryInstance>::maximum","value":"pub fn maximum(&Self) -> Option<Pages>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum amount of pages this `MemoryInstance` can grow to.","sig":null,"attributes":[{"value":"/ Returns maximum amount of pages this `MemoryInstance` can grow to.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81460,"byte_end":81530,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81535,"byte_end":81538,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there is no limit set.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81543,"byte_end":81587,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/ Maximum memory size cannot exceed `65536` pages or 4GiB.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81592,"byte_end":81652,"line_start":168,"line_end":168,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82299,"byte_end":82311,"line_start":192,"line_end":192,"column_start":12,"column_end":24},"name":"current_size","qualname":"<MemoryInstance>::current_size","value":"pub fn current_size(&Self) -> Pages","parent":null,"children":[],"decl_id":null,"docs":" Returns current linear memory size.","sig":null,"attributes":[{"value":"/ Returns current linear memory size.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81730,"byte_end":81769,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81774,"byte_end":81777,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Maximum memory size cannot exceed `65536` pages or 4GiB.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81782,"byte_end":81842,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81847,"byte_end":81850,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81855,"byte_end":81868,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81873,"byte_end":81876,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ To convert number of pages to number of bytes you can use the following code:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81881,"byte_end":81962,"line_start":179,"line_end":179,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81967,"byte_end":81970,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81975,"byte_end":81986,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/ use wasmi::MemoryInstance;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":81991,"byte_end":82021,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/ use wasmi::memory_units::*;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82026,"byte_end":82057,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82062,"byte_end":82065,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let memory = MemoryInstance::alloc(Pages(1), None).unwrap();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82070,"byte_end":82134,"line_start":185,"line_end":185,"column_start":5,"column_end":69}},{"value":"/ let byte_size: Bytes = memory.current_size().into();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82139,"byte_end":82195,"line_start":186,"line_end":186,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82200,"byte_end":82215,"line_start":187,"line_end":187,"column_start":5,"column_end":20}},{"value":"/     byte_size,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82220,"byte_end":82238,"line_start":188,"line_end":188,"column_start":5,"column_end":23}},{"value":"/     Bytes(65536),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82243,"byte_end":82264,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82269,"byte_end":82275,"line_start":190,"line_end":190,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82280,"byte_end":82287,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82451,"byte_end":82460,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"get_value","qualname":"<MemoryInstance>::get_value","value":"pub fn get_value<T: LittleEndianConvert>(&Self, u32) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get value from memory at given offset.\n","sig":null,"attributes":[{"value":"/ Get value from memory at given offset.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82397,"byte_end":82439,"line_start":196,"line_end":196,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":83070,"byte_end":83073,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"get","qualname":"<MemoryInstance>::get","value":"pub fn get(&Self, u32, usize) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data from memory at given offset.","sig":null,"attributes":[{"value":"/ Copy data from memory at given offset.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82849,"byte_end":82891,"line_start":207,"line_end":207,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82896,"byte_end":82899,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This will allocate vector for you.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82904,"byte_end":82942,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/ If you can provide a mutable slice you can use [`get_into`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":82947,"byte_end":83011,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":83016,"byte_end":83019,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`get_into`]: #method.get_into","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":83024,"byte_end":83058,"line_start":212,"line_end":212,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":83511,"byte_end":83519,"line_start":225,"line_end":225,"column_start":12,"column_end":20},"name":"get_into","qualname":"<MemoryInstance>::get_into","value":"pub fn get_into(&Self, u32, &mut [u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data from given offset in the memory into `target` slice.","sig":null,"attributes":[{"value":"/ Copy data from given offset in the memory into `target` slice.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":83336,"byte_end":83402,"line_start":220,"line_end":220,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":83407,"byte_end":83410,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":83415,"byte_end":83427,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":83432,"byte_end":83435,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the specified region is out of bounds.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":83440,"byte_end":83499,"line_start":224,"line_end":224,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":83876,"byte_end":83879,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"set","qualname":"<MemoryInstance>::set","value":"pub fn set(&Self, u32, &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data in the memory at given offset.\n","sig":null,"attributes":[{"value":"/ Copy data in the memory at given offset.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":83820,"byte_end":83864,"line_start":234,"line_end":234,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":84253,"byte_end":84262,"line_start":247,"line_end":247,"column_start":12,"column_end":21},"name":"set_value","qualname":"<MemoryInstance>::set_value","value":"pub fn set_value<T: LittleEndianConvert>(&Self, u32, T) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy value in the memory at given offset.\n","sig":null,"attributes":[{"value":"/ Copy value in the memory at given offset.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":84196,"byte_end":84241,"line_start":246,"line_end":246,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":84872,"byte_end":84876,"line_start":262,"line_end":262,"column_start":12,"column_end":16},"name":"grow","qualname":"<MemoryInstance>::grow","value":"pub fn grow(&Self, Pages) -> Result<Pages, Error>","parent":null,"children":[],"decl_id":null,"docs":" Increases the size of the linear memory by given number of pages.\n Returns previous memory size if succeeds.","sig":null,"attributes":[{"value":"/ Increases the size of the linear memory by given number of pages.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":84621,"byte_end":84690,"line_start":256,"line_end":256,"column_start":5,"column_end":74}},{"value":"/ Returns previous memory size if succeeds.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":84695,"byte_end":84740,"line_start":257,"line_end":257,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":84745,"byte_end":84748,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":84753,"byte_end":84765,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":84770,"byte_end":84773,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if attempted to allocate more memory than permited by the limit.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":84778,"byte_end":84860,"line_start":261,"line_end":261,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88282,"byte_end":88286,"line_start":380,"line_end":380,"column_start":12,"column_end":16},"name":"copy","qualname":"<MemoryInstance>::copy","value":"pub fn copy(&Self, usize, usize, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy contents of one memory region to another.","sig":null,"attributes":[{"value":"/ Copy contents of one memory region to another.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88062,"byte_end":88112,"line_start":373,"line_end":373,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88117,"byte_end":88120,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to `memmove`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88125,"byte_end":88166,"line_start":375,"line_end":375,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88171,"byte_end":88174,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88179,"byte_end":88191,"line_start":377,"line_end":377,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88196,"byte_end":88199,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if either of specified regions is out of bounds.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88204,"byte_end":88270,"line_start":379,"line_end":379,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":89170,"byte_end":89189,"line_start":408,"line_end":408,"column_start":12,"column_end":31},"name":"copy_nonoverlapping","qualname":"<MemoryInstance>::copy_nonoverlapping","value":"pub fn copy_nonoverlapping(&Self, usize, usize, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy contents of one memory region to another (non-overlapping version).","sig":null,"attributes":[{"value":"/ Copy contents of one memory region to another (non-overlapping version).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88807,"byte_end":88883,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88888,"byte_end":88891,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to `memcpy`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88896,"byte_end":88936,"line_start":399,"line_end":399,"column_start":5,"column_end":45}},{"value":"/ but returns Error if source overlaping with destination.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":88941,"byte_end":89001,"line_start":400,"line_end":400,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":89006,"byte_end":89009,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":89014,"byte_end":89026,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":89031,"byte_end":89034,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":89039,"byte_end":89060,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":89065,"byte_end":89068,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ - either of specified regions is out of bounds,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":89073,"byte_end":89124,"line_start":406,"line_end":406,"column_start":5,"column_end":56}},{"value":"/ - these regions overlaps.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":89129,"byte_end":89158,"line_start":407,"line_end":407,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":90143,"byte_end":90151,"line_start":439,"line_end":439,"column_start":12,"column_end":20},"name":"transfer","qualname":"<MemoryInstance>::transfer","value":"pub fn transfer(&MemoryRef, usize, &MemoryRef, usize, usize)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy memory between two (possibly distinct) memory instances.","sig":null,"attributes":[{"value":"/ Copy memory between two (possibly distinct) memory instances.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":89964,"byte_end":90029,"line_start":436,"line_end":436,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":90034,"byte_end":90037,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ If the same memory instance passed as `src` and `dst` then usual `copy` will be used.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":90042,"byte_end":90131,"line_start":438,"line_end":438,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91402,"byte_end":91407,"line_start":476,"line_end":476,"column_start":12,"column_end":17},"name":"clear","qualname":"<MemoryInstance>::clear","value":"pub fn clear(&Self, usize, u8, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill the memory region with the specified value.","sig":null,"attributes":[{"value":"/ Fill the memory region with the specified value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91188,"byte_end":91240,"line_start":469,"line_end":469,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91245,"byte_end":91248,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to `memset`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91253,"byte_end":91293,"line_start":471,"line_end":471,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91298,"byte_end":91301,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91306,"byte_end":91318,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91323,"byte_end":91326,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the specified region is out of bounds.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91331,"byte_end":91390,"line_start":475,"line_end":475,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91883,"byte_end":91887,"line_start":492,"line_end":492,"column_start":12,"column_end":16},"name":"zero","qualname":"<MemoryInstance>::zero","value":"pub fn zero(&Self, usize, usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill the specified memory region with zeroes.","sig":null,"attributes":[{"value":"/ Fill the specified memory region with zeroes.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91725,"byte_end":91774,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91779,"byte_end":91782,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91787,"byte_end":91799,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91804,"byte_end":91807,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the specified region is out of bounds.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91812,"byte_end":91871,"line_start":491,"line_end":491,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92143,"byte_end":92148,"line_start":499,"line_end":499,"column_start":12,"column_end":17},"name":"erase","qualname":"<MemoryInstance>::erase","value":"pub fn erase(&Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set every byte in the entire linear memory to 0, preserving its size.","sig":null,"attributes":[{"value":"/ Set every byte in the entire linear memory to 0, preserving its size.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":91991,"byte_end":92064,"line_start":496,"line_end":496,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92069,"byte_end":92072,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Might be useful for some optimization shenanigans.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92077,"byte_end":92131,"line_start":498,"line_end":498,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92558,"byte_end":92576,"line_start":512,"line_end":512,"column_start":12,"column_end":30},"name":"with_direct_access","qualname":"<MemoryInstance>::with_direct_access","value":"pub fn with_direct_access<R, F: FnOnce(&[u8]) -> R>(&Self, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Provides direct access to the underlying memory buffer.","sig":null,"attributes":[{"value":"/ Provides direct access to the underlying memory buffer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92254,"byte_end":92313,"line_start":503,"line_end":503,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92318,"byte_end":92321,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92326,"byte_end":92338,"line_start":505,"line_end":505,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92343,"byte_end":92346,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Any call that requires write access to memory (such as [`set`], [`clear`], etc) made within","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92351,"byte_end":92446,"line_start":507,"line_end":507,"column_start":5,"column_end":100}},{"value":"/ the closure will panic.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92451,"byte_end":92478,"line_start":508,"line_end":508,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92483,"byte_end":92486,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ [`set`]: #method.get","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92491,"byte_end":92515,"line_start":510,"line_end":510,"column_start":5,"column_end":29}},{"value":"/ [`clear`]: #method.set","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92520,"byte_end":92546,"line_start":511,"line_end":511,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93056,"byte_end":93078,"line_start":526,"line_end":526,"column_start":12,"column_end":34},"name":"with_direct_access_mut","qualname":"<MemoryInstance>::with_direct_access_mut","value":"pub fn with_direct_access_mut<R, F: FnOnce(&mut [u8]) -> R>(&Self, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Provides direct mutable access to the underlying memory buffer.","sig":null,"attributes":[{"value":"/ Provides direct mutable access to the underlying memory buffer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92700,"byte_end":92767,"line_start":517,"line_end":517,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92772,"byte_end":92775,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92780,"byte_end":92792,"line_start":519,"line_end":519,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92797,"byte_end":92800,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ Any calls that requires either read or write access to memory (such as [`get`], [`set`], [`copy`], etc) made","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92805,"byte_end":92917,"line_start":521,"line_end":521,"column_start":5,"column_end":117}},{"value":"/ within the closure will panic. Proceed with caution.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92922,"byte_end":92978,"line_start":522,"line_end":522,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92983,"byte_end":92986,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [`get`]: #method.get","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":92991,"byte_end":93015,"line_start":524,"line_end":524,"column_start":5,"column_end":29}},{"value":"/ [`set`]: #method.set","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93020,"byte_end":93044,"line_start":525,"line_end":525,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93586,"byte_end":93599,"line_start":541,"line_end":541,"column_start":12,"column_end":25},"name":"direct_access","qualname":"<MemoryInstance>::direct_access","value":"pub fn direct_access<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Provides direct access to the underlying memory buffer.","sig":null,"attributes":[{"value":"/ Provides direct access to the underlying memory buffer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93218,"byte_end":93277,"line_start":531,"line_end":531,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93282,"byte_end":93285,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93290,"byte_end":93302,"line_start":533,"line_end":533,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93307,"byte_end":93310,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Any call that requires write access to memory (such as [`set`], [`clear`], etc) made while","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93315,"byte_end":93409,"line_start":535,"line_end":535,"column_start":5,"column_end":99}},{"value":"/ the returned value is alive will panic.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93414,"byte_end":93457,"line_start":536,"line_end":536,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93462,"byte_end":93465,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ [`set`]: #method.get","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93470,"byte_end":93494,"line_start":538,"line_end":538,"column_start":5,"column_end":29}},{"value":"/ [`clear`]: #method.set","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93499,"byte_end":93525,"line_start":539,"line_end":539,"column_start":5,"column_end":31}},{"value":"allow(clippy :: clippy :: needless_lifetimes)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93530,"byte_end":93574,"line_start":540,"line_end":540,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":94298,"byte_end":94315,"line_start":562,"line_end":562,"column_start":12,"column_end":29},"name":"direct_access_mut","qualname":"<MemoryInstance>::direct_access_mut","value":"pub fn direct_access_mut<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Provides direct mutable access to the underlying memory buffer.","sig":null,"attributes":[{"value":"/ Provides direct mutable access to the underlying memory buffer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93879,"byte_end":93946,"line_start":552,"line_end":552,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93951,"byte_end":93954,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93959,"byte_end":93971,"line_start":554,"line_end":554,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93976,"byte_end":93979,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ Any call that requires either read or write access to memory (such as [`get`], [`set`],","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93984,"byte_end":94075,"line_start":556,"line_end":556,"column_start":5,"column_end":96}},{"value":"/ [`copy`], etc) made while the returned value is alive will panic. Proceed with caution.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":94080,"byte_end":94171,"line_start":557,"line_end":557,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":94176,"byte_end":94179,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ [`get`]: #method.get","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":94184,"byte_end":94208,"line_start":559,"line_end":559,"column_start":5,"column_end":29}},{"value":"/ [`set`]: #method.set","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":94213,"byte_end":94237,"line_start":560,"line_end":560,"column_start":5,"column_end":29}},{"value":"allow(clippy :: clippy :: needless_lifetimes)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":94242,"byte_end":94286,"line_start":561,"line_end":561,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2716},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109696,"byte_end":109705,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"ModuleRef","qualname":"::module::ModuleRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a [`ModuleInstance`].","sig":null,"attributes":[{"value":"/ Reference to a [`ModuleInstance`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109153,"byte_end":109191,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109192,"byte_end":109195,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109196,"byte_end":109250,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109251,"byte_end":109254,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ All [`ModuleInstance`] have strong references to it's components (i.e.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109255,"byte_end":109329,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ globals, memories, funcs, tables), however, this components have","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109330,"byte_end":109398,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ weak references to it's containing module. This might be a problem","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109399,"byte_end":109469,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ at execution time.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109470,"byte_end":109492,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109493,"byte_end":109496,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ So if have to make sure that all modules which might be needed at execution time","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109497,"byte_end":109581,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ should be retained.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109582,"byte_end":109605,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109606,"byte_end":109609,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`ModuleInstance`]: struct.ModuleInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109610,"byte_end":109660,"line_start":35,"line_end":35,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":647},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110102,"byte_end":110106,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"Func","qualname":"::module::ExternVal::Func","value":"ExternVal::Func(FuncRef)","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" [Function][`FuncInstance`].","sig":null,"attributes":[{"value":"/ [Function][`FuncInstance`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110007,"byte_end":110038,"line_start":49,"line_end":49,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110043,"byte_end":110046,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [`FuncInstance`]: struct.FuncInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110051,"byte_end":110097,"line_start":51,"line_end":51,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":650},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110216,"byte_end":110221,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"name":"Table","qualname":"::module::ExternVal::Table","value":"ExternVal::Table(TableRef)","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" [Table][`TableInstance`].","sig":null,"attributes":[{"value":"/ [Table][`TableInstance`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110121,"byte_end":110150,"line_start":53,"line_end":53,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110155,"byte_end":110158,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [`TableInstance`]: struct.TableInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110163,"byte_end":110211,"line_start":55,"line_end":55,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":653},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110336,"byte_end":110342,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"name":"Memory","qualname":"::module::ExternVal::Memory","value":"ExternVal::Memory(MemoryRef)","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" [Memory][`MemoryInstance`].","sig":null,"attributes":[{"value":"/ [Memory][`MemoryInstance`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110237,"byte_end":110268,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110273,"byte_end":110276,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110281,"byte_end":110331,"line_start":59,"line_end":59,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":656},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110495,"byte_end":110501,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"Global","qualname":"::module::ExternVal::Global","value":"ExternVal::Global(GlobalRef)","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" [Global][`GlobalInstance`].","sig":null,"attributes":[{"value":"/ [Global][`GlobalInstance`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110359,"byte_end":110390,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110395,"byte_end":110398,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Should be immutable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110403,"byte_end":110427,"line_start":63,"line_end":63,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110432,"byte_end":110435,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`GlobalInstance`]: struct.GlobalInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110440,"byte_end":110490,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":646},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109991,"byte_end":110000,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"ExternVal","qualname":"::module::ExternVal","value":"pub enum ExternVal {\n    Func(FuncRef),\n    Table(TableRef),\n    Memory(MemoryRef),\n    Global(GlobalRef),\n}","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656}],"decl_id":null,"docs":" An external value is the runtime representation of an entity\n that can be imported or exported.\n","sig":null,"attributes":[{"value":"/ An external value is the runtime representation of an entity","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109879,"byte_end":109943,"line_start":46,"line_end":46,"column_start":1,"column_end":65}},{"value":"/ that can be imported or exported.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109944,"byte_end":109981,"line_start":47,"line_end":47,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":111487,"byte_end":111494,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"as_func","qualname":"<ExternVal>::as_func","value":"pub fn as_func(&Self) -> Option<&FuncRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying function reference if this `ExternVal` contains\n a function, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying function reference if this `ExternVal` contains","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":111353,"byte_end":111419,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/ a function, or `None` if it is some other kind.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":111424,"byte_end":111475,"line_start":97,"line_end":97,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":111771,"byte_end":111779,"line_start":107,"line_end":107,"column_start":12,"column_end":20},"name":"as_table","qualname":"<ExternVal>::as_table","value":"pub fn as_table(&Self) -> Option<&TableRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying table reference if this `ExternVal` contains\n a table, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying table reference if this `ExternVal` contains","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":111643,"byte_end":111706,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/ a table, or `None` if it is some other kind.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":111711,"byte_end":111759,"line_start":106,"line_end":106,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112062,"byte_end":112071,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"as_memory","qualname":"<ExternVal>::as_memory","value":"pub fn as_memory(&Self) -> Option<&MemoryRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying memory reference if this `ExternVal` contains\n a memory, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying memory reference if this `ExternVal` contains","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":111932,"byte_end":111996,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/ a memory, or `None` if it is some other kind.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112001,"byte_end":112050,"line_start":115,"line_end":115,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112367,"byte_end":112376,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"as_global","qualname":"<ExternVal>::as_global","value":"pub fn as_global(&Self) -> Option<&GlobalRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying global variable reference if this `ExternVal` contains\n a global, or `None` if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get underlying global variable reference if this `ExternVal` contains","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112228,"byte_end":112301,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ a global, or `None` if it is some other kind.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112306,"byte_end":112355,"line_start":124,"line_end":124,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2723},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113496,"byte_end":113510,"line_start":155,"line_end":155,"column_start":12,"column_end":26},"name":"ModuleInstance","qualname":"::module::ModuleInstance","value":"ModuleInstance {  }","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729}],"decl_id":null,"docs":" A module instance is the runtime representation of a [module][`Module`].","sig":null,"attributes":[{"value":"/ A module instance is the runtime representation of a [module][`Module`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112531,"byte_end":112607,"line_start":133,"line_end":133,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112608,"byte_end":112611,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ It is created by instantiating a [module][`Module`], and collects runtime representations","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112612,"byte_end":112705,"line_start":135,"line_end":135,"column_start":1,"column_end":94}},{"value":"/ of all entities that are imported or defined by the module, namely:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112706,"byte_end":112777,"line_start":136,"line_end":136,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112778,"byte_end":112781,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ - [functions][`FuncInstance`],","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112782,"byte_end":112816,"line_start":138,"line_end":138,"column_start":1,"column_end":35}},{"value":"/ - [memories][`MemoryInstance`],","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112817,"byte_end":112852,"line_start":139,"line_end":139,"column_start":1,"column_end":36}},{"value":"/ - [tables][`TableInstance`],","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112853,"byte_end":112885,"line_start":140,"line_end":140,"column_start":1,"column_end":33}},{"value":"/ - [globals][`GlobalInstance`],","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112886,"byte_end":112920,"line_start":141,"line_end":141,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112921,"byte_end":112924,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ In order to instantiate a module you need to provide entities to satisfy","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":112925,"byte_end":113001,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ every module's imports (i.e. wasm modules don't have optional imports).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113002,"byte_end":113077,"line_start":144,"line_end":144,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113078,"byte_end":113081,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ After module is instantiated you can start invoking it's exported functions with [`invoke_export`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113082,"byte_end":113185,"line_start":146,"line_end":146,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113186,"byte_end":113189,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ [`Module`]: struct.Module.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113190,"byte_end":113224,"line_start":148,"line_end":148,"column_start":1,"column_end":35}},{"value":"/ [`FuncInstance`]: struct.FuncInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113225,"byte_end":113271,"line_start":149,"line_end":149,"column_start":1,"column_end":47}},{"value":"/ [`MemoryInstance`]: struct.MemoryInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113272,"byte_end":113322,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/ [`TableInstance`]: struct.TableInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113323,"byte_end":113371,"line_start":151,"line_end":151,"column_start":1,"column_end":49}},{"value":"/ [`GlobalInstance`]: struct.GlobalInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113372,"byte_end":113422,"line_start":152,"line_end":152,"column_start":1,"column_end":51}},{"value":"/ [`invoke_export`]: #method.invoke_export","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113423,"byte_end":113467,"line_start":153,"line_end":153,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":115474,"byte_end":115481,"line_start":218,"line_end":218,"column_start":12,"column_end":19},"name":"globals","qualname":"<ModuleInstance>::globals","value":"pub fn globals(&Self) -> Ref<, Vec<GlobalRef>>","parent":null,"children":[],"decl_id":null,"docs":" Access all globals. This is a non-standard API so it's unlikely to be\n portable to other engines.\n","sig":null,"attributes":[{"value":"/ Access all globals. This is a non-standard API so it's unlikely to be","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":115354,"byte_end":115427,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ portable to other engines.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":115432,"byte_end":115462,"line_start":217,"line_end":217,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":123506,"byte_end":123521,"line_start":405,"line_end":405,"column_start":12,"column_end":27},"name":"with_externvals","qualname":"<ModuleInstance>::with_externvals","value":"pub fn with_externvals<'a, 'i, I: Iterator<Item =\n                       &'i ExternVal>>(&'a Module, I)\n-> Result<NotStartedModuleRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a module with given [external values][ExternVal] as imports.","sig":null,"attributes":[{"value":"/ Instantiate a module with given [external values][ExternVal] as imports.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":123248,"byte_end":123324,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":123329,"byte_end":123332,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ See [new] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":123337,"byte_end":123363,"line_start":401,"line_end":401,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":123368,"byte_end":123371,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [new]: #method.new","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":123376,"byte_end":123398,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/ [ExternVal]: https://webassembly.github.io/spec/core/exec/runtime.html#syntax-externval","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":123403,"byte_end":123494,"line_start":404,"line_end":404,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128697,"byte_end":128700,"line_start":532,"line_end":532,"column_start":12,"column_end":15},"name":"new","qualname":"<ModuleInstance>::new","value":"pub fn new<'m, I: ImportResolver>(&'m Module, &I)\n-> Result<NotStartedModuleRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a [module][`Module`].","sig":null,"attributes":[{"value":"/ Instantiate a [module][`Module`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126145,"byte_end":126182,"line_start":472,"line_end":472,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126187,"byte_end":126190,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Note that in case of successful instantiation this function returns a reference to","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126195,"byte_end":126281,"line_start":474,"line_end":474,"column_start":5,"column_end":91}},{"value":"/ a module which `start` function is not called.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126286,"byte_end":126336,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/ In order to complete instantiatiation `start` function must be called. However, there are","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126341,"byte_end":126434,"line_start":476,"line_end":476,"column_start":5,"column_end":98}},{"value":"/ situations where you might need to do additional setup before calling `start` function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126439,"byte_end":126530,"line_start":477,"line_end":477,"column_start":5,"column_end":96}},{"value":"/ For such sitations this separation might be useful.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126535,"byte_end":126590,"line_start":478,"line_end":478,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126595,"byte_end":126598,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ See [`NotStartedModuleRef`] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126603,"byte_end":126647,"line_start":480,"line_end":480,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126652,"byte_end":126655,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126660,"byte_end":126672,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126677,"byte_end":126680,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the module cannot be instantiated.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126685,"byte_end":126740,"line_start":484,"line_end":484,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126745,"byte_end":126748,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This can happen if one of the imports can't","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126753,"byte_end":126800,"line_start":486,"line_end":486,"column_start":5,"column_end":52}},{"value":"/ be satisfied (e.g module isn't registered in `imports` [resolver][`ImportResolver`]) or","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126805,"byte_end":126896,"line_start":487,"line_end":487,"column_start":5,"column_end":96}},{"value":"/ there is a mismatch between requested import and provided (e.g. module requested memory with no","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":126901,"byte_end":127000,"line_start":488,"line_end":488,"column_start":5,"column_end":104}},{"value":"/ maximum size limit, however, was provided memory with the maximum size limit).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127005,"byte_end":127087,"line_start":489,"line_end":489,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127092,"byte_end":127095,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127100,"byte_end":127114,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127119,"byte_end":127122,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127127,"byte_end":127138,"line_start":493,"line_end":493,"column_start":5,"column_end":16}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder, NopExternals};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127143,"byte_end":127205,"line_start":494,"line_end":494,"column_start":5,"column_end":67}},{"value":"/ # fn func() -> Result<(), ::wasmi::Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127210,"byte_end":127257,"line_start":495,"line_end":495,"column_start":5,"column_end":52}},{"value":"/ # let module = wasmi::Module::from_buffer(&[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]).unwrap();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127262,"byte_end":127368,"line_start":496,"line_end":496,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127373,"byte_end":127376,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ // ModuleInstance::new returns instance which `start` function isn't called.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127381,"byte_end":127461,"line_start":498,"line_end":498,"column_start":5,"column_end":85}},{"value":"/ let not_started = ModuleInstance::new(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127466,"byte_end":127508,"line_start":499,"line_end":499,"column_start":5,"column_end":47}},{"value":"/     &module,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127513,"byte_end":127529,"line_start":500,"line_end":500,"column_start":5,"column_end":21}},{"value":"/     &ImportsBuilder::default()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127534,"byte_end":127568,"line_start":501,"line_end":501,"column_start":5,"column_end":39}},{"value":"/ )?;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127573,"byte_end":127580,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ // Call `start` function if any.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127585,"byte_end":127621,"line_start":503,"line_end":503,"column_start":5,"column_end":41}},{"value":"/ let instance = not_started.run_start(&mut NopExternals)?;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127626,"byte_end":127687,"line_start":504,"line_end":504,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127692,"byte_end":127695,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127700,"byte_end":127712,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127717,"byte_end":127724,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127729,"byte_end":127736,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127741,"byte_end":127744,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ If you sure that the module doesn't have `start` function you can use [`assert_no_start`] to get","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127749,"byte_end":127849,"line_start":510,"line_end":510,"column_start":5,"column_end":105}},{"value":"/ instantiated module without calling `start` function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127854,"byte_end":127911,"line_start":511,"line_end":511,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127916,"byte_end":127919,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127924,"byte_end":127935,"line_start":513,"line_end":513,"column_start":5,"column_end":16}},{"value":"/ use wasmi::{ModuleInstance, ImportsBuilder, NopExternals};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":127940,"byte_end":128002,"line_start":514,"line_end":514,"column_start":5,"column_end":67}},{"value":"/ # fn func() -> Result<(), ::wasmi::Error> {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128007,"byte_end":128054,"line_start":515,"line_end":515,"column_start":5,"column_end":52}},{"value":"/ # let module = wasmi::Module::from_buffer(&[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]).unwrap();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128059,"byte_end":128165,"line_start":516,"line_end":516,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128170,"byte_end":128173,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ // This will panic if the module actually contain `start` function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128178,"byte_end":128249,"line_start":518,"line_end":518,"column_start":5,"column_end":76}},{"value":"/ let not_started = ModuleInstance::new(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128254,"byte_end":128296,"line_start":519,"line_end":519,"column_start":5,"column_end":47}},{"value":"/     &module,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128301,"byte_end":128317,"line_start":520,"line_end":520,"column_start":5,"column_end":21}},{"value":"/     &ImportsBuilder::default()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128322,"byte_end":128356,"line_start":521,"line_end":521,"column_start":5,"column_end":39}},{"value":"/ )?.assert_no_start();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128361,"byte_end":128386,"line_start":522,"line_end":522,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128391,"byte_end":128394,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128399,"byte_end":128411,"line_start":524,"line_end":524,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128416,"byte_end":128423,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128428,"byte_end":128435,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128440,"byte_end":128443,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ [`Module`]: struct.Module.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128448,"byte_end":128482,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/ [`NotStartedModuleRef`]: struct.NotStartedModuleRef.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128487,"byte_end":128547,"line_start":529,"line_end":529,"column_start":5,"column_end":65}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128552,"byte_end":128601,"line_start":530,"line_end":530,"column_start":5,"column_end":54}},{"value":"/ [`assert_no_start`]: struct.NotStartedModuleRef.html#method.assert_no_start","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":128606,"byte_end":128685,"line_start":531,"line_end":531,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132530,"byte_end":132543,"line_start":625,"line_end":625,"column_start":12,"column_end":25},"name":"invoke_export","qualname":"<ModuleInstance>::invoke_export","value":"pub fn invoke_export<E: Externals>(&Self, &str, &[RuntimeValue], &mut E)\n-> Result<Option<RuntimeValue>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Invoke exported function by a name.","sig":null,"attributes":[{"value":"/ Invoke exported function by a name.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":130881,"byte_end":130920,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":130925,"byte_end":130928,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ This function finds exported function by a name, and calls it with provided arguments and","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":130933,"byte_end":131026,"line_start":579,"line_end":579,"column_start":5,"column_end":98}},{"value":"/ external state.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131031,"byte_end":131050,"line_start":580,"line_end":580,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131055,"byte_end":131058,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131063,"byte_end":131075,"line_start":582,"line_end":582,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131080,"byte_end":131083,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131088,"byte_end":131109,"line_start":584,"line_end":584,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131114,"byte_end":131117,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ - there are no export with a given name or this export is not a function,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131122,"byte_end":131199,"line_start":586,"line_end":586,"column_start":5,"column_end":82}},{"value":"/ - given arguments doesn't match to function signature,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131204,"byte_end":131262,"line_start":587,"line_end":587,"column_start":5,"column_end":63}},{"value":"/ - trap occurred at the execution time,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131267,"byte_end":131309,"line_start":588,"line_end":588,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131314,"byte_end":131317,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131322,"byte_end":131336,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131341,"byte_end":131344,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ Invoke a function that takes two numbers and returns sum of them.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131349,"byte_end":131418,"line_start":592,"line_end":592,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131423,"byte_end":131426,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131431,"byte_end":131442,"line_start":594,"line_end":594,"column_start":5,"column_end":16}},{"value":"/ # extern crate wasmi;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131447,"byte_end":131472,"line_start":595,"line_end":595,"column_start":5,"column_end":30}},{"value":"/ # extern crate wabt;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131477,"byte_end":131501,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/ # use wasmi::{ModuleInstance, ImportsBuilder, NopExternals, RuntimeValue};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131506,"byte_end":131584,"line_start":597,"line_end":597,"column_start":5,"column_end":83}},{"value":"/ # fn main() {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131589,"byte_end":131606,"line_start":598,"line_end":598,"column_start":5,"column_end":22}},{"value":"/ # let wasm_binary: Vec<u8> = wabt::wat2wasm(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131611,"byte_end":131659,"line_start":599,"line_end":599,"column_start":5,"column_end":53}},{"value":"/ #   r#\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131664,"byte_end":131675,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ #   (module","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131680,"byte_end":131695,"line_start":601,"line_end":601,"column_start":5,"column_end":20}},{"value":"/ #       (func (export \"add\") (param i32 i32) (result i32)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131700,"byte_end":131761,"line_start":602,"line_end":602,"column_start":5,"column_end":66}},{"value":"/ #           get_local 0","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131766,"byte_end":131793,"line_start":603,"line_end":603,"column_start":5,"column_end":32}},{"value":"/ #           get_local 1","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131798,"byte_end":131825,"line_start":604,"line_end":604,"column_start":5,"column_end":32}},{"value":"/ #           i32.add","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131830,"byte_end":131853,"line_start":605,"line_end":605,"column_start":5,"column_end":28}},{"value":"/ #       )","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131858,"byte_end":131871,"line_start":606,"line_end":606,"column_start":5,"column_end":18}},{"value":"/ #   )","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131876,"byte_end":131885,"line_start":607,"line_end":607,"column_start":5,"column_end":14}},{"value":"/ #   \"#,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131890,"byte_end":131901,"line_start":608,"line_end":608,"column_start":5,"column_end":16}},{"value":"/ # ).expect(\"failed to parse wat\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131906,"byte_end":131944,"line_start":609,"line_end":609,"column_start":5,"column_end":43}},{"value":"/ # let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"failed to load wasm\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":131949,"byte_end":132039,"line_start":610,"line_end":610,"column_start":5,"column_end":95}},{"value":"/ # let instance = ModuleInstance::new(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132044,"byte_end":132085,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ # &module,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132090,"byte_end":132104,"line_start":612,"line_end":612,"column_start":5,"column_end":19}},{"value":"/ # &ImportsBuilder::default()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132109,"byte_end":132141,"line_start":613,"line_end":613,"column_start":5,"column_end":37}},{"value":"/ # ).expect(\"failed to instantiate wasm module\").assert_no_start();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132146,"byte_end":132216,"line_start":614,"line_end":614,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132221,"byte_end":132236,"line_start":615,"line_end":615,"column_start":5,"column_end":20}},{"value":"/     instance.invoke_export(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132241,"byte_end":132272,"line_start":616,"line_end":616,"column_start":5,"column_end":36}},{"value":"/         \"add\",","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132277,"byte_end":132295,"line_start":617,"line_end":617,"column_start":5,"column_end":23}},{"value":"/         &[RuntimeValue::I32(5), RuntimeValue::I32(3)],","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132300,"byte_end":132358,"line_start":618,"line_end":618,"column_start":5,"column_end":63}},{"value":"/         &mut NopExternals,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132363,"byte_end":132393,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/     ).expect(\"failed to execute export\"),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132398,"byte_end":132443,"line_start":620,"line_end":620,"column_start":5,"column_end":50}},{"value":"/     Some(RuntimeValue::I32(8)),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132448,"byte_end":132483,"line_start":621,"line_end":621,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132488,"byte_end":132494,"line_start":622,"line_end":622,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132499,"byte_end":132506,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132511,"byte_end":132518,"line_start":624,"line_end":624,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":133056,"byte_end":133080,"line_start":643,"line_end":643,"column_start":12,"column_end":36},"name":"invoke_export_with_stack","qualname":"<ModuleInstance>::invoke_export_with_stack","value":"pub fn invoke_export_with_stack<E: Externals>(&Self, &str, &[RuntimeValue],\n                                              &mut E, &mut StackRecycler)\n-> Result<Option<RuntimeValue>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Invoke exported function by a name using recycled stacks.","sig":null,"attributes":[{"value":"/ Invoke exported function by a name using recycled stacks.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132858,"byte_end":132919,"line_start":636,"line_end":636,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132924,"byte_end":132927,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132932,"byte_end":132944,"line_start":638,"line_end":638,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132949,"byte_end":132952,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Same as [`invoke_export`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132957,"byte_end":132987,"line_start":640,"line_end":640,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":132992,"byte_end":132995,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ [`invoke_export`]: #method.invoke_export","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":133000,"byte_end":133044,"line_start":642,"line_end":642,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134103,"byte_end":134117,"line_start":673,"line_end":673,"column_start":12,"column_end":26},"name":"export_by_name","qualname":"<ModuleInstance>::export_by_name","value":"pub fn export_by_name(&Self, &str) -> Option<ExternVal>","parent":null,"children":[],"decl_id":null,"docs":" Find export by a name.","sig":null,"attributes":[{"value":"/ Find export by a name.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":133996,"byte_end":134022,"line_start":670,"line_end":670,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134027,"byte_end":134030,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there is no export with such name.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134035,"byte_end":134091,"line_start":672,"line_end":672,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":713},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135274,"byte_end":135293,"line_start":696,"line_end":696,"column_start":12,"column_end":31},"name":"NotStartedModuleRef","qualname":"::module::NotStartedModuleRef","value":"NotStartedModuleRef {  }","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":" Mostly instantiated [`ModuleRef`].","sig":null,"attributes":[{"value":"/ Mostly instantiated [`ModuleRef`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134218,"byte_end":134256,"line_start":678,"line_end":678,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134257,"byte_end":134260,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ At this point memory segments and tables are copied. However, `start` function (if any) is not called.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134261,"byte_end":134367,"line_start":680,"line_end":680,"column_start":1,"column_end":107}},{"value":"/ To get [fully instantiated module instance][`ModuleRef`], [running `start` function][`run_start`] is required.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134368,"byte_end":134482,"line_start":681,"line_end":681,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134483,"byte_end":134486,"line_start":682,"line_end":682,"column_start":1,"column_end":4}},{"value":"/ You can still access not fully initialized instance by calling [`not_started_instance`],","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134487,"byte_end":134579,"line_start":683,"line_end":683,"column_start":1,"column_end":93}},{"value":"/ but keep in mind, that this is sort of escape hatch: module really might depend on initialization","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134580,"byte_end":134681,"line_start":684,"line_end":684,"column_start":1,"column_end":102}},{"value":"/ done in `start` function. It's definitely not recommended to call any exports on [`ModuleRef`]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134682,"byte_end":134780,"line_start":685,"line_end":685,"column_start":1,"column_end":99}},{"value":"/ returned by this function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134781,"byte_end":134811,"line_start":686,"line_end":686,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134812,"byte_end":134815,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ If you sure, that there is no `start` function (e.g. because you created it without one), you can","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134816,"byte_end":134917,"line_start":688,"line_end":688,"column_start":1,"column_end":102}},{"value":"/ call [`assert_no_start`] which returns [`ModuleRef`] without calling `start` function. However,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":134918,"byte_end":135017,"line_start":689,"line_end":689,"column_start":1,"column_end":100}},{"value":"/ it will panic if module contains `start` function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135018,"byte_end":135072,"line_start":690,"line_end":690,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135073,"byte_end":135076,"line_start":691,"line_end":691,"column_start":1,"column_end":4}},{"value":"/ [`ModuleRef`]: struct.ModuleRef.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135077,"byte_end":135117,"line_start":692,"line_end":692,"column_start":1,"column_end":41}},{"value":"/ [`run_start`]: #method.run_start","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135118,"byte_end":135154,"line_start":693,"line_end":693,"column_start":1,"column_end":37}},{"value":"/ [`assert_no_start`]: #method.assert_no_start","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135155,"byte_end":135203,"line_start":694,"line_end":694,"column_start":1,"column_end":49}},{"value":"/ [`not_started_instance`]: #method.not_started_instance","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135204,"byte_end":135262,"line_start":695,"line_end":695,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135822,"byte_end":135842,"line_start":711,"line_end":711,"column_start":12,"column_end":32},"name":"not_started_instance","qualname":"<NotStartedModuleRef>::not_started_instance","value":"pub fn not_started_instance(&Self) -> &ModuleRef","parent":null,"children":[],"decl_id":null,"docs":" Returns not fully initialized instance.","sig":null,"attributes":[{"value":"/ Returns not fully initialized instance.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135398,"byte_end":135441,"line_start":702,"line_end":702,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135446,"byte_end":135449,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ To fully initialize the instance you need to call either [`run_start`] or","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135454,"byte_end":135531,"line_start":704,"line_end":704,"column_start":5,"column_end":82}},{"value":"/ [`assert_no_start`]. See struct documentation for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135536,"byte_end":135598,"line_start":705,"line_end":705,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135603,"byte_end":135606,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ [`NotStartedModuleRef`]: struct.NotStartedModuleRef.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135611,"byte_end":135671,"line_start":707,"line_end":707,"column_start":5,"column_end":65}},{"value":"/ [`ModuleRef`]: struct.ModuleRef.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135676,"byte_end":135716,"line_start":708,"line_end":708,"column_start":5,"column_end":45}},{"value":"/ [`run_start`]: #method.run_start","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135721,"byte_end":135757,"line_start":709,"line_end":709,"column_start":5,"column_end":41}},{"value":"/ [`assert_no_start`]: #method.assert_no_start","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135762,"byte_end":135810,"line_start":710,"line_end":710,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":136069,"byte_end":136078,"line_start":720,"line_end":720,"column_start":12,"column_end":21},"name":"run_start","qualname":"<NotStartedModuleRef>::run_start","value":"pub fn run_start<E: Externals>(Self, &mut E) -> Result<ModuleRef, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Executes `start` function (if any) and returns fully instantiated module.","sig":null,"attributes":[{"value":"/ Executes `start` function (if any) and returns fully instantiated module.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135900,"byte_end":135977,"line_start":715,"line_end":715,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135982,"byte_end":135985,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135990,"byte_end":136002,"line_start":717,"line_end":717,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":136007,"byte_end":136010,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if start function traps.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":136015,"byte_end":136057,"line_start":719,"line_end":719,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":136681,"byte_end":136701,"line_start":736,"line_end":736,"column_start":12,"column_end":32},"name":"run_start_with_stack","qualname":"<NotStartedModuleRef>::run_start_with_stack","value":"pub fn run_start_with_stack<E: Externals>(Self, &mut E, &mut StackRecycler)\n-> Result<ModuleRef, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Executes `start` function (if any) and returns fully instantiated module.","sig":null,"attributes":[{"value":"/ Executes `start` function (if any) and returns fully instantiated module.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":136512,"byte_end":136589,"line_start":731,"line_end":731,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":136594,"byte_end":136597,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":136602,"byte_end":136614,"line_start":733,"line_end":733,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":136619,"byte_end":136622,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if start function traps.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":136627,"byte_end":136669,"line_start":735,"line_end":735,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":137420,"byte_end":137435,"line_start":756,"line_end":756,"column_start":12,"column_end":27},"name":"assert_no_start","qualname":"<NotStartedModuleRef>::assert_no_start","value":"pub fn assert_no_start(Self) -> ModuleRef","parent":null,"children":[],"decl_id":null,"docs":" Returns fully instantiated module without running `start` function.","sig":null,"attributes":[{"value":"/ Returns fully instantiated module without running `start` function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":137229,"byte_end":137300,"line_start":751,"line_end":751,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":137305,"byte_end":137308,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":137313,"byte_end":137325,"line_start":753,"line_end":753,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":137330,"byte_end":137333,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ This function panics if original module contains `start` function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":137338,"byte_end":137408,"line_start":755,"line_end":755,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":137771,"byte_end":137780,"line_start":766,"line_end":766,"column_start":12,"column_end":21},"name":"has_start","qualname":"<NotStartedModuleRef>::has_start","value":"pub fn has_start(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether or not the module has a `start` function.","sig":null,"attributes":[{"value":"/ Whether or not the module has a `start` function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":137645,"byte_end":137698,"line_start":763,"line_end":763,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":137703,"byte_end":137706,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if it has a `start` function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":137711,"byte_end":137759,"line_start":765,"line_end":765,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":729},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/nan_preserving_float.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nan_preserving_float","qualname":"::nan_preserving_float","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/nan_preserving_float.rs","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":2757},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2767},{"krate":0,"index":2771},{"krate":0,"index":2775},{"krate":0,"index":2779},{"krate":0,"index":2732},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2749},{"krate":0,"index":2752},{"krate":0,"index":2755},{"krate":0,"index":2808},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2818},{"krate":0,"index":2822},{"krate":0,"index":2826},{"krate":0,"index":2830},{"krate":0,"index":2783},{"krate":0,"index":2793},{"krate":0,"index":2795},{"krate":0,"index":2797},{"krate":0,"index":2800},{"krate":0,"index":2803},{"krate":0,"index":2806},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":770}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/nan_preserving_float.rs","byte_start":141685,"byte_end":141708,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2757},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/nan_preserving_float.rs","byte_start":144833,"byte_end":144836,"line_start":119,"line_end":119,"column_start":8,"column_end":11},"name":"F32","qualname":"::nan_preserving_float::F32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2808},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/nan_preserving_float.rs","byte_start":144856,"byte_end":144859,"line_start":120,"line_end":120,"column_start":8,"column_end":11},"name":"F64","qualname":"::nan_preserving_float::F64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1024},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":199979,"byte_end":200004,"line_start":23,"line_end":23,"column_start":11,"column_end":36},"name":"DEFAULT_VALUE_STACK_LIMIT","qualname":"::runner::DEFAULT_VALUE_STACK_LIMIT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of bytes on the value stack.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes on the value stack.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":199921,"byte_end":199968,"line_start":22,"line_end":22,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":1025},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":200086,"byte_end":200110,"line_start":26,"line_end":26,"column_start":11,"column_end":35},"name":"DEFAULT_CALL_STACK_LIMIT","qualname":"::runner::DEFAULT_CALL_STACK_LIMIT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of levels on the call stack.\n","sig":null,"attributes":[{"value":"/ Maximum number of levels on the call stack.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":200028,"byte_end":200075,"line_start":25,"line_end":25,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1270},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":252476,"byte_end":252489,"line_start":1474,"line_end":1474,"column_start":12,"column_end":25},"name":"StackRecycler","qualname":"::runner::StackRecycler","value":"StackRecycler {  }","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274}],"decl_id":null,"docs":" Used to recycle stacks instead of allocating them repeatedly.\n","sig":null,"attributes":[{"value":"/ Used to recycle stacks instead of allocating them repeatedly.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":252399,"byte_end":252464,"line_start":1473,"line_end":1473,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":252841,"byte_end":252852,"line_start":1485,"line_end":1485,"column_start":12,"column_end":23},"name":"with_limits","qualname":"<StackRecycler>::with_limits","value":"pub fn with_limits(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit stacks created by this recycler to\n - `value_stack_limit` bytes for values and\n - `call_stack_limit` levels for calls.\n","sig":null,"attributes":[{"value":"/ Limit stacks created by this recycler to","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":252687,"byte_end":252731,"line_start":1482,"line_end":1482,"column_start":5,"column_end":49}},{"value":"/ - `value_stack_limit` bytes for values and","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":252736,"byte_end":252782,"line_start":1483,"line_end":1483,"column_start":5,"column_end":51}},{"value":"/ - `call_stack_limit` levels for calls.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":252787,"byte_end":252829,"line_start":1484,"line_end":1484,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":253439,"byte_end":253444,"line_start":1502,"line_end":1502,"column_start":12,"column_end":17},"name":"clear","qualname":"<StackRecycler>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears any values left on the stack to avoid\n leaking them to future export invocations.","sig":null,"attributes":[{"value":"/ Clears any values left on the stack to avoid","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":253080,"byte_end":253128,"line_start":1494,"line_end":1494,"column_start":5,"column_end":53}},{"value":"/ leaking them to future export invocations.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":253133,"byte_end":253179,"line_start":1495,"line_end":1495,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":253184,"byte_end":253187,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ This is a secondary defense to prevent modules from","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":253192,"byte_end":253247,"line_start":1497,"line_end":1497,"column_start":5,"column_end":60}},{"value":"/ exploiting faulty stack handling in the interpreter.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":253252,"byte_end":253308,"line_start":1498,"line_end":1498,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":253313,"byte_end":253316,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/ Do note that there are additional channels that","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":253321,"byte_end":253372,"line_start":1500,"line_end":1500,"column_start":5,"column_end":56}},{"value":"/ can leak information into an untrusted module.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":253377,"byte_end":253427,"line_start":1501,"line_end":1501,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3043},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255469,"byte_end":255477,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"TableRef","qualname":"::table::TableRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a table (See [`TableInstance`] for details).","sig":null,"attributes":[{"value":"/ Reference to a table (See [`TableInstance`] for details).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255256,"byte_end":255317,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255318,"byte_end":255321,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This reference has a reference-counting semantics.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255322,"byte_end":255376,"line_start":12,"line_end":12,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255377,"byte_end":255380,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`TableInstance`]: struct.TableInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255381,"byte_end":255429,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255430,"byte_end":255433,"line_start":15,"line_end":15,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1320},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256198,"byte_end":256211,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"TableInstance","qualname":"::table::TableInstance","value":"TableInstance {  }","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322}],"decl_id":null,"docs":" Runtime representation of a table.","sig":null,"attributes":[{"value":"/ Runtime representation of a table.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255636,"byte_end":255674,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255675,"byte_end":255678,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ A table is a array of untyped functions. It allows wasm code to call functions","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255679,"byte_end":255761,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ indirectly through a dynamic index into a table. For example, this allows emulating function","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255762,"byte_end":255858,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/ pointers by way of table indices.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255859,"byte_end":255896,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255897,"byte_end":255900,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Table is created with an initial size but can be grown dynamically via [`grow`] method.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255901,"byte_end":255992,"line_start":32,"line_end":32,"column_start":1,"column_end":92}},{"value":"/ Growth can be limited by an optional maximum size.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255993,"byte_end":256047,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256048,"byte_end":256051,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In future, a table might be extended to be able to hold not only functions but different types.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256052,"byte_end":256151,"line_start":35,"line_end":35,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256152,"byte_end":256155,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`grow`]: #method.grow","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256156,"byte_end":256182,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256183,"byte_end":256186,"line_start":38,"line_end":38,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256988,"byte_end":256993,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"alloc","qualname":"<TableInstance>::alloc","value":"pub fn alloc(u32, Option<u32>) -> Result<TableRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allocate a table instance.","sig":null,"attributes":[{"value":"/ Allocate a table instance.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256636,"byte_end":256666,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256671,"byte_end":256674,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The table allocated with initial size, specified by `initial_size`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256679,"byte_end":256750,"line_start":58,"line_end":58,"column_start":5,"column_end":76}},{"value":"/ Maximum size can be specified by `maximum_size`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256755,"byte_end":256807,"line_start":59,"line_end":59,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256812,"byte_end":256815,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ All table elements are allocated uninitialized.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256820,"byte_end":256871,"line_start":61,"line_end":61,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256876,"byte_end":256879,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256884,"byte_end":256896,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256901,"byte_end":256904,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if `initial_size` is greater than `maximum_size`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256909,"byte_end":256976,"line_start":65,"line_end":65,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":257616,"byte_end":257628,"line_start":85,"line_end":85,"column_start":12,"column_end":24},"name":"initial_size","qualname":"<TableInstance>::initial_size","value":"pub fn initial_size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns size this table was created with.\n","sig":null,"attributes":[{"value":"/ Returns size this table was created with.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":257559,"byte_end":257604,"line_start":84,"line_end":84,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":257751,"byte_end":257763,"line_start":90,"line_end":90,"column_start":12,"column_end":24},"name":"maximum_size","qualname":"<TableInstance>::maximum_size","value":"pub fn maximum_size(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size `TableInstance` can grow to.\n","sig":null,"attributes":[{"value":"/ Returns maximum size `TableInstance` can grow to.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":257686,"byte_end":257739,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":257879,"byte_end":257891,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"current_size","qualname":"<TableInstance>::current_size","value":"pub fn current_size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns current size of the table.\n","sig":null,"attributes":[{"value":"/ Returns current size of the table.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":257829,"byte_end":257867,"line_start":94,"line_end":94,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":258151,"byte_end":258155,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"grow","qualname":"<TableInstance>::grow","value":"pub fn grow(&Self, u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Increases the size of the table by given number of elements.","sig":null,"attributes":[{"value":"/ Increases the size of the table by given number of elements.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":257961,"byte_end":258025,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":258030,"byte_end":258033,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":258038,"byte_end":258050,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":258055,"byte_end":258058,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if tried to allocate more elements than permited by limit.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":258063,"byte_end":258139,"line_start":103,"line_end":103,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":258978,"byte_end":258981,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"get","qualname":"<TableInstance>::get","value":"pub fn get(&Self, u32) -> Result<Option<FuncRef>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the specific value in the table\n","sig":null,"attributes":[{"value":"/ Get the specific value in the table","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":258927,"byte_end":258966,"line_start":128,"line_end":128,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":259481,"byte_end":259484,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"set","qualname":"<TableInstance>::set","value":"pub fn set(&Self, u32, Option<FuncRef>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the table element to the specified function.\n","sig":null,"attributes":[{"value":"/ Set the table element to the specified function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":259417,"byte_end":259469,"line_start":141,"line_end":141,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260467,"byte_end":260476,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Signature","qualname":"::types::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":3051},{"krate":0,"index":3052}],"decl_id":null,"docs":" Signature of a [function].","sig":null,"attributes":[{"value":"/ Signature of a [function].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260091,"byte_end":260121,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260122,"byte_end":260125,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Signature of a function consists of zero or more parameter [types][type] and zero or one return [type].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260126,"byte_end":260233,"line_start":9,"line_end":9,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260234,"byte_end":260237,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Two signatures are considered equal if they have equal list of parameters and equal return types.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260238,"byte_end":260339,"line_start":11,"line_end":11,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260340,"byte_end":260343,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [type]: enum.ValueType.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260344,"byte_end":260375,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/ [function]: struct.FuncInstance.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260376,"byte_end":260416,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":261118,"byte_end":261121,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Signature>::new","value":"pub fn new<C: Into<Cow>>(C, Option<ValueType>) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Creates new signature with givens\n parameter types and optional return type.","sig":null,"attributes":[{"value":"/ Creates new signature with givens","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260578,"byte_end":260615,"line_start":22,"line_end":22,"column_start":5,"column_end":42}},{"value":"/ parameter types and optional return type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260620,"byte_end":260665,"line_start":23,"line_end":23,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260670,"byte_end":260673,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260678,"byte_end":260692,"line_start":25,"line_end":25,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260697,"byte_end":260700,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260705,"byte_end":260716,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ use wasmi::{Signature, ValueType};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260721,"byte_end":260759,"line_start":28,"line_end":28,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260764,"byte_end":260767,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ // s1: (i32) -> ()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260772,"byte_end":260794,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ let s1 = Signature::new(&[ValueType::I32][..], None);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260799,"byte_end":260856,"line_start":31,"line_end":31,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260861,"byte_end":260864,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ // s2: () -> i32","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260869,"byte_end":260889,"line_start":33,"line_end":33,"column_start":5,"column_end":25}},{"value":"/ let s2 = Signature::new(&[][..], Some(ValueType::I32));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260894,"byte_end":260953,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260958,"byte_end":260961,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // s3: (I64) -> ()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260966,"byte_end":260988,"line_start":36,"line_end":36,"column_start":5,"column_end":27}},{"value":"/ let dynamic_params = vec![ValueType::I64];","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260993,"byte_end":261039,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/ let s3 = Signature::new(dynamic_params, None);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":261044,"byte_end":261094,"line_start":38,"line_end":38,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":261099,"byte_end":261106,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":261398,"byte_end":261404,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"params","qualname":"<Signature>::params","value":"pub fn params(&Self) -> &[ValueType]","parent":null,"children":[],"decl_id":null,"docs":" Returns parameter types of this signature.\n","sig":null,"attributes":[{"value":"/ Returns parameter types of this signature.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":261340,"byte_end":261386,"line_start":50,"line_end":50,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":261525,"byte_end":261536,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"return_type","qualname":"<Signature>::return_type","value":"pub fn return_type(&Self) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" Returns return type of this signature.\n","sig":null,"attributes":[{"value":"/ Returns return type of this signature.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":261471,"byte_end":261513,"line_start":55,"line_end":55,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3065},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262197,"byte_end":262200,"line_start":81,"line_end":81,"column_start":5,"column_end":8},"name":"I32","qualname":"::types::ValueType::I32","value":"ValueType::I32","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" 32-bit signed or unsigned integer.\n","sig":null,"attributes":[{"value":"/ 32-bit signed or unsigned integer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262154,"byte_end":262192,"line_start":80,"line_end":80,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3067},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262249,"byte_end":262252,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"name":"I64","qualname":"::types::ValueType::I64","value":"ValueType::I64","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" 64-bit signed or unsigned integer.\n","sig":null,"attributes":[{"value":"/ 64-bit signed or unsigned integer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262206,"byte_end":262244,"line_start":82,"line_end":82,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3069},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262310,"byte_end":262313,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"F32","qualname":"::types::ValueType::F32","value":"ValueType::F32","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" 32-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[{"value":"/ 32-bit IEEE 754-2008 floating point number.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262258,"byte_end":262305,"line_start":84,"line_end":84,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3071},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262371,"byte_end":262374,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"F64","qualname":"::types::ValueType::F64","value":"ValueType::F64","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" 64-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[{"value":"/ 64-bit IEEE 754-2008 floating point number.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262319,"byte_end":262366,"line_start":86,"line_end":86,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":3064},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262138,"byte_end":262147,"line_start":79,"line_end":79,"column_start":10,"column_end":19},"name":"ValueType","qualname":"::types::ValueType","value":"pub enum ValueType { I32, I64, F32, F64, }","parent":null,"children":[{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":3071}],"decl_id":null,"docs":" Type of a value.","sig":null,"attributes":[{"value":"/ Type of a value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":261972,"byte_end":261992,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":261993,"byte_end":261996,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ See [`RuntimeValue`] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":261997,"byte_end":262034,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262035,"byte_end":262038,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262039,"byte_end":262083,"line_start":77,"line_end":77,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263187,"byte_end":263203,"line_start":116,"line_end":116,"column_start":12,"column_end":28},"name":"GlobalDescriptor","qualname":"::types::GlobalDescriptor","value":"GlobalDescriptor {  }","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370}],"decl_id":null,"docs":" Description of a global variable.","sig":null,"attributes":[{"value":"/ Description of a global variable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262981,"byte_end":263018,"line_start":110,"line_end":110,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263019,"byte_end":263022,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Primarly used to describe imports of global variables.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263023,"byte_end":263081,"line_start":112,"line_end":112,"column_start":1,"column_end":59}},{"value":"/ See [`ImportResolver`] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263082,"byte_end":263121,"line_start":113,"line_end":113,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263122,"byte_end":263125,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263126,"byte_end":263175,"line_start":115,"line_end":115,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263645,"byte_end":263655,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"value_type","qualname":"<GlobalDescriptor>::value_type","value":"pub fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Returns [`ValueType`] of the requested global.","sig":null,"attributes":[{"value":"/ Returns [`ValueType`] of the requested global.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263532,"byte_end":263582,"line_start":129,"line_end":129,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263587,"byte_end":263590,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`ValueType`]: enum.ValueType.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263595,"byte_end":263633,"line_start":131,"line_end":131,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263774,"byte_end":263784,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"is_mutable","qualname":"<GlobalDescriptor>::is_mutable","value":"pub fn is_mutable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the requested global mutable.\n","sig":null,"attributes":[{"value":"/ Returns whether the requested global mutable.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263713,"byte_end":263762,"line_start":136,"line_end":136,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1375},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264018,"byte_end":264033,"line_start":148,"line_end":148,"column_start":12,"column_end":27},"name":"TableDescriptor","qualname":"::types::TableDescriptor","value":"TableDescriptor {  }","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1377}],"decl_id":null,"docs":" Description of a table.","sig":null,"attributes":[{"value":"/ Description of a table.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263832,"byte_end":263859,"line_start":142,"line_end":142,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263860,"byte_end":263863,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Primarly used to describe imports of tables.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263864,"byte_end":263912,"line_start":144,"line_end":144,"column_start":1,"column_end":49}},{"value":"/ See [`ImportResolver`] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263913,"byte_end":263952,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263953,"byte_end":263956,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263957,"byte_end":264006,"line_start":147,"line_end":147,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264394,"byte_end":264401,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"initial","qualname":"<TableDescriptor>::initial","value":"pub fn initial(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns initial size of the requested table.\n","sig":null,"attributes":[{"value":"/ Returns initial size of the requested table.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264334,"byte_end":264382,"line_start":161,"line_end":161,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264510,"byte_end":264517,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"maximum","qualname":"<TableDescriptor>::maximum","value":"pub fn maximum(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size of the requested table.\n","sig":null,"attributes":[{"value":"/ Returns maximum size of the requested table.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264450,"byte_end":264498,"line_start":166,"line_end":166,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1382},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264775,"byte_end":264791,"line_start":178,"line_end":178,"column_start":12,"column_end":28},"name":"MemoryDescriptor","qualname":"::types::MemoryDescriptor","value":"MemoryDescriptor {  }","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384}],"decl_id":null,"docs":" Description of a linear memory.","sig":null,"attributes":[{"value":"/ Description of a linear memory.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264572,"byte_end":264607,"line_start":172,"line_end":172,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264608,"byte_end":264611,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Primarly used to describe imports of linear memories.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264612,"byte_end":264669,"line_start":174,"line_end":174,"column_start":1,"column_end":58}},{"value":"/ See [`ImportResolver`] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264670,"byte_end":264709,"line_start":175,"line_end":175,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264710,"byte_end":264713,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ [`ImportResolver`]: trait.ImportResolver.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264714,"byte_end":264763,"line_start":177,"line_end":177,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":265171,"byte_end":265178,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"initial","qualname":"<MemoryDescriptor>::initial","value":"pub fn initial(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns initial size (in pages) of the requested memory.\n","sig":null,"attributes":[{"value":"/ Returns initial size (in pages) of the requested memory.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":265099,"byte_end":265159,"line_start":191,"line_end":191,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":265299,"byte_end":265306,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"maximum","qualname":"<MemoryDescriptor>::maximum","value":"pub fn maximum(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size (in pages) of the requested memory.\n","sig":null,"attributes":[{"value":"/ Returns maximum size (in pages) of the requested memory.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":265227,"byte_end":265287,"line_start":196,"line_end":196,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3085},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":265632,"byte_end":265657,"line_start":10,"line_end":10,"column_start":5,"column_end":30},"name":"InvalidLittleEndianBuffer","qualname":"::value::Error::InvalidLittleEndianBuffer","value":"Error::InvalidLittleEndianBuffer","parent":{"krate":0,"index":3084},"children":[],"decl_id":null,"docs":" The buffer is too short for the type being deserialized\n","sig":null,"attributes":[{"value":"/ The buffer is too short for the type being deserialized","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":265568,"byte_end":265627,"line_start":9,"line_end":9,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":3084},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":265556,"byte_end":265561,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Error","qualname":"::value::Error","value":"pub enum Error { InvalidLittleEndianBuffer, }","parent":null,"children":[{"krate":0,"index":3085}],"decl_id":null,"docs":" Error for `LittleEndianConvert`\n","sig":null,"attributes":[{"value":"/ Error for `LittleEndianConvert`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":265494,"byte_end":265529,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3090},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266189,"byte_end":266192,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"I32","qualname":"::value::RuntimeValue::I32","value":"RuntimeValue::I32(i32)","parent":{"krate":0,"index":3089},"children":[],"decl_id":null,"docs":" Value of 32-bit signed or unsigned integer.\n","sig":null,"attributes":[{"value":"/ Value of 32-bit signed or unsigned integer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266137,"byte_end":266184,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3093},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266255,"byte_end":266258,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"I64","qualname":"::value::RuntimeValue::I64","value":"RuntimeValue::I64(i64)","parent":{"krate":0,"index":3089},"children":[],"decl_id":null,"docs":" Value of 64-bit signed or unsigned integer.\n","sig":null,"attributes":[{"value":"/ Value of 64-bit signed or unsigned integer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266203,"byte_end":266250,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3096},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266330,"byte_end":266333,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"F32","qualname":"::value::RuntimeValue::F32","value":"RuntimeValue::F32(F32)","parent":{"krate":0,"index":3089},"children":[],"decl_id":null,"docs":" Value of 32-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[{"value":"/ Value of 32-bit IEEE 754-2008 floating point number.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266269,"byte_end":266325,"line_start":26,"line_end":26,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3099},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266405,"byte_end":266408,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"name":"F64","qualname":"::value::RuntimeValue::F64","value":"RuntimeValue::F64(F64)","parent":{"krate":0,"index":3089},"children":[],"decl_id":null,"docs":" Value of 64-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[{"value":"/ Value of 64-bit IEEE 754-2008 floating point number.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266344,"byte_end":266400,"line_start":28,"line_end":28,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":3089},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266118,"byte_end":266130,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"RuntimeValue","qualname":"::value::RuntimeValue","value":"pub enum RuntimeValue { I32(i32), I64(i64), F32(F32), F64(F64), }","parent":null,"children":[{"krate":0,"index":3090},{"krate":0,"index":3093},{"krate":0,"index":3096},{"krate":0,"index":3099}],"decl_id":null,"docs":" Runtime representation of a value.","sig":null,"attributes":[{"value":"/ Runtime representation of a value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":265662,"byte_end":265700,"line_start":13,"line_end":13,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":265701,"byte_end":265704,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Wasm code manipulate values of the four basic value types:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":265705,"byte_end":265767,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ integers and floating-point (IEEE 754-2008) data of 32 or 64 bit width each, respectively.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":265768,"byte_end":265862,"line_start":16,"line_end":16,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":265863,"byte_end":265866,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ There is no distinction between signed and unsigned integer types. Instead, integers are","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":265867,"byte_end":265959,"line_start":18,"line_end":18,"column_start":1,"column_end":93}},{"value":"/ interpreted by respective operations as either unsigned or signed in two’s complement representation.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":265960,"byte_end":266067,"line_start":19,"line_end":19,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":1419},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266837,"byte_end":266853,"line_start":41,"line_end":41,"column_start":11,"column_end":27},"name":"FromRuntimeValue","qualname":"::value::FromRuntimeValue","value":"FromRuntimeValue","parent":null,"children":[{"krate":0,"index":1420}],"decl_id":null,"docs":" Trait for creating value from a [`RuntimeValue`].","sig":null,"attributes":[{"value":"/ Trait for creating value from a [`RuntimeValue`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266418,"byte_end":266471,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266472,"byte_end":266475,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Typically each implementation can create a value from the specific type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266476,"byte_end":266552,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ For example, values of type `bool` or `u32` are both represented by [`I32`] and `f64` values are represented by","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266553,"byte_end":266668,"line_start":35,"line_end":35,"column_start":1,"column_end":116}},{"value":"/ [`F64`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266669,"byte_end":266681,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266682,"byte_end":266685,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`I32`]: enum.RuntimeValue.html#variant.I32","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266686,"byte_end":266733,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ [`F64`]: enum.RuntimeValue.html#variant.F64","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266734,"byte_end":266781,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266782,"byte_end":266826,"line_start":40,"line_end":40,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":267141,"byte_end":267159,"line_start":51,"line_end":51,"column_start":8,"column_end":26},"name":"from_runtime_value","qualname":"::value::FromRuntimeValue::from_runtime_value","value":"pub fn from_runtime_value(RuntimeValue) -> Option<Self>","parent":{"krate":0,"index":1419},"children":[],"decl_id":null,"docs":" Create a value of type `Self` from a given [`RuntimeValue`].","sig":null,"attributes":[{"value":"/ Create a value of type `Self` from a given [`RuntimeValue`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266883,"byte_end":266947,"line_start":45,"line_end":45,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266952,"byte_end":266955,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the [`RuntimeValue`] is of type different than","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":266960,"byte_end":267028,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ expected by the conversion in question.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":267033,"byte_end":267076,"line_start":48,"line_end":48,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":267081,"byte_end":267084,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":267089,"byte_end":267133,"line_start":50,"line_end":50,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1434},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":268047,"byte_end":268066,"line_start":79,"line_end":79,"column_start":11,"column_end":30},"name":"LittleEndianConvert","qualname":"::value::LittleEndianConvert","value":"LittleEndianConvert","parent":null,"children":[{"krate":0,"index":1435},{"krate":0,"index":1436}],"decl_id":null,"docs":" Convert from and to little endian.\n","sig":null,"attributes":[{"value":"/ Convert from and to little endian.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":267998,"byte_end":268036,"line_start":78,"line_end":78,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":268140,"byte_end":268158,"line_start":84,"line_end":84,"column_start":8,"column_end":26},"name":"into_little_endian","qualname":"::value::LittleEndianConvert::into_little_endian","value":"pub fn into_little_endian(Self, &mut [u8])","parent":{"krate":0,"index":1434},"children":[],"decl_id":null,"docs":" Convert to little endian buffer.\n","sig":null,"attributes":[{"value":"/ Convert to little endian buffer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":268096,"byte_end":268132,"line_start":83,"line_end":83,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":268235,"byte_end":268253,"line_start":86,"line_end":86,"column_start":8,"column_end":26},"name":"from_little_endian","qualname":"::value::LittleEndianConvert::from_little_endian","value":"pub fn from_little_endian(&[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":1434},"children":[],"decl_id":null,"docs":" Convert from little endian buffer.\n","sig":null,"attributes":[{"value":"/ Convert from little endian buffer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":268189,"byte_end":268227,"line_start":85,"line_end":85,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":270215,"byte_end":270222,"line_start":143,"line_end":143,"column_start":12,"column_end":19},"name":"default","qualname":"<RuntimeValue>::default","value":"pub fn default(ValueType) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new default value of given type.\n","sig":null,"attributes":[{"value":"/ Creates new default value of given type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":270159,"byte_end":270203,"line_start":142,"line_end":142,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":270600,"byte_end":270610,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"decode_f32","qualname":"<RuntimeValue>::decode_f32","value":"pub fn decode_f32(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new value by interpreting passed u32 as f32.\n","sig":null,"attributes":[{"value":"/ Creates new value by interpreting passed u32 as f32.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":270532,"byte_end":270588,"line_start":152,"line_end":152,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":270757,"byte_end":270767,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"decode_f64","qualname":"<RuntimeValue>::decode_f64","value":"pub fn decode_f64(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new value by interpreting passed u64 as f64.\n","sig":null,"attributes":[{"value":"/ Creates new value by interpreting passed u64 as f64.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":270689,"byte_end":270745,"line_start":157,"line_end":157,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":270895,"byte_end":270905,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"value_type","qualname":"<RuntimeValue>::value_type","value":"pub fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Get variable type for this value.\n","sig":null,"attributes":[{"value":"/ Get variable type for this value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":270846,"byte_end":270883,"line_start":162,"line_end":162,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271446,"byte_end":271454,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"try_into","qualname":"<RuntimeValue>::try_into","value":"pub fn try_into<T: FromRuntimeValue>(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `T` if this particular [`RuntimeValue`] contains\n appropriate type.","sig":null,"attributes":[{"value":"/ Returns `T` if this particular [`RuntimeValue`] contains","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271179,"byte_end":271239,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/ appropriate type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271244,"byte_end":271265,"line_start":173,"line_end":173,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271270,"byte_end":271273,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ See [`FromRuntimeValue`] for details.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271278,"byte_end":271319,"line_start":175,"line_end":175,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271324,"byte_end":271327,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`FromRuntimeValue`]: trait.FromRuntimeValue.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271332,"byte_end":271385,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/ [`RuntimeValue`]: enum.RuntimeValue.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271390,"byte_end":271434,"line_start":178,"line_end":178,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1696},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14107,"byte_end":14119,"line_start":450,"line_end":450,"column_start":9,"column_end":21},"name":"memory_units","qualname":"::memory_units","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1708}],"decl_id":null,"docs":" WebAssembly-specific sizes and units.\n","sig":null,"attributes":[{"value":"/ WebAssembly-specific sizes and units.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14057,"byte_end":14098,"line_start":449,"line_end":449,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1711},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14290,"byte_end":14296,"line_start":456,"line_end":456,"column_start":12,"column_end":18},"name":"Module","qualname":"::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713}],"decl_id":null,"docs":" Deserialized module prepared for instantiation.\n","sig":null,"attributes":[{"value":"/ Deserialized module prepared for instantiation.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14227,"byte_end":14278,"line_start":455,"line_end":455,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15378,"byte_end":15401,"line_start":494,"line_end":494,"column_start":12,"column_end":35},"name":"from_parity_wasm_module","qualname":"<Module>::from_parity_wasm_module","value":"pub fn from_parity_wasm_module(parity_wasm::elements::Module)\n-> Result<Module, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create `Module` from `parity_wasm::elements::Module`.","sig":null,"attributes":[{"value":"/ Create `Module` from `parity_wasm::elements::Module`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14401,"byte_end":14458,"line_start":462,"line_end":462,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14463,"byte_end":14466,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This function will load, validate and prepare a `parity_wasm`'s `Module`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14471,"byte_end":14548,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14553,"byte_end":14556,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14561,"byte_end":14573,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14578,"byte_end":14581,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if provided `Module` is not valid.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14586,"byte_end":14638,"line_start":468,"line_end":468,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14643,"byte_end":14646,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14651,"byte_end":14665,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14670,"byte_end":14673,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14678,"byte_end":14689,"line_start":472,"line_end":472,"column_start":5,"column_end":16}},{"value":"/ extern crate parity_wasm;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14694,"byte_end":14723,"line_start":473,"line_end":473,"column_start":5,"column_end":34}},{"value":"/ extern crate wasmi;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14728,"byte_end":14751,"line_start":474,"line_end":474,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14756,"byte_end":14759,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ use parity_wasm::builder;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14764,"byte_end":14793,"line_start":476,"line_end":476,"column_start":5,"column_end":34}},{"value":"/ use parity_wasm::elements;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14798,"byte_end":14828,"line_start":477,"line_end":477,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14833,"byte_end":14836,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14841,"byte_end":14856,"line_start":479,"line_end":479,"column_start":5,"column_end":20}},{"value":"/     let parity_module =","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14861,"byte_end":14888,"line_start":480,"line_end":480,"column_start":5,"column_end":32}},{"value":"/         builder::module()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14893,"byte_end":14922,"line_start":481,"line_end":481,"column_start":5,"column_end":34}},{"value":"/             .function()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14927,"byte_end":14954,"line_start":482,"line_end":482,"column_start":5,"column_end":32}},{"value":"/                 .signature().with_param(elements::ValueType::I32).build()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14959,"byte_end":15036,"line_start":483,"line_end":483,"column_start":5,"column_end":82}},{"value":"/                 .body().build()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15041,"byte_end":15076,"line_start":484,"line_end":484,"column_start":5,"column_end":40}},{"value":"/             .build()","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15081,"byte_end":15105,"line_start":485,"line_end":485,"column_start":5,"column_end":29}},{"value":"/         .build();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15110,"byte_end":15131,"line_start":486,"line_end":486,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15136,"byte_end":15139,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/     let module = wasmi::Module::from_parity_wasm_module(parity_module)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15144,"byte_end":15218,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/         .expect(\"parity-wasm builder generated invalid module!\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15223,"byte_end":15292,"line_start":489,"line_end":489,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15297,"byte_end":15300,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/     // Instantiate `module`, etc...","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15305,"byte_end":15344,"line_start":491,"line_end":491,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15349,"byte_end":15354,"line_start":492,"line_end":492,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15359,"byte_end":15366,"line_start":493,"line_end":493,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17477,"byte_end":17496,"line_start":556,"line_end":556,"column_start":12,"column_end":31},"name":"deny_floating_point","qualname":"<Module>::deny_floating_point","value":"pub fn deny_floating_point(&Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fail if the module contains any floating-point operations","sig":null,"attributes":[{"value":"/ Fail if the module contains any floating-point operations","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15613,"byte_end":15674,"line_start":500,"line_end":500,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15679,"byte_end":15682,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15687,"byte_end":15699,"line_start":502,"line_end":502,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15704,"byte_end":15707,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if provided `Module` is not valid.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15712,"byte_end":15764,"line_start":504,"line_end":504,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15769,"byte_end":15772,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15777,"byte_end":15791,"line_start":506,"line_end":506,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15796,"byte_end":15799,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15804,"byte_end":15815,"line_start":508,"line_end":508,"column_start":5,"column_end":16}},{"value":"/ # extern crate wasmi;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15820,"byte_end":15845,"line_start":509,"line_end":509,"column_start":5,"column_end":30}},{"value":"/ # extern crate wabt;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15850,"byte_end":15874,"line_start":510,"line_end":510,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15879,"byte_end":15882,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let wasm_binary: Vec<u8> =","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15887,"byte_end":15917,"line_start":512,"line_end":512,"column_start":5,"column_end":35}},{"value":"/     wabt::wat2wasm(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15922,"byte_end":15945,"line_start":513,"line_end":513,"column_start":5,"column_end":28}},{"value":"/         r#\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15950,"byte_end":15965,"line_start":514,"line_end":514,"column_start":5,"column_end":20}},{"value":"/         (module","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15970,"byte_end":15989,"line_start":515,"line_end":515,"column_start":5,"column_end":24}},{"value":"/          (func $add (param $lhs i32) (param $rhs i32) (result i32)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":15994,"byte_end":16064,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/                get_local $lhs","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16069,"byte_end":16102,"line_start":517,"line_end":517,"column_start":5,"column_end":38}},{"value":"/                get_local $rhs","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16107,"byte_end":16140,"line_start":518,"line_end":518,"column_start":5,"column_end":38}},{"value":"/                i32.add))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16145,"byte_end":16173,"line_start":519,"line_end":519,"column_start":5,"column_end":33}},{"value":"/         \"#,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16178,"byte_end":16193,"line_start":520,"line_end":520,"column_start":5,"column_end":20}},{"value":"/     )","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16198,"byte_end":16207,"line_start":521,"line_end":521,"column_start":5,"column_end":14}},{"value":"/     .expect(\"failed to parse wat\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16212,"byte_end":16251,"line_start":522,"line_end":522,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16256,"byte_end":16259,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ // Load wasm binary and prepare it for instantiation.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16264,"byte_end":16321,"line_start":524,"line_end":524,"column_start":5,"column_end":62}},{"value":"/ let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"Parsing failed\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16326,"byte_end":16409,"line_start":525,"line_end":525,"column_start":5,"column_end":88}},{"value":"/ assert!(module.deny_floating_point().is_ok());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16414,"byte_end":16464,"line_start":526,"line_end":526,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16469,"byte_end":16472,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ let wasm_binary: Vec<u8> =","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16477,"byte_end":16507,"line_start":528,"line_end":528,"column_start":5,"column_end":35}},{"value":"/     wabt::wat2wasm(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16512,"byte_end":16535,"line_start":529,"line_end":529,"column_start":5,"column_end":28}},{"value":"/         r#\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16540,"byte_end":16555,"line_start":530,"line_end":530,"column_start":5,"column_end":20}},{"value":"/         (module","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16560,"byte_end":16579,"line_start":531,"line_end":531,"column_start":5,"column_end":24}},{"value":"/          (func $add (param $lhs f32) (param $rhs f32) (result f32)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16584,"byte_end":16654,"line_start":532,"line_end":532,"column_start":5,"column_end":75}},{"value":"/                get_local $lhs","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16659,"byte_end":16692,"line_start":533,"line_end":533,"column_start":5,"column_end":38}},{"value":"/                get_local $rhs","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16697,"byte_end":16730,"line_start":534,"line_end":534,"column_start":5,"column_end":38}},{"value":"/                f32.add))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16735,"byte_end":16763,"line_start":535,"line_end":535,"column_start":5,"column_end":33}},{"value":"/         \"#,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16768,"byte_end":16783,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"/     )","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16788,"byte_end":16797,"line_start":537,"line_end":537,"column_start":5,"column_end":14}},{"value":"/     .expect(\"failed to parse wat\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16802,"byte_end":16841,"line_start":538,"line_end":538,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16846,"byte_end":16849,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"Parsing failed\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16854,"byte_end":16937,"line_start":540,"line_end":540,"column_start":5,"column_end":88}},{"value":"/ assert!(module.deny_floating_point().is_err());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16942,"byte_end":16993,"line_start":541,"line_end":541,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":16998,"byte_end":17001,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let wasm_binary: Vec<u8> =","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17006,"byte_end":17036,"line_start":543,"line_end":543,"column_start":5,"column_end":35}},{"value":"/     wabt::wat2wasm(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17041,"byte_end":17064,"line_start":544,"line_end":544,"column_start":5,"column_end":28}},{"value":"/         r#\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17069,"byte_end":17084,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/         (module","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17089,"byte_end":17108,"line_start":546,"line_end":546,"column_start":5,"column_end":24}},{"value":"/          (func $add (param $lhs f32) (param $rhs f32) (result f32)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17113,"byte_end":17183,"line_start":547,"line_end":547,"column_start":5,"column_end":75}},{"value":"/                get_local $lhs))","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17188,"byte_end":17223,"line_start":548,"line_end":548,"column_start":5,"column_end":40}},{"value":"/         \"#,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17228,"byte_end":17243,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/     )","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17248,"byte_end":17257,"line_start":550,"line_end":550,"column_start":5,"column_end":14}},{"value":"/     .expect(\"failed to parse wat\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17262,"byte_end":17301,"line_start":551,"line_end":551,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17306,"byte_end":17309,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ let module = wasmi::Module::from_buffer(&wasm_binary).expect(\"Parsing failed\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17314,"byte_end":17397,"line_start":553,"line_end":553,"column_start":5,"column_end":88}},{"value":"/ assert!(module.deny_floating_point().is_err());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17402,"byte_end":17453,"line_start":554,"line_end":554,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17458,"byte_end":17465,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18426,"byte_end":18437,"line_start":586,"line_end":586,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<Module>::from_buffer","value":"pub fn from_buffer<B: AsRef<[u8]>>(B) -> Result<Module, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create `Module` from a given buffer.","sig":null,"attributes":[{"value":"/ Create `Module` from a given buffer.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17609,"byte_end":17649,"line_start":560,"line_end":560,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17654,"byte_end":17657,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This function will deserialize wasm module from a given module,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17662,"byte_end":17729,"line_start":562,"line_end":562,"column_start":5,"column_end":72}},{"value":"/ validate and prepare it for instantiation.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17734,"byte_end":17780,"line_start":563,"line_end":563,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17785,"byte_end":17788,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17793,"byte_end":17805,"line_start":565,"line_end":565,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17810,"byte_end":17813,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if wasm binary in provided `buffer` is not valid wasm binary.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17818,"byte_end":17897,"line_start":567,"line_end":567,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17902,"byte_end":17905,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17910,"byte_end":17924,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17929,"byte_end":17932,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17937,"byte_end":17948,"line_start":571,"line_end":571,"column_start":5,"column_end":16}},{"value":"/ extern crate wasmi;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17953,"byte_end":17976,"line_start":572,"line_end":572,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17981,"byte_end":17984,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":17989,"byte_end":18004,"line_start":574,"line_end":574,"column_start":5,"column_end":20}},{"value":"/     let module =","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18009,"byte_end":18029,"line_start":575,"line_end":575,"column_start":5,"column_end":25}},{"value":"/         wasmi::Module::from_buffer(","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18034,"byte_end":18073,"line_start":576,"line_end":576,"column_start":5,"column_end":44}},{"value":"/             // Minimal module:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18078,"byte_end":18112,"line_start":577,"line_end":577,"column_start":5,"column_end":39}},{"value":"/             //   \\0asm - magic","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18117,"byte_end":18151,"line_start":578,"line_end":578,"column_start":5,"column_end":39}},{"value":"/             //    0x01 - version (in little-endian)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18156,"byte_end":18211,"line_start":579,"line_end":579,"column_start":5,"column_end":60}},{"value":"/             &[0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18216,"byte_end":18281,"line_start":580,"line_end":580,"column_start":5,"column_end":70}},{"value":"/         ).expect(\"Failed to load minimal module\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18286,"byte_end":18340,"line_start":581,"line_end":581,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18345,"byte_end":18348,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     // Instantiate `module`, etc...","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18353,"byte_end":18392,"line_start":583,"line_end":583,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18397,"byte_end":18402,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":18407,"byte_end":18414,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4404,"byte_end":4408,"line_start":141,"line_end":141,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4736,"byte_end":4740,"line_start":158,"line_end":158,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4900,"byte_end":4904,"line_start":165,"line_end":165,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7806,"byte_end":7814,"line_start":248,"line_end":248,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8607,"byte_end":8612,"line_start":279,"line_end":279,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":10820,"byte_end":10825,"line_start":336,"line_end":336,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":11286,"byte_end":11291,"line_start":352,"line_end":352,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12032,"byte_end":12037,"line_start":369,"line_end":369,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12503,"byte_end":12508,"line_start":385,"line_end":385,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12639,"byte_end":12643,"line_start":394,"line_end":394,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12788,"byte_end":12793,"line_start":403,"line_end":403,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12884,"byte_end":12888,"line_start":409,"line_end":409,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12989,"byte_end":12994,"line_start":415,"line_end":415,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19545,"byte_end":19552,"line_start":24,"line_end":24,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":20602,"byte_end":20614,"line_start":60,"line_end":60,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21215,"byte_end":21227,"line_start":75,"line_end":75,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27426,"byte_end":27440,"line_start":248,"line_end":248,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27883,"byte_end":27897,"line_start":268,"line_end":268,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31575,"byte_end":31584,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32353,"byte_end":32367,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34270,"byte_end":34281,"line_start":13,"line_end":13,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34408,"byte_end":34419,"line_start":19,"line_end":19,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34501,"byte_end":34512,"line_start":25,"line_end":25,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":40287,"byte_end":40299,"line_start":222,"line_end":222,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45007,"byte_end":45021,"line_start":105,"line_end":105,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45093,"byte_end":45107,"line_start":111,"line_end":111,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45958,"byte_end":45972,"line_start":145,"line_end":145,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":49349,"byte_end":49358,"line_start":256,"line_end":256,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/isa.rs","byte_start":54007,"byte_end":54011,"line_start":84,"line_end":84,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/isa.rs","byte_start":55013,"byte_end":55022,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/isa.rs","byte_start":62353,"byte_end":62365,"line_start":545,"line_end":545,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/isa.rs","byte_start":63726,"byte_end":63741,"line_start":588,"line_end":588,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/isa.rs","byte_start":63851,"byte_end":63866,"line_start":595,"line_end":595,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mmap_bytebuf.rs","byte_start":102063,"byte_end":102067,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mmap_bytebuf.rs","byte_start":105673,"byte_end":105677,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mmap_bytebuf.rs","byte_start":106418,"byte_end":106425,"line_start":128,"line_end":128,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77097,"byte_end":77106,"line_start":39,"line_end":39,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":78167,"byte_end":78181,"line_start":69,"line_end":69,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":78577,"byte_end":78590,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":78902,"byte_end":78916,"line_start":98,"line_end":98,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93719,"byte_end":93725,"line_start":543,"line_end":543,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":94438,"byte_end":94444,"line_start":564,"line_end":564,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109767,"byte_end":109776,"line_start":39,"line_end":39,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110532,"byte_end":110541,"line_start":69,"line_end":69,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110943,"byte_end":110952,"line_start":80,"line_end":80,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":111337,"byte_end":111346,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113764,"byte_end":113778,"line_start":164,"line_end":164,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":695},{"krate":0,"index":701},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135368,"byte_end":135387,"line_start":701,"line_end":701,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/nan_preserving_float.rs","byte_start":144892,"byte_end":144895,"line_start":122,"line_end":122,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/nan_preserving_float.rs","byte_start":145083,"byte_end":145086,"line_start":134,"line_end":134,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/prepare/compile.rs","byte_start":153808,"byte_end":153822,"line_start":37,"line_end":37,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/prepare/compile.rs","byte_start":154901,"byte_end":154909,"line_start":68,"line_end":68,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/prepare/compile.rs","byte_start":155737,"byte_end":155745,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/prepare/compile.rs","byte_start":195233,"byte_end":195237,"line_start":1146,"line_end":1146,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/prepare/mod.rs","byte_start":147483,"byte_end":147498,"line_start":26,"line_end":26,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":200941,"byte_end":200961,"line_start":42,"line_end":42,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":202504,"byte_end":202524,"line_start":103,"line_end":103,"column_start":21,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":202803,"byte_end":202823,"line_start":115,"line_end":115,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":203990,"byte_end":204006,"line_start":150,"line_end":150,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":204451,"byte_end":204462,"line_start":172,"line_end":172,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1071},{"krate":0,"index":1078},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1139},{"krate":0,"index":1142},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1213},{"krate":0,"index":1220},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":247317,"byte_end":247332,"line_start":1263,"line_end":1263,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":248600,"byte_end":248615,"line_start":1307,"line_end":1307,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":249906,"byte_end":249916,"line_start":1358,"line_end":1358,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":252074,"byte_end":252083,"line_start":1455,"line_end":1455,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":252667,"byte_end":252680,"line_start":1481,"line_end":1481,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1282},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":254917,"byte_end":254930,"line_start":1550,"line_end":1550,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255527,"byte_end":255535,"line_start":19,"line_end":19,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256360,"byte_end":256373,"line_start":46,"line_end":46,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256616,"byte_end":256629,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260562,"byte_end":260571,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262384,"byte_end":262393,"line_start":90,"line_end":90,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263260,"byte_end":263276,"line_start":121,"line_end":121,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264088,"byte_end":264103,"line_start":153,"line_end":153,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264846,"byte_end":264862,"line_start":183,"line_end":183,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":270140,"byte_end":270152,"line_start":141,"line_end":141,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271575,"byte_end":271587,"line_start":184,"line_end":184,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271687,"byte_end":271699,"line_start":190,"line_end":190,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271800,"byte_end":271812,"line_start":196,"line_end":196,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271906,"byte_end":271918,"line_start":202,"line_end":202,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272011,"byte_end":272023,"line_start":208,"line_end":208,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272123,"byte_end":272135,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272236,"byte_end":272248,"line_start":220,"line_end":220,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272359,"byte_end":272371,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272482,"byte_end":272494,"line_start":232,"line_end":232,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272588,"byte_end":272600,"line_start":238,"line_end":238,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":276408,"byte_end":276411,"line_start":362,"line_end":362,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":280149,"byte_end":280152,"line_start":459,"line_end":459,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":286722,"byte_end":286725,"line_start":720,"line_end":720,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":287028,"byte_end":287031,"line_start":730,"line_end":730,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14388,"byte_end":14394,"line_start":461,"line_end":461,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":13178,"byte_end":13198,"line_start":428,"line_end":428,"column_start":9,"column_end":29},"ref_id":{"krate":0,"index":729}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4404,"byte_end":4408,"line_start":141,"line_end":141,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4736,"byte_end":4740,"line_start":158,"line_end":158,"column_start":23,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1722},"to":{"krate":2,"index":8898}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":4900,"byte_end":4904,"line_start":165,"line_end":165,"column_start":23,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1722},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":7806,"byte_end":7814,"line_start":248,"line_end":248,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":8607,"byte_end":8612,"line_start":279,"line_end":279,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":10820,"byte_end":10825,"line_start":336,"line_end":336,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1748},"to":{"krate":2,"index":2752}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":11286,"byte_end":11291,"line_start":352,"line_end":352,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1748},"to":{"krate":2,"index":8898}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12032,"byte_end":12037,"line_start":369,"line_end":369,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1748},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12503,"byte_end":12508,"line_start":385,"line_end":385,"column_start":21,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1748},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12639,"byte_end":12643,"line_start":394,"line_end":394,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1722},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12788,"byte_end":12793,"line_start":403,"line_end":403,"column_start":21,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1748},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12884,"byte_end":12888,"line_start":409,"line_end":409,"column_start":25,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1722},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":12989,"byte_end":12994,"line_start":415,"line_end":415,"column_start":34,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1748},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":19545,"byte_end":19552,"line_start":24,"line_end":24,"column_start":29,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1778},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":20602,"byte_end":20614,"line_start":60,"line_end":60,"column_start":21,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":21215,"byte_end":21227,"line_start":75,"line_end":75,"column_start":6,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27426,"byte_end":27440,"line_start":248,"line_end":248,"column_start":21,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1795},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/func.rs","byte_start":27883,"byte_end":27897,"line_start":268,"line_end":268,"column_start":13,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":31575,"byte_end":31584,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1812},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/global.rs","byte_start":32353,"byte_end":32367,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34270,"byte_end":34281,"line_start":13,"line_end":13,"column_start":39,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1824},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34408,"byte_end":34419,"line_start":19,"line_end":19,"column_start":36,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1824},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":34501,"byte_end":34512,"line_start":25,"line_end":25,"column_start":10,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37445,"byte_end":37452,"line_start":127,"line_end":127,"column_start":45,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":8898},"to":{"krate":0,"index":229}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37468,"byte_end":37473,"line_start":127,"line_end":127,"column_start":68,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":8891},"to":{"krate":0,"index":229}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":37476,"byte_end":37488,"line_start":127,"line_end":127,"column_start":76,"column_end":88},"kind":"SuperTrait","from":{"krate":24,"index":29},"to":{"krate":0,"index":229}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/host.rs","byte_start":40287,"byte_end":40299,"line_start":222,"line_end":222,"column_start":20,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":232},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45007,"byte_end":45021,"line_start":105,"line_end":105,"column_start":22,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2827}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45093,"byte_end":45107,"line_start":111,"line_end":111,"column_start":10,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":45958,"byte_end":45972,"line_start":145,"line_end":145,"column_start":29,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":281},"to":{"krate":0,"index":276}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/imports.rs","byte_start":49349,"byte_end":49358,"line_start":256,"line_end":256,"column_start":31,"column_end":40},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2716},"to":{"krate":0,"index":305}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/isa.rs","byte_start":54007,"byte_end":54011,"line_start":84,"line_end":84,"column_start":6,"column_end":10},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/isa.rs","byte_start":55013,"byte_end":55022,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/isa.rs","byte_start":62353,"byte_end":62365,"line_start":545,"line_end":545,"column_start":6,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/isa.rs","byte_start":63726,"byte_end":63741,"line_start":588,"line_end":588,"column_start":10,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/isa.rs","byte_start":63851,"byte_end":63866,"line_start":595,"line_end":595,"column_start":23,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":339},"to":{"krate":2,"index":7314}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mmap_bytebuf.rs","byte_start":102063,"byte_end":102067,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mmap_bytebuf.rs","byte_start":105673,"byte_end":105677,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":417},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mmap_bytebuf.rs","byte_start":106418,"byte_end":106425,"line_start":128,"line_end":128,"column_start":6,"column_end":13},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":77097,"byte_end":77106,"line_start":39,"line_end":39,"column_start":29,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2709},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":78167,"byte_end":78181,"line_start":69,"line_end":69,"column_start":21,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":446},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":78577,"byte_end":78590,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":78902,"byte_end":78916,"line_start":98,"line_end":98,"column_start":6,"column_end":20},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":93719,"byte_end":93725,"line_start":543,"line_end":543,"column_start":34,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":2746}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/memory/mod.rs","byte_start":94438,"byte_end":94444,"line_start":564,"line_end":564,"column_start":34,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":512},"to":{"krate":2,"index":2749}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":109767,"byte_end":109776,"line_start":39,"line_end":39,"column_start":29,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2716},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110532,"byte_end":110541,"line_start":69,"line_end":69,"column_start":16,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":646},"to":{"krate":2,"index":2470}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":110943,"byte_end":110952,"line_start":80,"line_end":80,"column_start":21,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":646},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":111337,"byte_end":111346,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":113764,"byte_end":113778,"line_start":164,"line_end":164,"column_start":6,"column_end":20},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/module.rs","byte_start":135368,"byte_end":135387,"line_start":701,"line_end":701,"column_start":10,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/nan_preserving_float.rs","byte_start":144892,"byte_end":144895,"line_start":122,"line_end":122,"column_start":20,"column_end":23},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2757},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/nan_preserving_float.rs","byte_start":145083,"byte_end":145086,"line_start":134,"line_end":134,"column_start":20,"column_end":23},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2808},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/prepare/compile.rs","byte_start":153808,"byte_end":153822,"line_start":37,"line_end":37,"column_start":6,"column_end":20},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/prepare/compile.rs","byte_start":154901,"byte_end":154909,"line_start":68,"line_end":68,"column_start":24,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":848},"to":{"krate":25,"index":285}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/prepare/compile.rs","byte_start":155737,"byte_end":155745,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/prepare/compile.rs","byte_start":195233,"byte_end":195237,"line_start":1146,"line_end":1146,"column_start":6,"column_end":10},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/prepare/mod.rs","byte_start":147483,"byte_end":147498,"line_start":26,"line_end":26,"column_start":20,"column_end":35},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":893},"to":{"krate":25,"index":279}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":200941,"byte_end":200961,"line_start":42,"line_end":42,"column_start":6,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":202504,"byte_end":202524,"line_start":103,"line_end":103,"column_start":21,"column_end":41},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2961},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":202803,"byte_end":202823,"line_start":115,"line_end":115,"column_start":29,"column_end":49},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2961},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":203990,"byte_end":204006,"line_start":150,"line_end":150,"column_start":6,"column_end":22},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":204451,"byte_end":204462,"line_start":172,"line_end":172,"column_start":6,"column_end":17},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":247317,"byte_end":247332,"line_start":1263,"line_end":1263,"column_start":6,"column_end":21},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":248600,"byte_end":248615,"line_start":1307,"line_end":1307,"column_start":21,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":249906,"byte_end":249916,"line_start":1358,"line_end":1358,"column_start":6,"column_end":16},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":252074,"byte_end":252083,"line_start":1455,"line_end":1455,"column_start":6,"column_end":15},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":252667,"byte_end":252680,"line_start":1481,"line_end":1481,"column_start":6,"column_end":19},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/runner.rs","byte_start":254917,"byte_end":254930,"line_start":1550,"line_end":1550,"column_start":18,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1270},"to":{"krate":2,"index":2827}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":255527,"byte_end":255535,"line_start":19,"line_end":19,"column_start":29,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3043},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256360,"byte_end":256373,"line_start":46,"line_end":46,"column_start":21,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":8891}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/table.rs","byte_start":256616,"byte_end":256629,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":260562,"byte_end":260571,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":262384,"byte_end":262393,"line_start":90,"line_end":90,"column_start":6,"column_end":15},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":263260,"byte_end":263276,"line_start":121,"line_end":121,"column_start":6,"column_end":22},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264088,"byte_end":264103,"line_start":153,"line_end":153,"column_start":6,"column_end":21},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/types.rs","byte_start":264846,"byte_end":264862,"line_start":183,"line_end":183,"column_start":6,"column_end":22},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":268655,"byte_end":268668,"line_start":102,"line_end":102,"column_start":23,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":1437},"to":{"krate":0,"index":1443}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":269258,"byte_end":269271,"line_start":118,"line_end":118,"column_start":21,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1437},"to":{"krate":0,"index":1451}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":270140,"byte_end":270152,"line_start":141,"line_end":141,"column_start":6,"column_end":18},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271575,"byte_end":271587,"line_start":184,"line_end":184,"column_start":19,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271687,"byte_end":271699,"line_start":190,"line_end":190,"column_start":20,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271800,"byte_end":271812,"line_start":196,"line_end":196,"column_start":20,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":271906,"byte_end":271918,"line_start":202,"line_end":202,"column_start":20,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272011,"byte_end":272023,"line_start":208,"line_end":208,"column_start":19,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272123,"byte_end":272135,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272236,"byte_end":272248,"line_start":220,"line_end":220,"column_start":20,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272359,"byte_end":272371,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272482,"byte_end":272494,"line_start":232,"line_end":232,"column_start":20,"column_end":32},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":272588,"byte_end":272600,"line_start":238,"line_end":238,"column_start":20,"column_end":32},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":276408,"byte_end":276411,"line_start":362,"line_end":362,"column_start":24,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2808},"to":{"krate":0,"index":1421}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":280149,"byte_end":280152,"line_start":459,"line_end":459,"column_start":26,"column_end":29},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2757},"to":{"krate":0,"index":1428}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":286722,"byte_end":286725,"line_start":720,"line_end":720,"column_start":30,"column_end":33},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2757},"to":{"krate":0,"index":1434}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/value.rs","byte_start":287028,"byte_end":287031,"line_start":730,"line_end":730,"column_start":30,"column_end":33},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2808},"to":{"krate":0,"index":1434}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.8.0/src/lib.rs","byte_start":14388,"byte_end":14394,"line_start":461,"line_end":461,"column_start":6,"column_end":12},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1711},"to":{"krate":4294967295,"index":4294967295}}]}