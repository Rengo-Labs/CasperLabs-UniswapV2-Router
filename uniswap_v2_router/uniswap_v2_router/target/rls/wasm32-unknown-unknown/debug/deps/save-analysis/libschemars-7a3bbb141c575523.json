{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3","program":"/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","schemars","--edition=2018","/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"indexmap\"","--cfg","feature=\"preserve_order\"","--cfg","feature=\"schemars_derive\"","-C","metadata=7a3bbb141c575523","-C","extra-filename=-7a3bbb141c575523","--out-dir","/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/wasm32-unknown-unknown/debug/deps","--target","wasm32-unknown-unknown","-L","dependency=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/wasm32-unknown-unknown/debug/deps","-L","dependency=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/debug/deps","--extern","dyn_clone=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/wasm32-unknown-unknown/debug/deps/libdyn_clone-0b02621a012cf3e0.rmeta","--extern","indexmap=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/wasm32-unknown-unknown/debug/deps/libindexmap-15614dd751358f4a.rmeta","--extern","schemars_derive=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/debug/deps/libschemars_derive-efd89792291f49e9.so","--extern","serde=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/wasm32-unknown-unknown/debug/deps/libserde-7f6e75c807244ec3.rmeta","--extern","serde_json=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/wasm32-unknown-unknown/debug/deps/libserde_json-64f29498ab3161b5.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu"],"output":"/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/wasm32-unknown-unknown/debug/deps/libschemars-7a3bbb141c575523.rmeta"},"prelude":{"crate_id":{"name":"schemars","disambiguator":[7402434191195939307,16836982884588064695]},"crate_root":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src","external_crates":[{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11865821141934753578,5519277996181205567]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10148827511062627880,13930310743981648994]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9594479946368871028,14826268177814129219]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1826318154200867672,13445872508185864674]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9780591927076023331,10878654213149572839]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7886481380398478283,13937001059064309516]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9963837671840799044,3901380288075133405]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12786505151488604328,5222456687545406474]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8562690528049212392,6230403454530380583]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16512717484854217878,12586115314642539452]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16012675576530202080,5269810570551980679]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[8342199551088758819,7923433523174326448]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":13,"id":{"name":"dlmalloc","disambiguator":[13191343612433092663,14932973469399816907]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","num":14,"id":{"name":"schemars_derive","disambiguator":[8725869887247157266,18090023362100678166]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","num":15,"id":{"name":"serde_json","disambiguator":[12745558844145250874,5786885187726825304]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","num":16,"id":{"name":"serde","disambiguator":[1033680994188618747,13664837215448501100]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","num":17,"id":{"name":"serde_derive","disambiguator":[561477063871289625,17129534741809339090]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","num":18,"id":{"name":"itoa","disambiguator":[3549029036040945093,15542211519924048403]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","num":19,"id":{"name":"ryu","disambiguator":[17410112157333166258,9241461069548403178]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/indexmap.rs","num":20,"id":{"name":"indexmap","disambiguator":[9160347165578555034,7290395139833407351]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/indexmap.rs","num":21,"id":{"name":"hashbrown","disambiguator":[17245536294877302459,17311359482507084542]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","num":22,"id":{"name":"dyn_clone","disambiguator":[9280103329903096637,8802298358160697933]}}],"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":0,"byte_end":12655,"line_start":1,"line_end":411,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9369,"byte_end":9370,"line_start":311,"line_end":311,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"JsonSchema","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9447,"byte_end":9457,"line_start":315,"line_end":315,"column_start":9,"column_end":19},"alias_span":null,"name":"_serde_json","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":0,"byte_end":12655,"line_start":1,"line_end":411,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":12},{"krate":0,"index":47},{"krate":0,"index":297},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":515},{"krate":0,"index":561},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613}],"decl_id":null,"docs":"Generate JSON Schema documents from Rust code","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":0,"byte_end":23,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"*\nGenerate JSON Schema documents from Rust code\n\n## Basic Usage\n\nIf you don't really care about the specifics, the easiest way to generate a JSON schema for your types is to `#[derive(JsonSchema)]` and use the `schema_for!` macro. All fields of the type must also implement `JsonSchema` - Schemars implements this for many standard library types.\n\n```rust\nuse schemars::{schema_for, JsonSchema};\n\n#[derive(JsonSchema)]\npub struct MyStruct {\n    pub my_int: i32,\n    pub my_bool: bool,\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(JsonSchema)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for!(MyStruct);\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"type\": \"object\",\n    \"required\": [\n        \"my_bool\",\n        \"my_int\"\n    ],\n    \"properties\": {\n        \"my_bool\": {\n            \"type\": \"boolean\"\n        },\n        \"my_int\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        },\n        \"my_nullable_enum\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/MyEnum\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        }\n    },\n    \"definitions\": {\n        \"MyEnum\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"StringNewType\"\n                    ],\n                    \"properties\": {\n                        \"StringNewType\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"additionalProperties\": false\n                },\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"StructVariant\"\n                    ],\n                    \"properties\": {\n                        \"StructVariant\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                                \"floats\"\n                            ],\n                            \"properties\": {\n                                \"floats\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"number\",\n                                        \"format\": \"float\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"additionalProperties\": false\n                }\n            ]\n        }\n    }\n}\n```\n</details>\n\n### Serde Compatibility\n\nOne of the main aims of this library is compatibility with [Serde](https://github.com/serde-rs/serde). Any generated schema *should* match how [serde_json](https://github.com/serde-rs/json) would serialize/deserialize to/from JSON. To support this, Schemars will check for any `#[serde(...)]` attributes on types that derive `JsonSchema`, and adjust the generated schema accordingly.\n\n```rust\nuse schemars::{schema_for, JsonSchema};\nuse serde::{Deserialize, Serialize};\n\n#[derive(Deserialize, Serialize, JsonSchema)]\n#[serde(rename_all = \"camelCase\", deny_unknown_fields)]\npub struct MyStruct {\n    #[serde(rename = \"myNumber\")]\n    pub my_int: i32,\n    pub my_bool: bool,\n    #[serde(default)]\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(Deserialize, Serialize, JsonSchema)]\n#[serde(untagged)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for!(MyStruct);\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"type\": \"object\",\n    \"required\": [\n        \"myBool\",\n        \"myNumber\"\n    ],\n    \"properties\": {\n        \"myBool\": {\n            \"type\": \"boolean\"\n        },\n        \"myNullableEnum\": {\n            \"default\": null,\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/MyEnum\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        },\n        \"myNumber\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        }\n    },\n    \"additionalProperties\": false,\n    \"definitions\": {\n        \"MyEnum\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"floats\"\n                    ],\n                    \"properties\": {\n                        \"floats\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"number\",\n                                \"format\": \"float\"\n                            }\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}\n```\n</details>\n\n`#[serde(...)]` attributes can be overriden using `#[schemars(...)]` attributes, which behave identically (e.g. `#[schemars(rename_all = \"camelCase\")]`). You may find this useful if you want to change the generated schema without affecting Serde's behaviour, or if you're just not using Serde.\n\n### Schema from Example Value\n\nIf you want a schema for a type that can't/doesn't implement `JsonSchema`, but does implement `serde::Serialize`, then you can generate a JSON schema from a value of that type. However, this schema will generally be less precise than if the type implemented `JsonSchema` - particularly when it involves enums, since schemars will not make any assumptions about the structure of an enum based on a single variant.\n\n```rust\nuse schemars::schema_for_value;\nuse serde::Serialize;\n\n#[derive(Serialize)]\npub struct MyStruct {\n    pub my_int: i32,\n    pub my_bool: bool,\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(Serialize)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for_value!(MyStruct {\n    my_int: 123,\n    my_bool: true,\n    my_nullable_enum: Some(MyEnum::StringNewType(\"foo\".to_string()))\n});\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"examples\": [\n        {\n            \"my_bool\": true,\n            \"my_int\": 123,\n            \"my_nullable_enum\": {\n                \"StringNewType\": \"foo\"\n            }\n        }\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"my_bool\": {\n            \"type\": \"boolean\"\n        },\n        \"my_int\": {\n            \"type\": \"integer\"\n        },\n        \"my_nullable_enum\": true\n    }\n}\n```\n</details>\n\n## Feature Flags\n- `derive` (enabled by default) - provides `#[derive(JsonSchema)]` macro\n- `impl_json_schema` - implements `JsonSchema` for Schemars types themselves\n- `preserve_order` - keep the order of struct fields in `Schema` and `SchemaObject`\n\n## Optional Dependencies\nSchemars can implement `JsonSchema` on types from several popular crates, enabled via optional dependencies (dependency versions are shown in brackets):\n- [`chrono`](https://crates.io/crates/chrono) (^0.4)\n- [`indexmap`](https://crates.io/crates/indexmap) (^1.2)\n- [`either`](https://crates.io/crates/either) (^1.3)\n- [`uuid`](https://crates.io/crates/uuid) (^0.8)\n- [`smallvec`](https://crates.io/crates/smallvec) (^1.0)\n- [`arrayvec`](https://crates.io/crates/arrayvec) (^0.5)\n- [`url`](https://crates.io/crates/url) (^2.0)\n- [`bytes`](https://crates.io/crates/bytes) (^1.0)\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":24,"byte_end":7980,"line_start":2,"line_end":272,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":3},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8411,"byte_end":8414,"line_start":282,"line_end":282,"column_start":10,"column_end":13},"name":"Map","qualname":"::Map","value":"indexmap::IndexMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"preserve_order\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8367,"byte_end":8401,"line_start":281,"line_end":281,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":6},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8643,"byte_end":8646,"line_start":287,"line_end":287,"column_start":10,"column_end":13},"name":"Set","qualname":"::Set","value":"std::collections::BTreeSet<T>","parent":null,"children":[],"decl_id":null,"docs":" The set type used by schemars types.","sig":null,"attributes":[{"value":"/ The set type used by schemars types.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8449,"byte_end":8489,"line_start":283,"line_end":283,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8490,"byte_end":8493,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ Currently a `BTreeSet`, but this may change to a different implementation","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8494,"byte_end":8571,"line_start":285,"line_end":285,"column_start":1,"column_end":78}},{"value":"/ with a similar interface in a future version of schemars.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":8572,"byte_end":8633,"line_start":286,"line_end":286,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9072,"byte_end":9080,"line_start":296,"line_end":296,"column_start":10,"column_end":18},"name":"MapEntry","qualname":"::MapEntry","value":"indexmap::map::Entry","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"preserve_order\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9028,"byte_end":9062,"line_start":295,"line_end":295,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13291,"byte_end":13298,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"flatten","qualname":"<Schema>::flatten","value":"pub fn flatten(Self, Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" This function is only public for use by schemars_derive.","sig":null,"attributes":[{"value":"/ This function is only public for use by schemars_derive.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13132,"byte_end":13192,"line_start":5,"line_end":5,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13197,"byte_end":13200,"line_start":6,"line_end":6,"column_start":5,"column_end":8}},{"value":"/ It should not be considered part of the public API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13205,"byte_end":13260,"line_start":7,"line_end":7,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":427},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gen","qualname":"::gen","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":1408},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":1420},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":510},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1437},{"krate":0,"index":512}],"decl_id":null,"docs":"JSON Schema generator and settings.","sig":null,"attributes":[{"value":"*\nJSON Schema generator and settings.\n\nThis module is useful if you want more control over how the schema generated than the [`schema_for!`] macro gives you.\nThere are two main types in this module:two main types in this module:\n* [`SchemaSettings`], which defines what JSON Schema features should be used when generating schemas (for example, how `Option`s should be represented).\n* [`SchemaGenerator`], which manages the generation of a schema document.\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":63985,"byte_end":64445,"line_start":1,"line_end":8,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":1408},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65092,"byte_end":65106,"line_start":22,"line_end":22,"column_start":12,"column_end":26},"name":"SchemaSettings","qualname":"::gen::SchemaSettings","value":"SchemaSettings { option_nullable, option_add_null_type, definitions_path, meta_schema, visitors, inline_subschemas }","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415}],"decl_id":null,"docs":" Settings to customize how Schemas are generated.","sig":null,"attributes":[{"value":"/ Settings to customize how Schemas are generated.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":64639,"byte_end":64691,"line_start":17,"line_end":17,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":64692,"byte_end":64695,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The default settings currently conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7), but this is liable to change in a future version of Schemars if support for other JSON Schema versions is added.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":64696,"byte_end":64935,"line_start":19,"line_end":19,"column_start":1,"column_end":240}},{"value":"/ If you require your generated schemas to conform to draft 7, consider using the [`draft07`](#method.draft07) method.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":64936,"byte_end":65056,"line_start":20,"line_end":20,"column_start":1,"column_end":121}}]},{"kind":"Field","id":{"krate":0,"index":1409},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65341,"byte_end":65356,"line_start":28,"line_end":28,"column_start":9,"column_end":24},"name":"option_nullable","qualname":"::gen::SchemaSettings::option_nullable","value":"bool","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will include a `nullable` property.","sig":null,"attributes":[{"value":"/ If `true`, schemas for [`Option<T>`](Option) will include a `nullable` property.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65113,"byte_end":65197,"line_start":23,"line_end":23,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65202,"byte_end":65205,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This is not part of the JSON Schema spec, but is used in Swagger/OpenAPI schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65210,"byte_end":65295,"line_start":25,"line_end":25,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65300,"byte_end":65303,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65308,"byte_end":65332,"line_start":27,"line_end":27,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1410},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65565,"byte_end":65585,"line_start":32,"line_end":32,"column_start":9,"column_end":29},"name":"option_add_null_type","qualname":"::gen::SchemaSettings::option_add_null_type","value":"bool","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will have `null` added to their [`type`](../schema/struct.SchemaObject.html#structfield.instance_type).","sig":null,"attributes":[{"value":"/ If `true`, schemas for [`Option<T>`](Option) will have `null` added to their [`type`](../schema/struct.SchemaObject.html#structfield.instance_type).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65368,"byte_end":65520,"line_start":29,"line_end":29,"column_start":5,"column_end":157}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65525,"byte_end":65528,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65533,"byte_end":65556,"line_start":31,"line_end":31,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1411},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65759,"byte_end":65775,"line_start":36,"line_end":36,"column_start":9,"column_end":25},"name":"definitions_path","qualname":"::gen::SchemaSettings::definitions_path","value":"std::string::String","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":" A JSON pointer to the expected location of referenceable subschemas within the resulting root schema.","sig":null,"attributes":[{"value":"/ A JSON pointer to the expected location of referenceable subschemas within the resulting root schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65597,"byte_end":65702,"line_start":33,"line_end":33,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65707,"byte_end":65710,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Defaults to `\"#/definitions/\"`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65715,"byte_end":65750,"line_start":35,"line_end":35,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1412},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65952,"byte_end":65963,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::gen::SchemaSettings::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":" The URI of the meta-schema describing the structure of the generated schemas.","sig":null,"attributes":[{"value":"/ The URI of the meta-schema describing the structure of the generated schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65789,"byte_end":65870,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65875,"byte_end":65878,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Defaults to `\"http://json-schema.org/draft-07/schema#\"`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65883,"byte_end":65943,"line_start":39,"line_end":39,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1413},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66064,"byte_end":66072,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"name":"visitors","qualname":"::gen::SchemaSettings::visitors","value":"std::vec::Vec<std::boxed::Box<(dyn gen::GenVisitor + 'static)>>","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":" A list of visitors that get applied to all generated root schemas.\n","sig":null,"attributes":[{"value":"/ A list of visitors that get applied to all generated root schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":65985,"byte_end":66055,"line_start":41,"line_end":41,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1414},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66291,"byte_end":66308,"line_start":48,"line_end":48,"column_start":9,"column_end":26},"name":"inline_subschemas","qualname":"::gen::SchemaSettings::inline_subschemas","value":"bool","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":" Inline all subschemas instead of using references.","sig":null,"attributes":[{"value":"/ Inline all subschemas instead of using references.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66104,"byte_end":66158,"line_start":43,"line_end":43,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66163,"byte_end":66166,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Some references may still be generated in schemas for recursive types.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66171,"byte_end":66245,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66250,"byte_end":66253,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66258,"byte_end":66282,"line_start":47,"line_end":47,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66613,"byte_end":66620,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"draft07","qualname":"<SchemaSettings>::draft07","value":"pub fn draft07() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66476,"byte_end":66601,"line_start":59,"line_end":59,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67192,"byte_end":67204,"line_start":73,"line_end":73,"column_start":12,"column_end":24},"name":"draft2019_09","qualname":"<SchemaSettings>::draft2019_09","value":"pub fn draft2019_09() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema 2019-09](https://json-schema.org/specification-links.html#2019-09-formerly-known-as-draft-8).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [JSON Schema 2019-09](https://json-schema.org/specification-links.html#2019-09-formerly-known-as-draft-8).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67029,"byte_end":67180,"line_start":72,"line_end":72,"column_start":5,"column_end":156}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67759,"byte_end":67767,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"openapi3","qualname":"<SchemaSettings>::openapi3","value":"pub fn openapi3() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":67599,"byte_end":67747,"line_start":85,"line_end":85,"column_start":5,"column_end":153}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68921,"byte_end":68925,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"with","qualname":"<SchemaSettings>::with","value":"pub fn with<impl FnOnce(&mut Self): FnOnce(&mut Self) ->\n            ()>(Self, impl FnOnce(&mut Self)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modifies the `SchemaSettings` by calling the given function.","sig":null,"attributes":[{"value":"/ Modifies the `SchemaSettings` by calling the given function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68526,"byte_end":68590,"line_start":109,"line_end":109,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68595,"byte_end":68598,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68603,"byte_end":68616,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68621,"byte_end":68628,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use schemars::gen::{SchemaGenerator, SchemaSettings};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68633,"byte_end":68690,"line_start":113,"line_end":113,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68695,"byte_end":68698,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let settings = SchemaSettings::default().with(|s| {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68703,"byte_end":68758,"line_start":115,"line_end":115,"column_start":5,"column_end":60}},{"value":"/     s.option_nullable = true;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68763,"byte_end":68796,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/     s.option_add_null_type = false;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68801,"byte_end":68840,"line_start":117,"line_end":117,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68845,"byte_end":68852,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ let gen = settings.into_generator();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68857,"byte_end":68897,"line_start":119,"line_end":119,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":68902,"byte_end":68909,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69162,"byte_end":69174,"line_start":127,"line_end":127,"column_start":12,"column_end":24},"name":"with_visitor","qualname":"<SchemaSettings>::with_visitor","value":"pub fn with_visitor<impl Visitor + Debug + Clone + 'static: Visitor + Debug +\n                    Clone +\n                    'static>(Self, impl Visitor + Debug + Clone + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends the given visitor to the list of [visitors](SchemaSettings::visitors) for these `SchemaSettings`.\n","sig":null,"attributes":[{"value":"/ Appends the given visitor to the list of [visitors](SchemaSettings::visitors) for these `SchemaSettings`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69041,"byte_end":69150,"line_start":126,"line_end":126,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69386,"byte_end":69400,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"into_generator","qualname":"<SchemaSettings>::into_generator","value":"pub fn into_generator(Self) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`SchemaGenerator`] using these settings.\n","sig":null,"attributes":[{"value":"/ Creates a new [`SchemaGenerator`] using these settings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69315,"byte_end":69374,"line_start":132,"line_end":132,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1420},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69825,"byte_end":69840,"line_start":153,"line_end":153,"column_start":12,"column_end":27},"name":"SchemaGenerator","qualname":"::gen::SchemaGenerator","value":"SchemaGenerator {  }","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"decl_id":null,"docs":" The main type used to generate JSON Schemas.","sig":null,"attributes":[{"value":"/ The main type used to generate JSON Schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69472,"byte_end":69520,"line_start":138,"line_end":138,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69521,"byte_end":69524,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69525,"byte_end":69538,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69539,"byte_end":69546,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ use schemars::{JsonSchema, gen::SchemaGenerator};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69547,"byte_end":69600,"line_start":142,"line_end":142,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69601,"byte_end":69604,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69605,"byte_end":69630,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69631,"byte_end":69652,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/     foo: i32,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69653,"byte_end":69670,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69671,"byte_end":69676,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69677,"byte_end":69680,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ let gen = SchemaGenerator::default();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69681,"byte_end":69722,"line_start":149,"line_end":149,"column_start":1,"column_end":42}},{"value":"/ let schema = gen.into_root_schema_for::<MyStruct>();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69723,"byte_end":69779,"line_start":150,"line_end":150,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69780,"byte_end":69787,"line_start":151,"line_end":151,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70439,"byte_end":70442,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<SchemaGenerator>::new","value":"pub fn new(SchemaSettings) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SchemaGenerator` using the given settings.\n","sig":null,"attributes":[{"value":"/ Creates a new `SchemaGenerator` using the given settings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70366,"byte_end":70427,"line_start":176,"line_end":176,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70928,"byte_end":70936,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"settings","qualname":"<SchemaGenerator>::settings","value":"pub fn settings(&Self) -> &SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`SchemaSettings`] being used by this `SchemaGenerator`.","sig":null,"attributes":[{"value":"/ Borrows the [`SchemaSettings`] being used by this `SchemaGenerator`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70592,"byte_end":70664,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70669,"byte_end":70672,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70677,"byte_end":70690,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70695,"byte_end":70702,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use schemars::gen::SchemaGenerator;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70707,"byte_end":70746,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70751,"byte_end":70754,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ let gen = SchemaGenerator::default();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70759,"byte_end":70800,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/ let settings = gen.settings();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70805,"byte_end":70839,"line_start":191,"line_end":191,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70844,"byte_end":70847,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(settings.option_add_null_type, true);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70852,"byte_end":70904,"line_start":193,"line_end":193,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70909,"byte_end":70916,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71066,"byte_end":71081,"line_start":200,"line_end":200,"column_start":12,"column_end":27},"name":"make_extensible","qualname":"<SchemaGenerator>::make_extensible","value":"pub fn make_extensible(&Self, &mut SchemaObject)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"This method no longer has any effect.\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70999,"byte_end":71054,"line_start":199,"line_end":199,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71187,"byte_end":71201,"line_start":203,"line_end":203,"column_start":12,"column_end":26},"name":"schema_for_any","qualname":"<SchemaGenerator>::schema_for_any","value":"pub fn schema_for_any(&Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Use `Schema::Bool(true)` instead\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71125,"byte_end":71175,"line_start":202,"line_end":202,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71322,"byte_end":71337,"line_start":208,"line_end":208,"column_start":12,"column_end":27},"name":"schema_for_none","qualname":"<SchemaGenerator>::schema_for_none","value":"pub fn schema_for_none(&Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Use `Schema::Bool(false)` instead\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71259,"byte_end":71310,"line_start":207,"line_end":207,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71991,"byte_end":72004,"line_start":219,"line_end":219,"column_start":12,"column_end":25},"name":"subschema_for","qualname":"<SchemaGenerator>::subschema_for","value":"pub fn subschema_for<T: ?Sized + JsonSchema>(&mut Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" Generates a JSON Schema for the type `T`, and returns either the schema itself or a `$ref` schema referencing `T`'s schema.","sig":null,"attributes":[{"value":"/ Generates a JSON Schema for the type `T`, and returns either the schema itself or a `$ref` schema referencing `T`'s schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71396,"byte_end":71523,"line_start":212,"line_end":212,"column_start":5,"column_end":132}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71528,"byte_end":71531,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If `T` is [referenceable](JsonSchema::is_referenceable), this will add `T`'s schema to this generator's definitions, and","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71536,"byte_end":71660,"line_start":214,"line_end":214,"column_start":5,"column_end":129}},{"value":"/ return a `$ref` schema referencing that schema. Otherwise, this method behaves identically to [`JsonSchema::json_schema`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71665,"byte_end":71791,"line_start":215,"line_end":215,"column_start":5,"column_end":131}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71796,"byte_end":71799,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71804,"byte_end":71915,"line_start":217,"line_end":217,"column_start":5,"column_end":116}},{"value":"/ add them to the `SchemaGenerator`'s schema definitions.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":71920,"byte_end":71979,"line_start":218,"line_end":218,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73252,"byte_end":73263,"line_start":249,"line_end":249,"column_start":12,"column_end":23},"name":"definitions","qualname":"<SchemaGenerator>::definitions","value":"pub fn definitions(&Self) -> &Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[{"value":"/ Borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":72980,"byte_end":73093,"line_start":245,"line_end":245,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73098,"byte_end":73101,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73106,"byte_end":73220,"line_start":247,"line_end":247,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73225,"byte_end":73240,"line_start":248,"line_end":248,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73614,"byte_end":73629,"line_start":257,"line_end":257,"column_start":12,"column_end":27},"name":"definitions_mut","qualname":"<SchemaGenerator>::definitions_mut","value":"pub fn definitions_mut(&mut Self) -> &mut Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[{"value":"/ Mutably borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73334,"byte_end":73455,"line_start":253,"line_end":253,"column_start":5,"column_end":126}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73460,"byte_end":73463,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73468,"byte_end":73582,"line_start":255,"line_end":255,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73587,"byte_end":73602,"line_start":256,"line_end":256,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74027,"byte_end":74043,"line_start":266,"line_end":266,"column_start":12,"column_end":28},"name":"take_definitions","qualname":"<SchemaGenerator>::take_definitions","value":"pub fn take_definitions(&mut Self) -> Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated,\n leaving an empty map in its place.","sig":null,"attributes":[{"value":"/ Returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73712,"byte_end":73825,"line_start":261,"line_end":261,"column_start":5,"column_end":118}},{"value":"/ leaving an empty map in its place.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73830,"byte_end":73868,"line_start":262,"line_end":262,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73873,"byte_end":73876,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":73881,"byte_end":73995,"line_start":264,"line_end":264,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74000,"byte_end":74015,"line_start":265,"line_end":265,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74275,"byte_end":74287,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"visitors_mut","qualname":"<SchemaGenerator>::visitors_mut","value":"pub fn visitors_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [visitors](SchemaSettings::visitors) being used by this `SchemaGenerator`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the [visitors](SchemaSettings::visitors) being used by this `SchemaGenerator`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74156,"byte_end":74263,"line_start":270,"line_end":270,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74798,"byte_end":74813,"line_start":280,"line_end":280,"column_start":12,"column_end":27},"name":"root_schema_for","qualname":"<SchemaGenerator>::root_schema_for","value":"pub fn root_schema_for<T: ?Sized + JsonSchema>(&mut Self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Generates a root JSON Schema for the type `T`.","sig":null,"attributes":[{"value":"/ Generates a root JSON Schema for the type `T`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74419,"byte_end":74469,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74474,"byte_end":74477,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74482,"byte_end":74593,"line_start":277,"line_end":277,"column_start":5,"column_end":116}},{"value":"/ add them to the `SchemaGenerator`'s schema definitions and include them in the returned `SchemaObject`'s","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74598,"byte_end":74706,"line_start":278,"line_end":278,"column_start":5,"column_end":113}},{"value":"/ [`definitions`](../schema/struct.Metadata.html#structfield.definitions)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":74711,"byte_end":74786,"line_start":279,"line_end":279,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75681,"byte_end":75701,"line_start":301,"line_end":301,"column_start":12,"column_end":32},"name":"into_root_schema_for","qualname":"<SchemaGenerator>::into_root_schema_for","value":"pub fn into_root_schema_for<T: ?Sized + JsonSchema>(Self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and generates a root JSON Schema for the type `T`.","sig":null,"attributes":[{"value":"/ Consumes `self` and generates a root JSON Schema for the type `T`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75349,"byte_end":75419,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75424,"byte_end":75427,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75432,"byte_end":75543,"line_start":299,"line_end":299,"column_start":5,"column_end":116}},{"value":"/ include them in the returned `SchemaObject`'s [`definitions`](../schema/struct.Metadata.html#structfield.definitions)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":75548,"byte_end":75669,"line_start":300,"line_end":300,"column_start":5,"column_end":126}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":76554,"byte_end":76575,"line_start":322,"line_end":322,"column_start":12,"column_end":33},"name":"root_schema_for_value","qualname":"<SchemaGenerator>::root_schema_for_value","value":"pub fn root_schema_for_value<T: ?Sized + Serialize>(&mut Self, &T)\n-> Result<RootSchema, serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":" Generates a root JSON Schema for the given example value.","sig":null,"attributes":[{"value":"/ Generates a root JSON Schema for the given example value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":76220,"byte_end":76281,"line_start":318,"line_end":318,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":76286,"byte_end":76289,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ If the value implements [`JsonSchema`](crate::JsonSchema), then prefer using the [`root_schema_for()`](Self::root_schema_for())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":76294,"byte_end":76425,"line_start":320,"line_end":320,"column_start":5,"column_end":136}},{"value":"/ function which will generally produce a more precise schema, particularly when the value contains any enums.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":76430,"byte_end":76542,"line_start":321,"line_end":321,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":77685,"byte_end":77711,"line_start":354,"line_end":354,"column_start":12,"column_end":38},"name":"into_root_schema_for_value","qualname":"<SchemaGenerator>::into_root_schema_for_value","value":"pub fn into_root_schema_for_value<T: ?Sized + Serialize>(Self, &T)\n-> Result<RootSchema, serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and generates a root JSON Schema for the given example value.","sig":null,"attributes":[{"value":"/ Consumes `self` and generates a root JSON Schema for the given example value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":77319,"byte_end":77400,"line_start":350,"line_end":350,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":77405,"byte_end":77408,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If the value  implements [`JsonSchema`](crate::JsonSchema), then prefer using the [`into_root_schema_for()!`](Self::into_root_schema_for())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":77413,"byte_end":77556,"line_start":352,"line_end":352,"column_start":5,"column_end":148}},{"value":"/ function which will generally produce a more precise schema, particularly when the value contains any enums.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":77561,"byte_end":77673,"line_start":353,"line_end":353,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79382,"byte_end":79393,"line_start":407,"line_end":407,"column_start":12,"column_end":23},"name":"dereference","qualname":"<SchemaGenerator>::dereference","value":"pub fn dereference<'a>(&'a Self, &Schema) -> Option<&'a Schema>","parent":null,"children":[],"decl_id":null,"docs":" Attemps to find the schema that the given `schema` is referencing.","sig":null,"attributes":[{"value":"/ Attemps to find the schema that the given `schema` is referencing.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78443,"byte_end":78513,"line_start":382,"line_end":382,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78518,"byte_end":78521,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ If the given `schema` has a [`$ref`](../schema/struct.SchemaObject.html#structfield.reference) property which refers","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78526,"byte_end":78646,"line_start":384,"line_end":384,"column_start":5,"column_end":125}},{"value":"/ to another schema in `self`'s schema definitions, the referenced schema will be returned. Otherwise, returns `None`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78651,"byte_end":78771,"line_start":385,"line_end":385,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78776,"byte_end":78779,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78784,"byte_end":78797,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78802,"byte_end":78809,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use schemars::{JsonSchema, gen::SchemaGenerator};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78814,"byte_end":78867,"line_start":389,"line_end":389,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78872,"byte_end":78875,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78880,"byte_end":78905,"line_start":391,"line_end":391,"column_start":5,"column_end":30}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78910,"byte_end":78931,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/     foo: i32,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78936,"byte_end":78953,"line_start":393,"line_end":393,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78958,"byte_end":78963,"line_start":394,"line_end":394,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78968,"byte_end":78971,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let mut gen = SchemaGenerator::default();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":78976,"byte_end":79021,"line_start":396,"line_end":396,"column_start":5,"column_end":50}},{"value":"/ let ref_schema = gen.subschema_for::<MyStruct>();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79026,"byte_end":79079,"line_start":397,"line_end":397,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79084,"byte_end":79087,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ assert!(ref_schema.is_ref());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79092,"byte_end":79125,"line_start":399,"line_end":399,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79130,"byte_end":79133,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let dereferenced = gen.dereference(&ref_schema);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79138,"byte_end":79190,"line_start":401,"line_end":401,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79195,"byte_end":79198,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ assert!(dereferenced.is_some());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79203,"byte_end":79239,"line_start":403,"line_end":403,"column_start":5,"column_end":41}},{"value":"/ assert!(!dereferenced.unwrap().is_ref());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79244,"byte_end":79289,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(dereferenced, gen.definitions().get(\"MyStruct\"));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79294,"byte_end":79358,"line_start":405,"line_end":405,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79363,"byte_end":79370,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80140,"byte_end":80154,"line_start":429,"line_end":429,"column_start":12,"column_end":26},"name":"apply_metadata","qualname":"<SchemaGenerator>::apply_metadata","value":"pub fn apply_metadata(&Self, Schema, Option<Metadata>) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" This function is only public for use by schemars_derive.","sig":null,"attributes":[{"value":"/ This function is only public for use by schemars_derive.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":79981,"byte_end":80041,"line_start":425,"line_end":425,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80046,"byte_end":80049,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ It should not be considered part of the public API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80054,"byte_end":80109,"line_start":427,"line_end":427,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":510},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82090,"byte_end":82100,"line_start":489,"line_end":489,"column_start":11,"column_end":21},"name":"GenVisitor","qualname":"::gen::GenVisitor","value":"GenVisitor: Visitor + Debug + DynClone + Any","parent":null,"children":[{"krate":0,"index":511}],"decl_id":null,"docs":" A [Visitor](Visitor) which implements additional traits required to be included in a [SchemaSettings].","sig":null,"attributes":[{"value":"/ A [Visitor](Visitor) which implements additional traits required to be included in a [SchemaSettings].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81426,"byte_end":81532,"line_start":468,"line_end":468,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81533,"byte_end":81536,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to use this trait directly as it is automatically implemented for any type which implements all of:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81537,"byte_end":81661,"line_start":470,"line_end":470,"column_start":1,"column_end":125}},{"value":"/ - [`Visitor`]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81662,"byte_end":81679,"line_start":471,"line_end":471,"column_start":1,"column_end":18}},{"value":"/ - [`std::fmt::Debug`]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81680,"byte_end":81705,"line_start":472,"line_end":472,"column_start":1,"column_end":26}},{"value":"/ - [`std::any::Any`] (implemented for all `'static` types)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81706,"byte_end":81767,"line_start":473,"line_end":473,"column_start":1,"column_end":62}},{"value":"/ - [`std::clone::Clone`]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81768,"byte_end":81795,"line_start":474,"line_end":474,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81796,"byte_end":81799,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81800,"byte_end":81813,"line_start":476,"line_end":476,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81814,"byte_end":81821,"line_start":477,"line_end":477,"column_start":1,"column_end":8}},{"value":"/ use schemars::visit::Visitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81822,"byte_end":81855,"line_start":478,"line_end":478,"column_start":1,"column_end":34}},{"value":"/ use schemars::gen::GenVisitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81856,"byte_end":81890,"line_start":479,"line_end":479,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81891,"byte_end":81894,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81895,"byte_end":81922,"line_start":481,"line_end":481,"column_start":1,"column_end":28}},{"value":"/ struct MyVisitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81923,"byte_end":81944,"line_start":482,"line_end":482,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81945,"byte_end":81948,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ impl Visitor for MyVisitor { }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81949,"byte_end":81983,"line_start":484,"line_end":484,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81984,"byte_end":81987,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ let v: &dyn GenVisitor = &MyVisitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81988,"byte_end":82028,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/ assert!(v.as_any().is::<MyVisitor>());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82029,"byte_end":82071,"line_start":487,"line_end":487,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82072,"byte_end":82079,"line_start":488,"line_end":488,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82257,"byte_end":82263,"line_start":491,"line_end":491,"column_start":8,"column_end":14},"name":"as_any","qualname":"::gen::GenVisitor::as_any","value":"pub fn as_any(&Self) -> &dyn Any","parent":{"krate":0,"index":510},"children":[],"decl_id":null,"docs":" Upcasts this visitor into an `Any`, which can be used to inspect and manipulate it as its concrete type.\n","sig":null,"attributes":[{"value":"/ Upcasts this visitor into an `Any`, which can be used to inspect and manipulate it as its concrete type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82141,"byte_end":82249,"line_start":490,"line_end":490,"column_start":5,"column_end":113}}]},{"kind":"Mod","id":{"krate":0,"index":515},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schema","qualname":"::schema","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":1461},{"krate":0,"index":1440},{"krate":0,"index":1446},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":533},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":1554},{"krate":0,"index":1468},{"krate":0,"index":1474},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1659},{"krate":0,"index":1558},{"krate":0,"index":1564},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":1768},{"krate":0,"index":1678},{"krate":0,"index":1684},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":554},{"krate":0,"index":1846},{"krate":0,"index":1777},{"krate":0,"index":1783},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1919},{"krate":0,"index":1854},{"krate":0,"index":1860},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1986},{"krate":0,"index":1925},{"krate":0,"index":1931},{"krate":0,"index":1976},{"krate":0,"index":1978},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1984},{"krate":0,"index":2057},{"krate":0,"index":1990},{"krate":0,"index":1996},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2055},{"krate":0,"index":2133},{"krate":0,"index":2064},{"krate":0,"index":2070},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2214},{"krate":0,"index":2141},{"krate":0,"index":2147},{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2267},{"krate":0,"index":2229},{"krate":0,"index":2236},{"krate":0,"index":2244},{"krate":0,"index":2247},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2256},{"krate":0,"index":2258},{"krate":0,"index":2261},{"krate":0,"index":2264},{"krate":0,"index":555},{"krate":0,"index":558}],"decl_id":null,"docs":"JSON Schema types.\n","sig":null,"attributes":[{"value":"*\nJSON Schema types.\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":82963,"byte_end":82988,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1462},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83610,"byte_end":83614,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Bool","qualname":"::schema::Schema::Bool","value":"Schema::Bool(bool)","parent":{"krate":0,"index":1461},"children":[],"decl_id":null,"docs":" A trivial boolean JSON Schema.","sig":null,"attributes":[{"value":"/ A trivial boolean JSON Schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83412,"byte_end":83446,"line_start":19,"line_end":19,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83451,"byte_end":83454,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ The schema `true` matches everything (always passes validation), whereas the schema `false`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83459,"byte_end":83554,"line_start":21,"line_end":21,"column_start":5,"column_end":100}},{"value":"/ matches nothing (always fails validation).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83559,"byte_end":83605,"line_start":22,"line_end":22,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1465},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83656,"byte_end":83662,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::Schema::Object","value":"Schema::Object(SchemaObject)","parent":{"krate":0,"index":1461},"children":[],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[{"value":"/ A JSON Schema object.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83626,"byte_end":83651,"line_start":24,"line_end":24,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1461},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83399,"byte_end":83405,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Schema","qualname":"::schema::Schema","value":"pub enum Schema { Bool(bool), Object(SchemaObject), }","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1465}],"decl_id":null,"docs":" A JSON Schema.\n","sig":null,"attributes":[{"value":"/ A JSON Schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83194,"byte_end":83212,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"allow(clippy :: large_enum_variant)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83213,"byte_end":83249,"line_start":14,"line_end":14,"column_start":1,"column_end":37}},{"value":"serde(untagged)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83371,"byte_end":83389,"line_start":17,"line_end":17,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83938,"byte_end":83945,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<Schema>::new_ref","value":"pub fn new_ref(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[{"value":"/ Creates a new `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83699,"byte_end":83731,"line_start":29,"line_end":29,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83736,"byte_end":83739,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The given reference string should be a URI reference. This will usually be a JSON Pointer","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83744,"byte_end":83837,"line_start":31,"line_end":31,"column_start":5,"column_end":98}},{"value":"/ in [URI Fragment representation](https://tools.ietf.org/html/rfc6901#section-6).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83842,"byte_end":83926,"line_start":32,"line_end":32,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84278,"byte_end":84284,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<Schema>::is_ref","value":"pub fn is_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84034,"byte_end":84082,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84087,"byte_end":84090,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ If `self` is a [`SchemaObject`] with `Some` [`reference`](struct.SchemaObject.html#structfield.reference) set, this returns `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84095,"byte_end":84230,"line_start":39,"line_end":39,"column_start":5,"column_end":140}},{"value":"/ Otherwise, returns `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84235,"byte_end":84266,"line_start":40,"line_end":40,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84838,"byte_end":84849,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"into_object","qualname":"<Schema>::into_object","value":"pub fn into_object(Self) -> SchemaObject","parent":null,"children":[],"decl_id":null,"docs":" Converts the given schema (if it is a boolean schema) into an equivalent schema object.","sig":null,"attributes":[{"value":"/ Converts the given schema (if it is a boolean schema) into an equivalent schema object.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84413,"byte_end":84504,"line_start":48,"line_end":48,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84509,"byte_end":84512,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the given schema is already a schema object, this has no effect.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84517,"byte_end":84588,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84593,"byte_end":84596,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84601,"byte_end":84614,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84619,"byte_end":84626,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use schemars::schema::{Schema, SchemaObject};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84631,"byte_end":84680,"line_start":54,"line_end":54,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84685,"byte_end":84688,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let bool_schema = Schema::Bool(true);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84693,"byte_end":84734,"line_start":56,"line_end":56,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84739,"byte_end":84742,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bool_schema.into_object(), SchemaObject::default());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84747,"byte_end":84814,"line_start":58,"line_end":58,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":84819,"byte_end":84826,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1554},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85747,"byte_end":85757,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"RootSchema","qualname":"::schema::RootSchema","value":"RootSchema { meta_schema, schema, definitions }","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557}],"decl_id":null,"docs":" The root object of a JSON Schema document.\n","sig":null,"attributes":[{"value":"/ The root object of a JSON Schema document.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85515,"byte_end":85561,"line_start":87,"line_end":87,"column_start":1,"column_end":47}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85692,"byte_end":85735,"line_start":90,"line_end":90,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1555},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86010,"byte_end":86021,"line_start":96,"line_end":96,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::schema::RootSchema::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" The `$schema` keyword.","sig":null,"attributes":[{"value":"/ The `$schema` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85764,"byte_end":85790,"line_start":92,"line_end":92,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85795,"byte_end":85798,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.1.1. The \"$schema\" Keyword](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.1.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85803,"byte_end":85927,"line_start":94,"line_end":94,"column_start":5,"column_end":129}},{"value":"serde(rename = \"$schema\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85932,"byte_end":86001,"line_start":95,"line_end":95,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1556},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86101,"byte_end":86107,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"name":"schema","qualname":"::schema::RootSchema::schema","value":"schema::SchemaObject","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" The root schema itself.\n","sig":null,"attributes":[{"value":"/ The root schema itself.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86043,"byte_end":86070,"line_start":97,"line_end":97,"column_start":5,"column_end":32}},{"value":"serde(flatten)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86075,"byte_end":86092,"line_start":98,"line_end":98,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1557},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86698,"byte_end":86709,"line_start":108,"line_end":108,"column_start":9,"column_end":20},"name":"definitions","qualname":"::schema::RootSchema::definitions","value":"indexmap::IndexMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" The `definitions` keyword.","sig":null,"attributes":[{"value":"/ The `definitions` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86127,"byte_end":86157,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86162,"byte_end":86165,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ In JSON Schema draft 2019-09 this was replaced by $defs, but in Schemars this is still","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86170,"byte_end":86260,"line_start":102,"line_end":102,"column_start":5,"column_end":95}},{"value":"/ serialized as `definitions` for backward-compatibility.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86265,"byte_end":86324,"line_start":103,"line_end":103,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86329,"byte_end":86332,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.5. Schema Re-Use With \"$defs\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.5),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86337,"byte_end":86466,"line_start":105,"line_end":105,"column_start":5,"column_end":134}},{"value":"/ and [JSON Schema (draft 07) 9. Schema Re-Use With \"definitions\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01#section-9).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86471,"byte_end":86620,"line_start":106,"line_end":106,"column_start":5,"column_end":154}},{"value":"serde(alias = \"$defs\", skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86625,"byte_end":86689,"line_start":107,"line_end":107,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1659},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86946,"byte_end":86958,"line_start":115,"line_end":115,"column_start":12,"column_end":24},"name":"SchemaObject","qualname":"::schema::SchemaObject","value":"SchemaObject { metadata, instance_type, format, enum_values, const_value, subschemas, number, string, array, object, reference, extensions }","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671}],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[{"value":"/ A JSON Schema object.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86735,"byte_end":86760,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86891,"byte_end":86934,"line_start":114,"line_end":114,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1660},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87169,"byte_end":87177,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"metadata","qualname":"::schema::SchemaObject::metadata","value":"std::option::Option<std::boxed::Box<schema::Metadata>>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" Properties which annotate the [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"/ Properties which annotate the [`SchemaObject`] which typically have no effect when an object is being validated against the schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":86965,"byte_end":87100,"line_start":116,"line_end":116,"column_start":5,"column_end":140}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87105,"byte_end":87160,"line_start":117,"line_end":117,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1661},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87579,"byte_end":87592,"line_start":124,"line_end":124,"column_start":9,"column_end":22},"name":"instance_type","qualname":"::schema::SchemaObject::instance_type","value":"std::option::Option<schema::SingleOrVec<schema::InstanceType>>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" The `type` keyword.","sig":null,"attributes":[{"value":"/ The `type` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87206,"byte_end":87229,"line_start":119,"line_end":119,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87234,"byte_end":87237,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.1. \"type\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.1)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87242,"byte_end":87372,"line_start":121,"line_end":121,"column_start":5,"column_end":135}},{"value":"/ and [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87377,"byte_end":87499,"line_start":122,"line_end":122,"column_start":5,"column_end":127}},{"value":"serde(rename = \"type\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87504,"byte_end":87570,"line_start":123,"line_end":123,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1662},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87898,"byte_end":87904,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"format","qualname":"::schema::SchemaObject::format","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" The `format` keyword.","sig":null,"attributes":[{"value":"/ The `format` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87633,"byte_end":87658,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87663,"byte_end":87666,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 7. A Vocabulary for Semantic Content With \"format\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-7).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87671,"byte_end":87835,"line_start":127,"line_end":127,"column_start":5,"column_end":169}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87840,"byte_end":87889,"line_start":128,"line_end":128,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1663},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88172,"byte_end":88183,"line_start":134,"line_end":134,"column_start":9,"column_end":20},"name":"enum_values","qualname":"::schema::SchemaObject::enum_values","value":"std::option::Option<std::vec::Vec<serde_json::Value>>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" The `enum` keyword.","sig":null,"attributes":[{"value":"/ The `enum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87926,"byte_end":87949,"line_start":130,"line_end":130,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87954,"byte_end":87957,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.2. \"enum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.2)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":87962,"byte_end":88092,"line_start":132,"line_end":132,"column_start":5,"column_end":135}},{"value":"serde(rename = \"enum\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88097,"byte_end":88163,"line_start":133,"line_end":133,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1664},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88521,"byte_end":88532,"line_start":143,"line_end":143,"column_start":9,"column_end":20},"name":"const_value","qualname":"::schema::SchemaObject::const_value","value":"std::option::Option<serde_json::Value>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" The `const` keyword.","sig":null,"attributes":[{"value":"/ The `const` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88209,"byte_end":88233,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88238,"byte_end":88241,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.3. \"const\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.3)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88246,"byte_end":88377,"line_start":137,"line_end":137,"column_start":5,"column_end":136}},{"value":"serde(rename = \"const\", skip_serializing_if = \"Option::is_none\",\n        deserialize_with = \"allow_null\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88382,"byte_end":88512,"line_start":138,"line_end":142,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1665},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88722,"byte_end":88732,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"name":"subschemas","qualname":"::schema::SchemaObject::subschemas","value":"std::option::Option<std::boxed::Box<schema::SubschemaValidation>>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions in terms of other schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88553,"byte_end":88653,"line_start":144,"line_end":144,"column_start":5,"column_end":105}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88658,"byte_end":88713,"line_start":145,"line_end":145,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1666},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88927,"byte_end":88933,"line_start":149,"line_end":149,"column_start":9,"column_end":15},"name":"number","qualname":"::schema::SchemaObject::number","value":"std::option::Option<std::boxed::Box<schema::NumberValidation>>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for numbers.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88772,"byte_end":88858,"line_start":147,"line_end":147,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88863,"byte_end":88918,"line_start":148,"line_end":148,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1667},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89125,"byte_end":89131,"line_start":152,"line_end":152,"column_start":9,"column_end":15},"name":"string","qualname":"::schema::SchemaObject::string","value":"std::option::Option<std::boxed::Box<schema::StringValidation>>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for strings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":88970,"byte_end":89056,"line_start":150,"line_end":150,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89061,"byte_end":89116,"line_start":151,"line_end":151,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1668},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89322,"byte_end":89327,"line_start":155,"line_end":155,"column_start":9,"column_end":14},"name":"array","qualname":"::schema::SchemaObject::array","value":"std::option::Option<std::boxed::Box<schema::ArrayValidation>>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for arrays.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89168,"byte_end":89253,"line_start":153,"line_end":153,"column_start":5,"column_end":90}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89258,"byte_end":89313,"line_start":154,"line_end":154,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1669},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89518,"byte_end":89524,"line_start":158,"line_end":158,"column_start":9,"column_end":15},"name":"object","qualname":"::schema::SchemaObject::object","value":"std::option::Option<std::boxed::Box<schema::ObjectValidation>>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for objects.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89363,"byte_end":89449,"line_start":156,"line_end":156,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89454,"byte_end":89509,"line_start":157,"line_end":157,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1670},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89813,"byte_end":89822,"line_start":163,"line_end":163,"column_start":9,"column_end":18},"name":"reference","qualname":"::schema::SchemaObject::reference","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" The `$ref` keyword.","sig":null,"attributes":[{"value":"/ The `$ref` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89561,"byte_end":89584,"line_start":159,"line_end":159,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89589,"byte_end":89592,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.4.1. Direct References with \"$ref\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.4.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89597,"byte_end":89733,"line_start":161,"line_end":161,"column_start":5,"column_end":141}},{"value":"serde(rename = \"$ref\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89738,"byte_end":89804,"line_start":162,"line_end":162,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1671},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89996,"byte_end":90006,"line_start":166,"line_end":166,"column_start":9,"column_end":19},"name":"extensions","qualname":"::schema::SchemaObject::extensions","value":"indexmap::IndexMap<std::string::String, serde_json::Value>","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" Arbitrary extra properties which are not part of the JSON Schema specification, or which `schemars` does not support.\n","sig":null,"attributes":[{"value":"/ Arbitrary extra properties which are not part of the JSON Schema specification, or which `schemars` does not support.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89844,"byte_end":89965,"line_start":164,"line_end":164,"column_start":5,"column_end":126}},{"value":"serde(flatten)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":89970,"byte_end":89987,"line_start":165,"line_end":165,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91428,"byte_end":91435,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<SchemaObject>::new_ref","value":"pub fn new_ref(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[{"value":"/ Creates a new `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91189,"byte_end":91221,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91226,"byte_end":91229,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The given reference string should be a URI reference. This will usually be a JSON Pointer","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91234,"byte_end":91327,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ in [URI Fragment representation](https://tools.ietf.org/html/rfc6901#section-6).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91332,"byte_end":91416,"line_start":211,"line_end":211,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91803,"byte_end":91809,"line_start":223,"line_end":223,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<SchemaObject>::is_ref","value":"pub fn is_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91582,"byte_end":91630,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91635,"byte_end":91638,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ If `self` has `Some` [`reference`](struct.SchemaObject.html#structfield.reference) set, this returns `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91643,"byte_end":91755,"line_start":221,"line_end":221,"column_start":5,"column_end":117}},{"value":"/ Otherwise, returns `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91760,"byte_end":91791,"line_start":222,"line_end":222,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91897,"byte_end":91905,"line_start":227,"line_end":227,"column_start":31,"column_end":39},"name":"metadata","qualname":"<SchemaObject>::metadata","value":"pub fn metadata(&mut Self) -> &mut Metadata","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`Metadata`](#structfield.metadata), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91948,"byte_end":91958,"line_start":228,"line_end":228,"column_start":31,"column_end":41},"name":"subschemas","qualname":"<SchemaObject>::subschemas","value":"pub fn subschemas(&mut Self) -> &mut SubschemaValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`SubschemaValidation`](#structfield.subschemas), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92012,"byte_end":92018,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"name":"number","qualname":"<SchemaObject>::number","value":"pub fn number(&mut Self) -> &mut NumberValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`NumberValidation`](#structfield.number), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92069,"byte_end":92075,"line_start":230,"line_end":230,"column_start":31,"column_end":37},"name":"string","qualname":"<SchemaObject>::string","value":"pub fn string(&mut Self) -> &mut StringValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`StringValidation`](#structfield.string), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92126,"byte_end":92131,"line_start":231,"line_end":231,"column_start":31,"column_end":36},"name":"array","qualname":"<SchemaObject>::array","value":"pub fn array(&mut Self) -> &mut ArrayValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ArrayValidation`](#structfield.array), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92181,"byte_end":92187,"line_start":232,"line_end":232,"column_start":31,"column_end":37},"name":"object","qualname":"<SchemaObject>::object","value":"pub fn object(&mut Self) -> &mut ObjectValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ObjectValidation`](#structfield.object), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1768},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92643,"byte_end":92651,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::schema::Metadata","value":"Metadata { id, title, description, default, deprecated, read_only, write_only, examples }","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776}],"decl_id":null,"docs":" Properties which annotate a [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"/ Properties which annotate a [`SchemaObject`] which typically have no effect when an object is being validated against the schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92324,"byte_end":92457,"line_start":241,"line_end":241,"column_start":1,"column_end":134}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92588,"byte_end":92631,"line_start":244,"line_end":244,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1769},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92892,"byte_end":92894,"line_start":250,"line_end":250,"column_start":9,"column_end":11},"name":"id","qualname":"::schema::Metadata::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1768},"children":[],"decl_id":null,"docs":" The `$id` keyword.","sig":null,"attributes":[{"value":"/ The `$id` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92658,"byte_end":92680,"line_start":246,"line_end":246,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92685,"byte_end":92688,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.2. The \"$id\" Keyword](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92693,"byte_end":92813,"line_start":248,"line_end":248,"column_start":5,"column_end":125}},{"value":"serde(rename = \"$id\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92818,"byte_end":92883,"line_start":249,"line_end":249,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1770},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93162,"byte_end":93167,"line_start":255,"line_end":255,"column_start":9,"column_end":14},"name":"title","qualname":"::schema::Metadata::title","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1768},"children":[],"decl_id":null,"docs":" The `title` keyword.","sig":null,"attributes":[{"value":"/ The `title` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92916,"byte_end":92940,"line_start":251,"line_end":251,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92945,"byte_end":92948,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92953,"byte_end":93099,"line_start":253,"line_end":253,"column_start":5,"column_end":151}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93104,"byte_end":93153,"line_start":254,"line_end":254,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1771},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93441,"byte_end":93452,"line_start":260,"line_end":260,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::Metadata::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1768},"children":[],"decl_id":null,"docs":" The `description` keyword.","sig":null,"attributes":[{"value":"/ The `description` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93189,"byte_end":93219,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93224,"byte_end":93227,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93232,"byte_end":93378,"line_start":258,"line_end":258,"column_start":5,"column_end":151}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93383,"byte_end":93432,"line_start":259,"line_end":259,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1772},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93761,"byte_end":93768,"line_start":268,"line_end":268,"column_start":9,"column_end":16},"name":"default","qualname":"::schema::Metadata::default","value":"std::option::Option<serde_json::Value>","parent":{"krate":0,"index":1768},"children":[],"decl_id":null,"docs":" The `default` keyword.","sig":null,"attributes":[{"value":"/ The `default` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93474,"byte_end":93500,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93505,"byte_end":93508,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.2. \"default\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93513,"byte_end":93643,"line_start":263,"line_end":263,"column_start":5,"column_end":135}},{"value":"serde(skip_serializing_if = \"Option::is_none\", deserialize_with =\n        \"allow_null\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93648,"byte_end":93752,"line_start":264,"line_end":267,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1773},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94020,"byte_end":94030,"line_start":273,"line_end":273,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::schema::Metadata::deprecated","value":"bool","parent":{"krate":0,"index":1768},"children":[],"decl_id":null,"docs":" The `deprecated` keyword.","sig":null,"attributes":[{"value":"/ The `deprecated` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93789,"byte_end":93818,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93823,"byte_end":93826,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.3. \"deprecated\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93831,"byte_end":93964,"line_start":271,"line_end":271,"column_start":5,"column_end":138}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":93969,"byte_end":94011,"line_start":272,"line_end":272,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1774},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94285,"byte_end":94294,"line_start":278,"line_end":278,"column_start":9,"column_end":18},"name":"read_only","qualname":"::schema::Metadata::read_only","value":"bool","parent":{"krate":0,"index":1768},"children":[],"decl_id":null,"docs":" The `readOnly` keyword.","sig":null,"attributes":[{"value":"/ The `readOnly` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94042,"byte_end":94069,"line_start":274,"line_end":274,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94074,"byte_end":94077,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94082,"byte_end":94229,"line_start":276,"line_end":276,"column_start":5,"column_end":152}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94234,"byte_end":94276,"line_start":277,"line_end":277,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1775},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94550,"byte_end":94560,"line_start":283,"line_end":283,"column_start":9,"column_end":19},"name":"write_only","qualname":"::schema::Metadata::write_only","value":"bool","parent":{"krate":0,"index":1768},"children":[],"decl_id":null,"docs":" The `writeOnly` keyword.","sig":null,"attributes":[{"value":"/ The `writeOnly` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94306,"byte_end":94334,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94339,"byte_end":94342,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94347,"byte_end":94494,"line_start":281,"line_end":281,"column_start":5,"column_end":152}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94499,"byte_end":94541,"line_start":282,"line_end":282,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1776},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94804,"byte_end":94812,"line_start":288,"line_end":288,"column_start":9,"column_end":17},"name":"examples","qualname":"::schema::Metadata::examples","value":"std::vec::Vec<serde_json::Value>","parent":{"krate":0,"index":1768},"children":[],"decl_id":null,"docs":" The `examples` keyword.","sig":null,"attributes":[{"value":"/ The `examples` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94572,"byte_end":94599,"line_start":284,"line_end":284,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94604,"byte_end":94607,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.5. \"examples\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.5).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94612,"byte_end":94743,"line_start":286,"line_end":286,"column_start":5,"column_end":136}},{"value":"serde(skip_serializing_if = \"Vec::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94748,"byte_end":94795,"line_start":287,"line_end":287,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1846},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95200,"byte_end":95219,"line_start":300,"line_end":300,"column_start":12,"column_end":31},"name":"SubschemaValidation","qualname":"::schema::SubschemaValidation","value":"SubschemaValidation { all_of, any_of, one_of, not, if_schema, then_schema, else_schema }","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions in terms of other schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":94916,"byte_end":95014,"line_start":296,"line_end":296,"column_start":1,"column_end":99}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95145,"byte_end":95188,"line_start":299,"line_end":299,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1847},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95440,"byte_end":95446,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"name":"all_of","qualname":"::schema::SubschemaValidation::all_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1846},"children":[],"decl_id":null,"docs":" The `allOf` keyword.","sig":null,"attributes":[{"value":"/ The `allOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95226,"byte_end":95250,"line_start":301,"line_end":301,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95255,"byte_end":95258,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.1. \"allOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95263,"byte_end":95377,"line_start":303,"line_end":303,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95382,"byte_end":95431,"line_start":304,"line_end":304,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1848},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95687,"byte_end":95693,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"name":"any_of","qualname":"::schema::SubschemaValidation::any_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1846},"children":[],"decl_id":null,"docs":" The `anyOf` keyword.","sig":null,"attributes":[{"value":"/ The `anyOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95473,"byte_end":95497,"line_start":306,"line_end":306,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95502,"byte_end":95505,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.2. \"anyOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95510,"byte_end":95624,"line_start":308,"line_end":308,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95629,"byte_end":95678,"line_start":309,"line_end":309,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1849},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95934,"byte_end":95940,"line_start":315,"line_end":315,"column_start":9,"column_end":15},"name":"one_of","qualname":"::schema::SubschemaValidation::one_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1846},"children":[],"decl_id":null,"docs":" The `oneOf` keyword.","sig":null,"attributes":[{"value":"/ The `oneOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95720,"byte_end":95744,"line_start":311,"line_end":311,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95749,"byte_end":95752,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.3. \"oneOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95757,"byte_end":95871,"line_start":313,"line_end":313,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95876,"byte_end":95925,"line_start":314,"line_end":314,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1850},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96177,"byte_end":96180,"line_start":320,"line_end":320,"column_start":9,"column_end":12},"name":"not","qualname":"::schema::SubschemaValidation::not","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1846},"children":[],"decl_id":null,"docs":" The `not` keyword.","sig":null,"attributes":[{"value":"/ The `not` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95967,"byte_end":95989,"line_start":316,"line_end":316,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":95994,"byte_end":95997,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.4. \"not\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96002,"byte_end":96114,"line_start":318,"line_end":318,"column_start":5,"column_end":117}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96119,"byte_end":96168,"line_start":319,"line_end":319,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1851},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96430,"byte_end":96439,"line_start":325,"line_end":325,"column_start":9,"column_end":18},"name":"if_schema","qualname":"::schema::SubschemaValidation::if_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1846},"children":[],"decl_id":null,"docs":" The `if` keyword.","sig":null,"attributes":[{"value":"/ The `if` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96207,"byte_end":96228,"line_start":321,"line_end":321,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96233,"byte_end":96236,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.1. \"if\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96241,"byte_end":96352,"line_start":323,"line_end":323,"column_start":5,"column_end":116}},{"value":"serde(rename = \"if\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96357,"byte_end":96421,"line_start":324,"line_end":324,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1852},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96695,"byte_end":96706,"line_start":330,"line_end":330,"column_start":9,"column_end":20},"name":"then_schema","qualname":"::schema::SubschemaValidation::then_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1846},"children":[],"decl_id":null,"docs":" The `then` keyword.","sig":null,"attributes":[{"value":"/ The `then` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96466,"byte_end":96489,"line_start":326,"line_end":326,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96494,"byte_end":96497,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.2. \"then\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96502,"byte_end":96615,"line_start":328,"line_end":328,"column_start":5,"column_end":118}},{"value":"serde(rename = \"then\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96620,"byte_end":96686,"line_start":329,"line_end":329,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1853},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96962,"byte_end":96973,"line_start":335,"line_end":335,"column_start":9,"column_end":20},"name":"else_schema","qualname":"::schema::SubschemaValidation::else_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1846},"children":[],"decl_id":null,"docs":" The `else` keyword.","sig":null,"attributes":[{"value":"/ The `else` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96733,"byte_end":96756,"line_start":331,"line_end":331,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96761,"byte_end":96764,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.3. \"else\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96769,"byte_end":96882,"line_start":333,"line_end":333,"column_start":5,"column_end":118}},{"value":"serde(rename = \"else\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96887,"byte_end":96953,"line_start":334,"line_end":334,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1919},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97269,"byte_end":97285,"line_start":342,"line_end":342,"column_start":12,"column_end":28},"name":"NumberValidation","qualname":"::schema::NumberValidation","value":"NumberValidation { multiple_of, maximum, exclusive_maximum, minimum, exclusive_minimum }","parent":null,"children":[{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for numbers.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":96999,"byte_end":97083,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97214,"byte_end":97257,"line_start":341,"line_end":341,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1920},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97534,"byte_end":97545,"line_start":347,"line_end":347,"column_start":9,"column_end":20},"name":"multiple_of","qualname":"::schema::NumberValidation::multiple_of","value":"std::option::Option<f64>","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" The `multipleOf` keyword.","sig":null,"attributes":[{"value":"/ The `multipleOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97292,"byte_end":97321,"line_start":343,"line_end":343,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97326,"byte_end":97329,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.1. \"multipleOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97334,"byte_end":97471,"line_start":345,"line_end":345,"column_start":5,"column_end":142}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97476,"byte_end":97525,"line_start":346,"line_end":346,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1921},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97800,"byte_end":97807,"line_start":352,"line_end":352,"column_start":9,"column_end":16},"name":"maximum","qualname":"::schema::NumberValidation::maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" The `maximum` keyword.","sig":null,"attributes":[{"value":"/ The `maximum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97564,"byte_end":97590,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97595,"byte_end":97598,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.2. \"maximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97603,"byte_end":97737,"line_start":350,"line_end":350,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97742,"byte_end":97791,"line_start":351,"line_end":351,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1922},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98080,"byte_end":98097,"line_start":357,"line_end":357,"column_start":9,"column_end":26},"name":"exclusive_maximum","qualname":"::schema::NumberValidation::exclusive_maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" The `exclusiveMaximum` keyword.","sig":null,"attributes":[{"value":"/ The `exclusiveMaximum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97826,"byte_end":97861,"line_start":353,"line_end":353,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97866,"byte_end":97869,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.3. \"exclusiveMaximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":97874,"byte_end":98017,"line_start":355,"line_end":355,"column_start":5,"column_end":148}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98022,"byte_end":98071,"line_start":356,"line_end":356,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1923},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98352,"byte_end":98359,"line_start":362,"line_end":362,"column_start":9,"column_end":16},"name":"minimum","qualname":"::schema::NumberValidation::minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" The `minimum` keyword.","sig":null,"attributes":[{"value":"/ The `minimum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98116,"byte_end":98142,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98147,"byte_end":98150,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.4. \"minimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98155,"byte_end":98289,"line_start":360,"line_end":360,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98294,"byte_end":98343,"line_start":361,"line_end":361,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1924},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98632,"byte_end":98649,"line_start":367,"line_end":367,"column_start":9,"column_end":26},"name":"exclusive_minimum","qualname":"::schema::NumberValidation::exclusive_minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" The `exclusiveMinimum` keyword.","sig":null,"attributes":[{"value":"/ The `exclusiveMinimum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98378,"byte_end":98413,"line_start":363,"line_end":363,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98418,"byte_end":98421,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.5. \"exclusiveMinimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.5).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98426,"byte_end":98569,"line_start":365,"line_end":365,"column_start":5,"column_end":148}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98574,"byte_end":98623,"line_start":366,"line_end":366,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1986},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98937,"byte_end":98953,"line_start":374,"line_end":374,"column_start":12,"column_end":28},"name":"StringValidation","qualname":"::schema::StringValidation","value":"StringValidation { max_length, min_length, pattern }","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for strings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98667,"byte_end":98751,"line_start":370,"line_end":370,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98882,"byte_end":98925,"line_start":373,"line_end":373,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1987},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99200,"byte_end":99210,"line_start":379,"line_end":379,"column_start":9,"column_end":19},"name":"max_length","qualname":"::schema::StringValidation::max_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" The `maxLength` keyword.","sig":null,"attributes":[{"value":"/ The `maxLength` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98960,"byte_end":98988,"line_start":375,"line_end":375,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":98993,"byte_end":98996,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.1. \"maxLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99001,"byte_end":99137,"line_start":377,"line_end":377,"column_start":5,"column_end":141}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99142,"byte_end":99191,"line_start":378,"line_end":378,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1988},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99469,"byte_end":99479,"line_start":384,"line_end":384,"column_start":9,"column_end":19},"name":"min_length","qualname":"::schema::StringValidation::min_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" The `minLength` keyword.","sig":null,"attributes":[{"value":"/ The `minLength` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99229,"byte_end":99257,"line_start":380,"line_end":380,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99262,"byte_end":99265,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.2. \"minLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99270,"byte_end":99406,"line_start":382,"line_end":382,"column_start":5,"column_end":141}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99411,"byte_end":99460,"line_start":383,"line_end":383,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1989},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99734,"byte_end":99741,"line_start":389,"line_end":389,"column_start":9,"column_end":16},"name":"pattern","qualname":"::schema::StringValidation::pattern","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" The `pattern` keyword.","sig":null,"attributes":[{"value":"/ The `pattern` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99498,"byte_end":99524,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99529,"byte_end":99532,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.3. \"pattern\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99537,"byte_end":99671,"line_start":387,"line_end":387,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99676,"byte_end":99725,"line_start":388,"line_end":388,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2057},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100031,"byte_end":100046,"line_start":396,"line_end":396,"column_start":12,"column_end":27},"name":"ArrayValidation","qualname":"::schema::ArrayValidation","value":"ArrayValidation { items, additional_items, max_items, min_items, unique_items, contains }","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for arrays.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99762,"byte_end":99845,"line_start":392,"line_end":392,"column_start":1,"column_end":84}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":99976,"byte_end":100019,"line_start":395,"line_end":395,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100267,"byte_end":100272,"line_start":401,"line_end":401,"column_start":9,"column_end":14},"name":"items","qualname":"::schema::ArrayValidation::items","value":"std::option::Option<schema::SingleOrVec<schema::Schema>>","parent":{"krate":0,"index":2057},"children":[],"decl_id":null,"docs":" The `items` keyword.","sig":null,"attributes":[{"value":"/ The `items` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100053,"byte_end":100077,"line_start":397,"line_end":397,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100082,"byte_end":100085,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.1. \"items\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100090,"byte_end":100204,"line_start":399,"line_end":399,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100209,"byte_end":100258,"line_start":400,"line_end":400,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2059},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100541,"byte_end":100557,"line_start":406,"line_end":406,"column_start":9,"column_end":25},"name":"additional_items","qualname":"::schema::ArrayValidation::additional_items","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2057},"children":[],"decl_id":null,"docs":" The `additionalItems` keyword.","sig":null,"attributes":[{"value":"/ The `additionalItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100307,"byte_end":100341,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100346,"byte_end":100349,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.2. \"additionalItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100354,"byte_end":100478,"line_start":404,"line_end":404,"column_start":5,"column_end":129}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100483,"byte_end":100532,"line_start":405,"line_end":405,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2060},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100822,"byte_end":100831,"line_start":411,"line_end":411,"column_start":9,"column_end":18},"name":"max_items","qualname":"::schema::ArrayValidation::max_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":2057},"children":[],"decl_id":null,"docs":" The `maxItems` keyword.","sig":null,"attributes":[{"value":"/ The `maxItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100584,"byte_end":100611,"line_start":407,"line_end":407,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100616,"byte_end":100619,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.1. \"maxItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100624,"byte_end":100759,"line_start":409,"line_end":409,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100764,"byte_end":100813,"line_start":410,"line_end":410,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2061},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101088,"byte_end":101097,"line_start":416,"line_end":416,"column_start":9,"column_end":18},"name":"min_items","qualname":"::schema::ArrayValidation::min_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":2057},"children":[],"decl_id":null,"docs":" The `minItems` keyword.","sig":null,"attributes":[{"value":"/ The `minItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100850,"byte_end":100877,"line_start":412,"line_end":412,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100882,"byte_end":100885,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.2. \"minItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":100890,"byte_end":101025,"line_start":414,"line_end":414,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101030,"byte_end":101079,"line_start":415,"line_end":415,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2062},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101360,"byte_end":101372,"line_start":421,"line_end":421,"column_start":9,"column_end":21},"name":"unique_items","qualname":"::schema::ArrayValidation::unique_items","value":"std::option::Option<bool>","parent":{"krate":0,"index":2057},"children":[],"decl_id":null,"docs":" The `uniqueItems` keyword.","sig":null,"attributes":[{"value":"/ The `uniqueItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101116,"byte_end":101146,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101151,"byte_end":101154,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.3. \"uniqueItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101159,"byte_end":101297,"line_start":419,"line_end":419,"column_start":5,"column_end":143}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101302,"byte_end":101351,"line_start":420,"line_end":420,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2063},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101612,"byte_end":101620,"line_start":426,"line_end":426,"column_start":9,"column_end":17},"name":"contains","qualname":"::schema::ArrayValidation::contains","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2057},"children":[],"decl_id":null,"docs":" The `contains` keyword.","sig":null,"attributes":[{"value":"/ The `contains` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101392,"byte_end":101419,"line_start":422,"line_end":422,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101424,"byte_end":101427,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.4. \"contains\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101432,"byte_end":101549,"line_start":424,"line_end":424,"column_start":5,"column_end":122}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101554,"byte_end":101603,"line_start":425,"line_end":425,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2133},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101916,"byte_end":101932,"line_start":433,"line_end":433,"column_start":12,"column_end":28},"name":"ObjectValidation","qualname":"::schema::ObjectValidation","value":"ObjectValidation { max_properties, min_properties, required, properties, pattern_properties, additional_properties, property_names }","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for objects.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101646,"byte_end":101730,"line_start":429,"line_end":429,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101861,"byte_end":101904,"line_start":432,"line_end":432,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2134},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102187,"byte_end":102201,"line_start":438,"line_end":438,"column_start":9,"column_end":23},"name":"max_properties","qualname":"::schema::ObjectValidation::max_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The `maxProperties` keyword.","sig":null,"attributes":[{"value":"/ The `maxProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101939,"byte_end":101971,"line_start":434,"line_end":434,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101976,"byte_end":101979,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.1. \"maxProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":101984,"byte_end":102124,"line_start":436,"line_end":436,"column_start":5,"column_end":145}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102129,"byte_end":102178,"line_start":437,"line_end":437,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2135},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102468,"byte_end":102482,"line_start":443,"line_end":443,"column_start":9,"column_end":23},"name":"min_properties","qualname":"::schema::ObjectValidation::min_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The `minProperties` keyword.","sig":null,"attributes":[{"value":"/ The `minProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102220,"byte_end":102252,"line_start":439,"line_end":439,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102257,"byte_end":102260,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.2. \"minProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102265,"byte_end":102405,"line_start":441,"line_end":441,"column_start":5,"column_end":145}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102410,"byte_end":102459,"line_start":442,"line_end":442,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2136},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102737,"byte_end":102745,"line_start":448,"line_end":448,"column_start":9,"column_end":17},"name":"required","qualname":"::schema::ObjectValidation::required","value":"std::collections::BTreeSet<std::string::String>","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The `required` keyword.","sig":null,"attributes":[{"value":"/ The `required` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102501,"byte_end":102528,"line_start":444,"line_end":444,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102533,"byte_end":102536,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.3. \"required\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102541,"byte_end":102676,"line_start":446,"line_end":446,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Set::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102681,"byte_end":102728,"line_start":447,"line_end":447,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2137},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102986,"byte_end":102996,"line_start":453,"line_end":453,"column_start":9,"column_end":19},"name":"properties","qualname":"::schema::ObjectValidation::properties","value":"indexmap::IndexMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The `properties` keyword.","sig":null,"attributes":[{"value":"/ The `properties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102764,"byte_end":102793,"line_start":449,"line_end":449,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102798,"byte_end":102801,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.1. \"properties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102806,"byte_end":102925,"line_start":451,"line_end":451,"column_start":5,"column_end":124}},{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":102930,"byte_end":102977,"line_start":452,"line_end":452,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2138},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103259,"byte_end":103277,"line_start":458,"line_end":458,"column_start":9,"column_end":27},"name":"pattern_properties","qualname":"::schema::ObjectValidation::pattern_properties","value":"indexmap::IndexMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The `patternProperties` keyword.","sig":null,"attributes":[{"value":"/ The `patternProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103023,"byte_end":103059,"line_start":454,"line_end":454,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103064,"byte_end":103067,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.2. \"patternProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103072,"byte_end":103198,"line_start":456,"line_end":456,"column_start":5,"column_end":131}},{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103203,"byte_end":103250,"line_start":457,"line_end":457,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2139},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103548,"byte_end":103569,"line_start":463,"line_end":463,"column_start":9,"column_end":30},"name":"additional_properties","qualname":"::schema::ObjectValidation::additional_properties","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The `additionalProperties` keyword.","sig":null,"attributes":[{"value":"/ The `additionalProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103304,"byte_end":103343,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103348,"byte_end":103351,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.3. \"additionalProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103356,"byte_end":103485,"line_start":461,"line_end":461,"column_start":5,"column_end":134}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103490,"byte_end":103539,"line_start":462,"line_end":462,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2140},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103826,"byte_end":103840,"line_start":468,"line_end":468,"column_start":9,"column_end":23},"name":"property_names","qualname":"::schema::ObjectValidation::property_names","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The `propertyNames` keyword.","sig":null,"attributes":[{"value":"/ The `propertyNames` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103596,"byte_end":103628,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103633,"byte_end":103636,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.5. \"propertyNames\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.5).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103641,"byte_end":103763,"line_start":466,"line_end":466,"column_start":5,"column_end":127}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103768,"byte_end":103817,"line_start":467,"line_end":467,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2215},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104269,"byte_end":104273,"line_start":478,"line_end":478,"column_start":5,"column_end":9},"name":"Null","qualname":"::schema::InstanceType::Null","value":"InstanceType::Null","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2217},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104279,"byte_end":104286,"line_start":479,"line_end":479,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::schema::InstanceType::Boolean","value":"InstanceType::Boolean","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2219},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104292,"byte_end":104298,"line_start":480,"line_end":480,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::InstanceType::Object","value":"InstanceType::Object","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2221},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104304,"byte_end":104309,"line_start":481,"line_end":481,"column_start":5,"column_end":10},"name":"Array","qualname":"::schema::InstanceType::Array","value":"InstanceType::Array","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2223},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104315,"byte_end":104321,"line_start":482,"line_end":482,"column_start":5,"column_end":11},"name":"Number","qualname":"::schema::InstanceType::Number","value":"InstanceType::Number","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2225},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104327,"byte_end":104333,"line_start":483,"line_end":483,"column_start":5,"column_end":11},"name":"String","qualname":"::schema::InstanceType::String","value":"InstanceType::String","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2227},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104339,"byte_end":104346,"line_start":484,"line_end":484,"column_start":5,"column_end":12},"name":"Integer","qualname":"::schema::InstanceType::Integer","value":"InstanceType::Integer","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2214},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104250,"byte_end":104262,"line_start":477,"line_end":477,"column_start":10,"column_end":22},"name":"InstanceType","qualname":"::schema::InstanceType","value":"pub enum InstanceType {\n    Null,\n    Boolean,\n    Object,\n    Array,\n    Number,\n    String,\n    Integer,\n}","parent":null,"children":[{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2227}],"decl_id":null,"docs":" The possible types of values in JSON Schema documents.","sig":null,"attributes":[{"value":"/ The possible types of values in JSON Schema documents.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103866,"byte_end":103924,"line_start":471,"line_end":471,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103925,"byte_end":103928,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ See [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":103929,"byte_end":104051,"line_start":473,"line_end":473,"column_start":1,"column_end":123}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104206,"byte_end":104240,"line_start":476,"line_end":476,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2269},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104715,"byte_end":104721,"line_start":494,"line_end":494,"column_start":5,"column_end":11},"name":"Single","qualname":"::schema::SingleOrVec::Single","value":"SingleOrVec::Single(Box<T>)","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2272},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104735,"byte_end":104738,"line_start":495,"line_end":495,"column_start":5,"column_end":8},"name":"Vec","qualname":"::schema::SingleOrVec::Vec","value":"SingleOrVec::Vec(Vec<T>)","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2267},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104694,"byte_end":104705,"line_start":493,"line_end":493,"column_start":10,"column_end":21},"name":"SingleOrVec","qualname":"::schema::SingleOrVec","value":"pub enum SingleOrVec<T> { Single(Box<T>), Vec(Vec<T>), }","parent":null,"children":[{"krate":0,"index":2269},{"krate":0,"index":2272}],"decl_id":null,"docs":" A type which can be serialized as a single item, or multiple items.","sig":null,"attributes":[{"value":"/ A type which can be serialized as a single item, or multiple items.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104351,"byte_end":104422,"line_start":487,"line_end":487,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104423,"byte_end":104426,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ In some contexts, a `Single` may be semantically distinct from a `Vec` containing only item.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104427,"byte_end":104523,"line_start":489,"line_end":489,"column_start":1,"column_end":97}},{"value":"serde(untagged)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104666,"byte_end":104684,"line_start":492,"line_end":492,"column_start":1,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":561},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::visit","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":2275},{"krate":0,"index":2277},{"krate":0,"index":2279},{"krate":0,"index":593},{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":596},{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2291},{"krate":0,"index":598}],"decl_id":null,"docs":"Contains the [`Visitor`] trait, used to recursively modify a constructed schema and its subschemas.","sig":null,"attributes":[{"value":"*\nContains the [`Visitor`] trait, used to recursively modify a constructed schema and its subschemas.\n\nSometimes you may want to apply a change to a schema, as well as all schemas contained within it.\nThe easiest way to achieve this is by defining a type that implements [`Visitor`].\nAll methods of `Visitor` have a default implementation that makes no change but recursively visits all subschemas.\nWhen overriding one of these methods, you will *usually* want to still call this default implementation.\n\n# Example\nTo add a custom property to all schemas:\n```\nuse schemars::schema::SchemaObject;\nuse schemars::visit::{Visitor, visit_schema_object};\n\npub struct MyVisitor;\n\nimpl Visitor for MyVisitor {\n    fn visit_schema_object(&mut self, schema: &mut SchemaObject) {\n        // First, make our change to this schema\n        schema.extensions.insert(\"my_property\".to_string(), serde_json::json!(\"hello world\"));\n\n        // Then delegate to default implementation to visit any subschemas\n        visit_schema_object(self, schema);\n    }\n}\n```\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":105500,"byte_end":106548,"line_start":1,"line_end":27,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":575},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":106706,"byte_end":106713,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"Visitor","qualname":"::visit::Visitor","value":"Visitor","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578}],"decl_id":null,"docs":" Trait used to recursively modify a constructed schema and its subschemas.\n","sig":null,"attributes":[{"value":"/ Trait used to recursively modify a constructed schema and its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":106618,"byte_end":106695,"line_start":30,"line_end":30,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":106943,"byte_end":106960,"line_start":35,"line_end":35,"column_start":8,"column_end":25},"name":"visit_root_schema","qualname":"::visit::Visitor::visit_root_schema","value":"pub fn visit_root_schema(&mut Self, &mut RootSchema)","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" Override this method to modify a [`RootSchema`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`RootSchema`] and (optionally) its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":106720,"byte_end":106804,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":106809,"byte_end":106812,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_root_schema`] function to visit subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":106817,"byte_end":106935,"line_start":34,"line_end":34,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107260,"byte_end":107272,"line_start":42,"line_end":42,"column_start":8,"column_end":20},"name":"visit_schema","qualname":"::visit::Visitor::visit_schema","value":"pub fn visit_schema(&mut Self, &mut Schema)","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" Override this method to modify a [`Schema`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`Schema`] and (optionally) its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107046,"byte_end":107126,"line_start":39,"line_end":39,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107131,"byte_end":107134,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_schema`] function to visit subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107139,"byte_end":107252,"line_start":41,"line_end":41,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107580,"byte_end":107599,"line_start":49,"line_end":49,"column_start":8,"column_end":27},"name":"visit_schema_object","qualname":"::visit::Visitor::visit_schema_object","value":"pub fn visit_schema_object(&mut Self, &mut SchemaObject)","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" Override this method to modify a [`SchemaObject`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`SchemaObject`] and (optionally) its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107353,"byte_end":107439,"line_start":46,"line_end":46,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107444,"byte_end":107447,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_schema_object`] function to visit subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107452,"byte_end":107572,"line_start":48,"line_end":48,"column_start":5,"column_end":125}}]},{"kind":"Function","id":{"krate":0,"index":579},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107747,"byte_end":107764,"line_start":55,"line_end":55,"column_start":8,"column_end":25},"name":"visit_root_schema","qualname":"::visit::visit_root_schema","value":"pub fn visit_root_schema<V: Visitor + ?Sized>(&mut V, &mut RootSchema)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`RootSchema`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`RootSchema`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107691,"byte_end":107739,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":581},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107970,"byte_end":107982,"line_start":61,"line_end":61,"column_start":8,"column_end":20},"name":"visit_schema","qualname":"::visit::visit_schema","value":"pub fn visit_schema<V: Visitor + ?Sized>(&mut V, &mut Schema)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`Schema`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`Schema`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":107918,"byte_end":107962,"line_start":60,"line_end":60,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":583},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108188,"byte_end":108207,"line_start":68,"line_end":68,"column_start":8,"column_end":27},"name":"visit_schema_object","qualname":"::visit::visit_schema_object","value":"pub fn visit_schema_object<V: Visitor + ?Sized>(&mut V, &mut SchemaObject)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`SchemaObject`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`SchemaObject`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":108130,"byte_end":108180,"line_start":67,"line_end":67,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2275},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":110117,"byte_end":110135,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"ReplaceBoolSchemas","qualname":"::visit::ReplaceBoolSchemas","value":"ReplaceBoolSchemas { skip_additional_properties }","parent":null,"children":[{"krate":0,"index":2276}],"decl_id":null,"docs":" This visitor will replace all boolean JSON Schemas with equivalent object schemas.","sig":null,"attributes":[{"value":"/ This visitor will replace all boolean JSON Schemas with equivalent object schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":109884,"byte_end":109970,"line_start":125,"line_end":125,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":109971,"byte_end":109974,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. OpenAPI 3.0) that do not support booleans as schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":109975,"byte_end":110081,"line_start":127,"line_end":127,"column_start":1,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":2276},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":110253,"byte_end":110279,"line_start":131,"line_end":131,"column_start":9,"column_end":35},"name":"skip_additional_properties","qualname":"::visit::ReplaceBoolSchemas::skip_additional_properties","value":"bool","parent":{"krate":0,"index":2275},"children":[],"decl_id":null,"docs":" When set to `true`, a schema's `additionalProperties` property will not be changed from a boolean.\n","sig":null,"attributes":[{"value":"/ When set to `true`, a schema's `additionalProperties` property will not be changed from a boolean.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":110142,"byte_end":110244,"line_start":130,"line_end":130,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":2281},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111494,"byte_end":111511,"line_start":166,"line_end":166,"column_start":12,"column_end":29},"name":"RemoveRefSiblings","qualname":"::visit::RemoveRefSiblings","value":"","parent":null,"children":[],"decl_id":null,"docs":" This visitor will restructure JSON Schema objects so that the `$ref` property will never appear alongside any other properties.","sig":null,"attributes":[{"value":"/ This visitor will restructure JSON Schema objects so that the `$ref` property will never appear alongside any other properties.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111206,"byte_end":111337,"line_start":162,"line_end":162,"column_start":1,"column_end":132}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111338,"byte_end":111341,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. Draft 7) that do not support other properties alongside `$ref`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111342,"byte_end":111458,"line_start":164,"line_end":164,"column_start":1,"column_end":117}}]},{"kind":"Struct","id":{"krate":0,"index":2287},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112442,"byte_end":112458,"line_start":191,"line_end":191,"column_start":12,"column_end":28},"name":"SetSingleExample","qualname":"::visit::SetSingleExample","value":"SetSingleExample { retain_examples }","parent":null,"children":[{"krate":0,"index":2288}],"decl_id":null,"docs":" This visitor will remove the `examples` schema property and (if present) set its first value as the `example` property.","sig":null,"attributes":[{"value":"/ This visitor will remove the `examples` schema property and (if present) set its first value as the `example` property.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112168,"byte_end":112291,"line_start":187,"line_end":187,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112292,"byte_end":112295,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. OpenAPI 3.0) that do not support the `examples` property.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112296,"byte_end":112406,"line_start":189,"line_end":189,"column_start":1,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":2288},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112597,"byte_end":112612,"line_start":193,"line_end":193,"column_start":9,"column_end":24},"name":"retain_examples","qualname":"::visit::SetSingleExample::retain_examples","value":"bool","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" When set to `true`, the `examples` property will not be removed, but its first value will still be copied to `example`.\n","sig":null,"attributes":[{"value":"/ When set to `true`, the `examples` property will not be removed, but its first value will still be copied to `example`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112465,"byte_end":112588,"line_start":192,"line_end":192,"column_start":5,"column_end":128}}]},{"kind":"Trait","id":{"krate":0,"index":613},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9962,"byte_end":9972,"line_start":336,"line_end":336,"column_start":11,"column_end":21},"name":"JsonSchema","qualname":"::JsonSchema","value":"JsonSchema","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":" A type which can be described as a JSON Schema document.","sig":null,"attributes":[{"value":"/ A type which can be described as a JSON Schema document.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9512,"byte_end":9572,"line_start":319,"line_end":319,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9573,"byte_end":9576,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ This is implemented for many Rust primitive and standard library types.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9577,"byte_end":9652,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9653,"byte_end":9656,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ This can also be automatically derived on most custom types with `#[derive(JsonSchema)]`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9657,"byte_end":9750,"line_start":323,"line_end":323,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9751,"byte_end":9754,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9755,"byte_end":9768,"line_start":325,"line_end":325,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9769,"byte_end":9776,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ use schemars::{schema_for, JsonSchema};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9777,"byte_end":9820,"line_start":327,"line_end":327,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9821,"byte_end":9824,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9825,"byte_end":9850,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9851,"byte_end":9872,"line_start":330,"line_end":330,"column_start":1,"column_end":22}},{"value":"/     foo: i32,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9873,"byte_end":9890,"line_start":331,"line_end":331,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9891,"byte_end":9896,"line_start":332,"line_end":332,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9897,"byte_end":9900,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ let my_schema = schema_for!(MyStruct);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9901,"byte_end":9943,"line_start":334,"line_end":334,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9944,"byte_end":9951,"line_start":335,"line_end":335,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10385,"byte_end":10401,"line_start":343,"line_end":343,"column_start":8,"column_end":24},"name":"is_referenceable","qualname":"::JsonSchema::is_referenceable","value":"pub fn is_referenceable() -> bool","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Whether JSON Schemas generated for this type should be re-used where possible using the `$ref` keyword.","sig":null,"attributes":[{"value":"/ Whether JSON Schemas generated for this type should be re-used where possible using the `$ref` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9979,"byte_end":10086,"line_start":337,"line_end":337,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10091,"byte_end":10094,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ For trivial types (such as primitives), this should return `false`. For more complex types, it should return `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10099,"byte_end":10219,"line_start":339,"line_end":339,"column_start":5,"column_end":125}},{"value":"/ For recursive types, this **must** return `true` to prevent infinite cycles when generating schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10224,"byte_end":10328,"line_start":340,"line_end":340,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10333,"byte_end":10336,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ By default, this returns `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10341,"byte_end":10377,"line_start":342,"line_end":342,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10617,"byte_end":10628,"line_start":350,"line_end":350,"column_start":8,"column_end":19},"name":"schema_name","qualname":"::JsonSchema::schema_name","value":"pub fn schema_name() -> String","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The name of the generated JSON Schema.","sig":null,"attributes":[{"value":"/ The name of the generated JSON Schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10438,"byte_end":10480,"line_start":347,"line_end":347,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10485,"byte_end":10488,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This is used as the title for root schemas, and the key within the root's `definitions` property for subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10493,"byte_end":10609,"line_start":349,"line_end":349,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10972,"byte_end":10983,"line_start":358,"line_end":358,"column_start":8,"column_end":19},"name":"json_schema","qualname":"::JsonSchema::json_schema","value":"pub fn json_schema(&mut gen::SchemaGenerator) -> Schema","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Generates a JSON Schema for this type.","sig":null,"attributes":[{"value":"/ Generates a JSON Schema for this type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10647,"byte_end":10689,"line_start":352,"line_end":352,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10694,"byte_end":10697,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If the returned schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10702,"byte_end":10820,"line_start":354,"line_end":354,"column_start":5,"column_end":123}},{"value":"/ add them to the [`SchemaGenerator`](gen::SchemaGenerator)'s schema definitions.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10825,"byte_end":10908,"line_start":355,"line_end":355,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10913,"byte_end":10916,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This should not return a `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":10921,"byte_end":10964,"line_start":357,"line_end":357,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11280,"byte_end":11303,"line_start":365,"line_end":365,"column_start":8,"column_end":31},"name":"json_schema_for_flatten","qualname":"::JsonSchema::json_schema_for_flatten","value":"pub fn json_schema_for_flatten(&mut gen::SchemaGenerator) -> Schema","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Helper for generating schemas for flattened `Option` fields.","sig":null,"attributes":[{"value":"/ Helper for generating schemas for flattened `Option` fields.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11032,"byte_end":11096,"line_start":360,"line_end":360,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11101,"byte_end":11104,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This should not need to be called or implemented by code outside of `schemars`,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11109,"byte_end":11192,"line_start":362,"line_end":362,"column_start":5,"column_end":88}},{"value":"/ and should not be considered part of the public API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11197,"byte_end":11253,"line_start":363,"line_end":363,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11628,"byte_end":11650,"line_start":374,"line_end":374,"column_start":8,"column_end":30},"name":"add_schema_as_property","qualname":"::JsonSchema::add_schema_as_property","value":"pub fn add_schema_as_property(&mut gen::SchemaGenerator, &mut SchemaObject,\n                              String, Option<schema::Metadata>, bool)","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Helper for generating schemas for `Option` fields.","sig":null,"attributes":[{"value":"/ Helper for generating schemas for `Option` fields.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11390,"byte_end":11444,"line_start":369,"line_end":369,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11449,"byte_end":11452,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This should not need to be called or implemented by code outside of `schemars`,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11457,"byte_end":11540,"line_start":371,"line_end":371,"column_start":5,"column_end":88}},{"value":"/ and should not be considered part of the public API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":11545,"byte_end":11601,"line_start":372,"line_end":372,"column_start":5,"column_end":61}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13119,"byte_end":13125,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":14395,"byte_end":14403,"line_start":47,"line_end":47,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15516,"byte_end":15522,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15752,"byte_end":15755,"line_start":93,"line_end":93,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15886,"byte_end":15889,"line_start":100,"line_end":100,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16012,"byte_end":16015,"line_start":107,"line_end":107,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16184,"byte_end":16187,"line_start":117,"line_end":117,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16304,"byte_end":16315,"line_start":124,"line_end":124,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":22109,"byte_end":22115,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":24714,"byte_end":24720,"line_start":85,"line_end":85,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":25749,"byte_end":25754,"line_start":115,"line_end":115,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":27086,"byte_end":27091,"line_start":155,"line_end":155,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/ffi.rs","byte_start":30095,"byte_end":30103,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/serdejson.rs","byte_start":40656,"byte_end":40661,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/serdejson.rs","byte_start":40932,"byte_end":40938,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/time.rs","byte_start":41414,"byte_end":41422,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/time.rs","byte_start":42059,"byte_end":42069,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":47814,"byte_end":47824,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":55640,"byte_end":55650,"line_start":304,"line_end":304,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":55991,"byte_end":56001,"line_start":320,"line_end":320,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":56383,"byte_end":56395,"line_start":340,"line_end":340,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":57545,"byte_end":57559,"line_start":380,"line_end":380,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":58604,"byte_end":58618,"line_start":417,"line_end":417,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":59015,"byte_end":59027,"line_start":433,"line_end":433,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":60492,"byte_end":60504,"line_start":485,"line_end":485,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66353,"byte_end":66367,"line_start":52,"line_end":52,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66455,"byte_end":66469,"line_start":58,"line_end":58,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69972,"byte_end":69987,"line_start":159,"line_end":159,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70230,"byte_end":70245,"line_start":169,"line_end":169,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70344,"byte_end":70359,"line_start":175,"line_end":175,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80856,"byte_end":80874,"line_start":448,"line_end":448,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81126,"byte_end":81144,"line_start":455,"line_end":455,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82355,"byte_end":82356,"line_start":496,"line_end":496,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83686,"byte_end":83692,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85339,"byte_end":85345,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85442,"byte_end":85448,"line_start":81,"line_end":81,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91170,"byte_end":91182,"line_start":207,"line_end":207,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92233,"byte_end":92245,"line_start":235,"line_end":235,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104771,"byte_end":104782,"line_start":498,"line_end":498,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104901,"byte_end":104912,"line_start":504,"line_end":504,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":110307,"byte_end":110325,"line_start":134,"line_end":134,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111531,"byte_end":111548,"line_start":168,"line_end":168,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112640,"byte_end":112656,"line_start":196,"line_end":196,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9205,"byte_end":9208,"line_start":304,"line_end":304,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":427}},{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9218,"byte_end":9224,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":515}},{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/lib.rs","byte_start":9234,"byte_end":9239,"line_start":306,"line_end":306,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":561}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13119,"byte_end":13125,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":13624,"byte_end":13629,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2854},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":14395,"byte_end":14403,"line_start":47,"line_end":47,"column_start":16,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1768},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15516,"byte_end":15522,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":32963},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15752,"byte_end":15755,"line_start":93,"line_end":93,"column_start":26,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":15886,"byte_end":15889,"line_start":100,"line_end":100,"column_start":19,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":6780},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16012,"byte_end":16015,"line_start":107,"line_end":107,"column_start":22,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16184,"byte_end":16187,"line_start":117,"line_end":117,"column_start":24,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":6},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/flatten.rs","byte_start":16304,"byte_end":16315,"line_start":124,"line_end":124,"column_start":16,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2267},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":22109,"byte_end":22115,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":2,"index":32963},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":24714,"byte_end":24720,"line_start":85,"line_end":85,"column_start":51,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":33095},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":25749,"byte_end":25754,"line_start":115,"line_end":115,"column_start":36,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":2,"index":31673},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/core.rs","byte_start":27086,"byte_end":27091,"line_start":155,"line_end":155,"column_start":36,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":2,"index":31558},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/ffi.rs","byte_start":30095,"byte_end":30103,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":2790},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/serdejson.rs","byte_start":40656,"byte_end":40661,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"kind":{"Impl":{"id":67}},"from":{"krate":15,"index":2535},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/serdejson.rs","byte_start":40932,"byte_end":40938,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":15,"index":3112},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/time.rs","byte_start":41414,"byte_end":41422,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":2,"index":35489},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/json_schema_impls/time.rs","byte_start":42059,"byte_end":42069,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"kind":{"Impl":{"id":71}},"from":{"krate":1,"index":10379},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":47814,"byte_end":47824,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":323},"to":{"krate":16,"index":2014}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":55640,"byte_end":55650,"line_start":304,"line_end":304,"column_start":44,"column_end":54},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":323},"to":{"krate":16,"index":2082}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":55991,"byte_end":56001,"line_start":320,"line_end":320,"column_start":45,"column_end":55},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":323},"to":{"krate":16,"index":2106}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":56383,"byte_end":56395,"line_start":340,"line_end":340,"column_start":35,"column_end":47},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":327},"to":{"krate":16,"index":2064}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":57545,"byte_end":57559,"line_start":380,"line_end":380,"column_start":37,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":331},"to":{"krate":16,"index":2070}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":58604,"byte_end":58618,"line_start":417,"line_end":417,"column_start":43,"column_end":57},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":331},"to":{"krate":16,"index":2076}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":59015,"byte_end":59027,"line_start":433,"line_end":433,"column_start":35,"column_end":47},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":336},"to":{"krate":16,"index":2088}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/ser.rs","byte_start":60492,"byte_end":60504,"line_start":485,"line_end":485,"column_start":38,"column_end":50},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":336},"to":{"krate":16,"index":2099}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66353,"byte_end":66367,"line_start":52,"line_end":52,"column_start":18,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1408},"to":{"krate":2,"index":2827}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":66455,"byte_end":66469,"line_start":58,"line_end":58,"column_start":6,"column_end":20},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":69972,"byte_end":69987,"line_start":159,"line_end":159,"column_start":16,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1420},"to":{"krate":2,"index":2470}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70230,"byte_end":70245,"line_start":169,"line_end":169,"column_start":31,"column_end":46},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1420},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":70344,"byte_end":70359,"line_start":175,"line_end":175,"column_start":6,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":80856,"byte_end":80874,"line_start":448,"line_end":448,"column_start":18,"column_end":36},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":81126,"byte_end":81144,"line_start":455,"line_end":455,"column_start":23,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82102,"byte_end":82109,"line_start":489,"line_end":489,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":575},"to":{"krate":0,"index":510}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82112,"byte_end":82117,"line_start":489,"line_end":489,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":8898},"to":{"krate":0,"index":510}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82120,"byte_end":82128,"line_start":489,"line_end":489,"column_start":41,"column_end":49},"kind":"SuperTrait","from":{"krate":22,"index":35},"to":{"krate":0,"index":510}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82131,"byte_end":82134,"line_start":489,"line_end":489,"column_start":52,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":3512},"to":{"krate":0,"index":510}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/gen.rs","byte_start":82355,"byte_end":82356,"line_start":496,"line_end":496,"column_start":24,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":513},"to":{"krate":0,"index":510}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":83686,"byte_end":83692,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85339,"byte_end":85345,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1461},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":85442,"byte_end":85448,"line_start":81,"line_end":81,"column_start":21,"column_end":27},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1461},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":91170,"byte_end":91182,"line_start":207,"line_end":207,"column_start":6,"column_end":18},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":92233,"byte_end":92245,"line_start":235,"line_end":235,"column_start":23,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104771,"byte_end":104782,"line_start":498,"line_end":498,"column_start":21,"column_end":32},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2267},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/schema.rs","byte_start":104901,"byte_end":104912,"line_start":504,"line_end":504,"column_start":26,"column_end":37},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2267},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":110307,"byte_end":110325,"line_start":134,"line_end":134,"column_start":18,"column_end":36},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2275},"to":{"krate":0,"index":575}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":111531,"byte_end":111548,"line_start":168,"line_end":168,"column_start":18,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2281},"to":{"krate":0,"index":575}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.3/src/visit.rs","byte_start":112640,"byte_end":112656,"line_start":196,"line_end":196,"column_start":18,"column_end":34},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2287},"to":{"krate":0,"index":575}}]}