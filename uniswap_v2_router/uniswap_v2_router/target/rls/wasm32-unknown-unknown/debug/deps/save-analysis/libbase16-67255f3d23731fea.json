{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1","program":"/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","base16","--edition=2018","/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"std\"","-C","metadata=67255f3d23731fea","-C","extra-filename=-67255f3d23731fea","--out-dir","/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/wasm32-unknown-unknown/debug/deps","--target","wasm32-unknown-unknown","-L","dependency=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/wasm32-unknown-unknown/debug/deps","-L","dependency=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu"],"output":"/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/contract/target/rls/wasm32-unknown-unknown/debug/deps/libbase16-67255f3d23731fea.rmeta"},"prelude":{"crate_id":{"name":"base16","disambiguator":[13909794218778023803,15996866013046129198]},"crate_root":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src","external_crates":[{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11865821141934753578,5519277996181205567]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10148827511062627880,13930310743981648994]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9594479946368871028,14826268177814129219]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1826318154200867672,13445872508185864674]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9780591927076023331,10878654213149572839]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7886481380398478283,13937001059064309516]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9963837671840799044,3901380288075133405]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12786505151488604328,5222456687545406474]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8562690528049212392,6230403454530380583]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16512717484854217878,12586115314642539452]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16012675576530202080,5269810570551980679]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[8342199551088758819,7923433523174326448]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","num":13,"id":{"name":"dlmalloc","disambiguator":[13191343612433092663,14932973469399816907]}}],"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":0,"byte_end":22552,"line_start":1,"line_end":639,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":3497,"byte_end":3498,"line_start":72,"line_end":72,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"EncodeLower, EncodeUpper","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":0,"byte_end":22552,"line_start":1,"line_end":639,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":61},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":84},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"decl_id":null,"docs":" This is a base16 (e.g. hexadecimal) encoding and decoding library with an\n emphasis on performance. The API is very similar and inspired by the base64\n crate's API, however it's less complex (base16 is much more simple than\n base64).","sig":null,"attributes":[{"value":"/ This is a base16 (e.g. hexadecimal) encoding and decoding library with an","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ emphasis on performance. The API is very similar and inspired by the base64","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":78,"byte_end":157,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ crate's API, however it's less complex (base16 is much more simple than","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":158,"byte_end":233,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ base64).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":234,"byte_end":246,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":247,"byte_end":250,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":251,"byte_end":265,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":266,"byte_end":269,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The config options at the moment are limited to the output case (upper vs","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":270,"byte_end":347,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ lower).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":348,"byte_end":359,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":360,"byte_end":363,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ | Function                           | Output                       | Allocates               | Requires `alloc` feature |","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":364,"byte_end":490,"line_start":11,"line_end":11,"column_start":1,"column_end":127}},{"value":"/ | ---------------------------------- | ---------------------------- | ----------------------- | ------------------------ |","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":491,"byte_end":617,"line_start":12,"line_end":12,"column_start":1,"column_end":127}},{"value":"/ | [`encode_upper`], [`encode_lower`] | Returns a new `String`       | Always                  | Yes                      |","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":618,"byte_end":744,"line_start":13,"line_end":13,"column_start":1,"column_end":127}},{"value":"/ | [`encode_config`]                  | Returns a new `String`       | Always                  | Yes                      |","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":745,"byte_end":871,"line_start":14,"line_end":14,"column_start":1,"column_end":127}},{"value":"/ | [`encode_config_buf`]              | Appends to provided `String` | If buffer needs to grow | Yes                      |","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":872,"byte_end":998,"line_start":15,"line_end":15,"column_start":1,"column_end":127}},{"value":"/ | [`encode_config_slice`]            | Writes to provided `&[u8]`   | Never                   | No                       |","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":999,"byte_end":1125,"line_start":16,"line_end":16,"column_start":1,"column_end":127}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1126,"byte_end":1129,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1130,"byte_end":1144,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1145,"byte_end":1148,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Note that there are no config options (In the future one might be added to","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1149,"byte_end":1227,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ restrict the input character set, but it's not clear to me that this is","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1228,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ useful).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1304,"byte_end":1316,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1317,"byte_end":1320,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ | Function          | Output                        | Allocates               | Requires `alloc` feature |","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1321,"byte_end":1431,"line_start":24,"line_end":24,"column_start":1,"column_end":111}},{"value":"/ | ----------------- | ----------------------------- | ----------------------- | ------------------------ |","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1432,"byte_end":1542,"line_start":25,"line_end":25,"column_start":1,"column_end":111}},{"value":"/ | [`decode`]        | Returns a new `Vec<u8>`       | Always                  | Yes                      |","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1543,"byte_end":1653,"line_start":26,"line_end":26,"column_start":1,"column_end":111}},{"value":"/ | [`decode_slice`]  | Writes to provided `&[u8]`    | Never                   | No                       |","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1654,"byte_end":1764,"line_start":27,"line_end":27,"column_start":1,"column_end":111}},{"value":"/ | [`decode_buf`]    | Appends to provided `Vec<u8>` | If buffer needs to grow | Yes                      |","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1765,"byte_end":1875,"line_start":28,"line_end":28,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1876,"byte_end":1879,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1880,"byte_end":1894,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1895,"byte_end":1898,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This crate has two features, both are enabled by default and exist to allow","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1899,"byte_end":1978,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ users in `no_std` environments to disable various portions of .","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":1979,"byte_end":2046,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2047,"byte_end":2050,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ - The `\"alloc\"` feature, which is on by default, adds a number of helpful","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2051,"byte_end":2128,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/   functions that require use of the [`alloc`][alloc_crate] crate, but not the","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2129,"byte_end":2210,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/   rest of `std`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2211,"byte_end":2231,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/     - This is `no_std` compatible.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2232,"byte_end":2270,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/     - Each function should list whether or not it requires this feature","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2271,"byte_end":2346,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/       under the `Availability` of its documentation.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2347,"byte_end":2403,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2404,"byte_end":2407,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - The `\"std\"` feature, which is on by default, enables the `\"alloc\"`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2408,"byte_end":2480,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/   feature, and additionally makes [`DecodeError`] implement the","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2481,"byte_end":2548,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/   `std::error::Error` trait.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2549,"byte_end":2581,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2582,"byte_end":2585,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     - Frustratingly, this trait is in `std` (and not in `core` or `alloc`),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2586,"byte_end":2665,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/       but not implementing it would be quite annoying for some users, so","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2666,"byte_end":2742,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/       it's kept, even though it's what prevents us from being `no_std`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2743,"byte_end":2817,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/       compatible in all configurations.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2818,"byte_end":2861,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2862,"byte_end":2865,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [alloc_crate]: https://doc.rust-lang.org/alloc/index.html","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2866,"byte_end":2927,"line_start":51,"line_end":51,"column_start":1,"column_end":62}},{"value":"deny(missing_docs)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":2972,"byte_end":2994,"line_start":54,"line_end":54,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":62},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":3381,"byte_end":3392,"line_start":67,"line_end":67,"column_start":5,"column_end":16},"name":"EncodeLower","qualname":"::EncConfig::EncodeLower","value":"EncConfig::EncodeLower","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Encode using lower case characters for hex values >= 10\n","sig":null,"attributes":[{"value":"/ Encode using lower case characters for hex values >= 10","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":3317,"byte_end":3376,"line_start":66,"line_end":66,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":64},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":3462,"byte_end":3473,"line_start":69,"line_end":69,"column_start":5,"column_end":16},"name":"EncodeUpper","qualname":"::EncConfig::EncodeUpper","value":"EncConfig::EncodeUpper","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Encode using upper case characters for hex values >= 10\n","sig":null,"attributes":[{"value":"/ Encode using upper case characters for hex values >= 10","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":3398,"byte_end":3457,"line_start":68,"line_end":68,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":61},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":3301,"byte_end":3310,"line_start":65,"line_end":65,"column_start":10,"column_end":19},"name":"EncConfig","qualname":"::EncConfig","value":"pub enum EncConfig { EncodeLower, EncodeUpper, }","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":64}],"decl_id":null,"docs":" Configuration options for encoding. Just specifies whether or not output\n should be uppercase or lowercase.\n","sig":null,"attributes":[{"value":"/ Configuration options for encoding. Just specifies whether or not output","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":3109,"byte_end":3185,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ should be uppercase or lowercase.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":3186,"byte_end":3223,"line_start":63,"line_end":63,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5348,"byte_end":5360,"line_start":133,"line_end":133,"column_start":8,"column_end":20},"name":"encode_lower","qualname":"::encode_lower","value":"pub fn encode_lower<T: ?Sized + AsRef<[u8]>>(&T) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encode bytes as base16, using lower case characters for nibbles between 10\n and 15 (`a` through `f`).","sig":null,"attributes":[{"value":"/ Encode bytes as base16, using lower case characters for nibbles between 10","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":4789,"byte_end":4867,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/ and 15 (`a` through `f`).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":4868,"byte_end":4897,"line_start":116,"line_end":116,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":4898,"byte_end":4901,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to `base16::encode_config(bytes, base16::EncodeUpper)`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":4902,"byte_end":4980,"line_start":118,"line_end":118,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":4981,"byte_end":4984,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":4985,"byte_end":4998,"line_start":120,"line_end":120,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":4999,"byte_end":5002,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5003,"byte_end":5010,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(base16::encode_lower(b\"Hello World\"), \"48656c6c6f20576f726c64\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5011,"byte_end":5090,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(base16::encode_lower(&[0xff, 0xcc, 0xaa]), \"ffccaa\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5091,"byte_end":5159,"line_start":124,"line_end":124,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5160,"byte_end":5167,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5168,"byte_end":5171,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5172,"byte_end":5190,"line_start":127,"line_end":127,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5191,"byte_end":5194,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `alloc` feature is enabled, as it","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5195,"byte_end":5273,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ needs to produce a String.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5274,"byte_end":5304,"line_start":130,"line_end":130,"column_start":1,"column_end":31}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5305,"byte_end":5330,"line_start":131,"line_end":131,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5331,"byte_end":5340,"line_start":132,"line_end":132,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6023,"byte_end":6035,"line_start":155,"line_end":155,"column_start":8,"column_end":20},"name":"encode_upper","qualname":"::encode_upper","value":"pub fn encode_upper<T: ?Sized + AsRef<[u8]>>(&T) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encode bytes as base16, using upper case characters for nibbles between\n 10 and 15 (`A` through `F`).","sig":null,"attributes":[{"value":"/ Encode bytes as base16, using upper case characters for nibbles between","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5462,"byte_end":5537,"line_start":137,"line_end":137,"column_start":1,"column_end":76}},{"value":"/ 10 and 15 (`A` through `F`).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5538,"byte_end":5570,"line_start":138,"line_end":138,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5571,"byte_end":5574,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to `base16::encode_config(bytes, base16::EncodeUpper)`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5575,"byte_end":5653,"line_start":140,"line_end":140,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5654,"byte_end":5657,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5658,"byte_end":5671,"line_start":142,"line_end":142,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5672,"byte_end":5675,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5676,"byte_end":5683,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(base16::encode_upper(b\"Hello World\"), \"48656C6C6F20576F726C64\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5684,"byte_end":5763,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(base16::encode_upper(&[0xff, 0xcc, 0xaa]), \"FFCCAA\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5764,"byte_end":5832,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5833,"byte_end":5840,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5841,"byte_end":5844,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5845,"byte_end":5863,"line_start":149,"line_end":149,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5864,"byte_end":5867,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `alloc` feature is enabled, as it","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5868,"byte_end":5946,"line_start":151,"line_end":151,"column_start":1,"column_end":79}},{"value":"/ needs to produce a `String`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5947,"byte_end":5979,"line_start":152,"line_end":152,"column_start":1,"column_end":33}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":5980,"byte_end":6005,"line_start":153,"line_end":153,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6006,"byte_end":6015,"line_start":154,"line_end":154,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6685,"byte_end":6698,"line_start":177,"line_end":177,"column_start":8,"column_end":21},"name":"encode_config","qualname":"::encode_config","value":"pub fn encode_config<T: ?Sized + AsRef<[u8]>>(&T, EncConfig) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encode `input` into a string using the listed config. The resulting string\n contains `input.len() * 2` bytes.","sig":null,"attributes":[{"value":"/ Encode `input` into a string using the listed config. The resulting string","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6138,"byte_end":6216,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ contains `input.len() * 2` bytes.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6217,"byte_end":6254,"line_start":161,"line_end":161,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6255,"byte_end":6258,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6259,"byte_end":6272,"line_start":163,"line_end":163,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6273,"byte_end":6276,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6277,"byte_end":6284,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ let data = [1, 2, 3, 0xaa, 0xbb, 0xcc];","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6285,"byte_end":6328,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(base16::encode_config(&data, base16::EncodeLower), \"010203aabbcc\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6329,"byte_end":6411,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(base16::encode_config(&data, base16::EncodeUpper), \"010203AABBCC\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6412,"byte_end":6494,"line_start":168,"line_end":168,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6495,"byte_end":6502,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6503,"byte_end":6506,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6507,"byte_end":6525,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6526,"byte_end":6529,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `alloc` feature is enabled, as it","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6530,"byte_end":6608,"line_start":173,"line_end":173,"column_start":1,"column_end":79}},{"value":"/ needs to produce a `String`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6609,"byte_end":6641,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6642,"byte_end":6667,"line_start":175,"line_end":175,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6668,"byte_end":6677,"line_start":176,"line_end":176,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7662,"byte_end":7679,"line_start":205,"line_end":205,"column_start":8,"column_end":25},"name":"encode_config_buf","qualname":"::encode_config_buf","value":"pub fn encode_config_buf<T: ?Sized + AsRef<[u8]>>(&T, EncConfig, &mut String)\n-> usize","parent":null,"children":[],"decl_id":null,"docs":" Encode `input` into the end of the provided buffer. Returns the number of\n bytes that were written.","sig":null,"attributes":[{"value":"/ Encode `input` into the end of the provided buffer. Returns the number of","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6808,"byte_end":6885,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/ bytes that were written.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6886,"byte_end":6914,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6915,"byte_end":6918,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Only allocates when `dst.size() + (input.len() * 2) >= dst.capacity()`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6919,"byte_end":6994,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6995,"byte_end":6998,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":6999,"byte_end":7012,"line_start":186,"line_end":186,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7013,"byte_end":7016,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7017,"byte_end":7024,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ let messages = &[\"Taako, \", \"Merle, \", \"Magnus\"];","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7025,"byte_end":7078,"line_start":189,"line_end":189,"column_start":1,"column_end":54}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7079,"byte_end":7114,"line_start":190,"line_end":190,"column_start":1,"column_end":36}},{"value":"/ for msg in messages {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7115,"byte_end":7140,"line_start":191,"line_end":191,"column_start":1,"column_end":26}},{"value":"/     let bytes_written = base16::encode_config_buf(msg.as_bytes(),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7141,"byte_end":7210,"line_start":192,"line_end":192,"column_start":1,"column_end":70}},{"value":"/                                                   base16::EncodeUpper,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7211,"byte_end":7285,"line_start":193,"line_end":193,"column_start":1,"column_end":75}},{"value":"/                                                   &mut buffer);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7286,"byte_end":7353,"line_start":194,"line_end":194,"column_start":1,"column_end":68}},{"value":"/     assert_eq!(bytes_written, msg.len() * 2);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7354,"byte_end":7403,"line_start":195,"line_end":195,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7404,"byte_end":7409,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(buffer, \"5461616B6F2C204D65726C652C204D61676E7573\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7410,"byte_end":7477,"line_start":197,"line_end":197,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7478,"byte_end":7485,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7486,"byte_end":7504,"line_start":199,"line_end":199,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7505,"byte_end":7508,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `alloc` feature is enabled, as it","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7509,"byte_end":7587,"line_start":201,"line_end":201,"column_start":1,"column_end":79}},{"value":"/ needs write to a `String`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7588,"byte_end":7618,"line_start":202,"line_end":202,"column_start":1,"column_end":31}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7619,"byte_end":7644,"line_start":203,"line_end":203,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":7645,"byte_end":7654,"line_start":204,"line_end":204,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9894,"byte_end":9913,"line_start":262,"line_end":262,"column_start":8,"column_end":27},"name":"encode_config_slice","qualname":"::encode_config_slice","value":"pub fn encode_config_slice<T: ?Sized + AsRef<[u8]>>(&T, EncConfig, &mut [u8])\n-> usize","parent":null,"children":[],"decl_id":null,"docs":" Write bytes as base16 into the provided output buffer. Never allocates.","sig":null,"attributes":[{"value":"/ Write bytes as base16 into the provided output buffer. Never allocates.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8493,"byte_end":8568,"line_start":225,"line_end":225,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8569,"byte_end":8572,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ This is useful if you wish to avoid allocation entirely (e.g. your","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8573,"byte_end":8643,"line_start":227,"line_end":227,"column_start":1,"column_end":71}},{"value":"/ destination buffer is on the stack), or control it precisely.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8644,"byte_end":8709,"line_start":228,"line_end":228,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8710,"byte_end":8713,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8714,"byte_end":8726,"line_start":230,"line_end":230,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8727,"byte_end":8730,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ Panics if the desination buffer is insufficiently large.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8731,"byte_end":8791,"line_start":232,"line_end":232,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8792,"byte_end":8795,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8796,"byte_end":8809,"line_start":234,"line_end":234,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8810,"byte_end":8813,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8814,"byte_end":8821,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ # extern crate core as std;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8822,"byte_end":8853,"line_start":237,"line_end":237,"column_start":1,"column_end":32}},{"value":"/ // Writing to a statically sized buffer on the stack.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8854,"byte_end":8911,"line_start":238,"line_end":238,"column_start":1,"column_end":58}},{"value":"/ let message = b\"Wu-Tang Killa Bees\";","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8912,"byte_end":8952,"line_start":239,"line_end":239,"column_start":1,"column_end":41}},{"value":"/ let mut buffer = [0u8; 1024];","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8953,"byte_end":8986,"line_start":240,"line_end":240,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8987,"byte_end":8990,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ let wrote = base16::encode_config_slice(message,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":8991,"byte_end":9043,"line_start":242,"line_end":242,"column_start":1,"column_end":53}},{"value":"/                                         base16::EncodeLower,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9044,"byte_end":9108,"line_start":243,"line_end":243,"column_start":1,"column_end":65}},{"value":"/                                         &mut buffer);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9109,"byte_end":9166,"line_start":244,"line_end":244,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9167,"byte_end":9170,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(message.len() * 2, wrote);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9171,"byte_end":9212,"line_start":246,"line_end":246,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(std::str::from_utf8(&buffer[..wrote]).unwrap(),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9213,"byte_end":9275,"line_start":247,"line_end":247,"column_start":1,"column_end":63}},{"value":"/            \"57752d54616e67204b696c6c612042656573\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9276,"byte_end":9331,"line_start":248,"line_end":248,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9332,"byte_end":9335,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ // Appending to an existing buffer is possible too.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9336,"byte_end":9391,"line_start":250,"line_end":250,"column_start":1,"column_end":56}},{"value":"/ let wrote2 = base16::encode_config_slice(b\": The Swarm\",","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9392,"byte_end":9452,"line_start":251,"line_end":251,"column_start":1,"column_end":61}},{"value":"/                                          base16::EncodeLower,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9453,"byte_end":9518,"line_start":252,"line_end":252,"column_start":1,"column_end":66}},{"value":"/                                          &mut buffer[wrote..]);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9519,"byte_end":9586,"line_start":253,"line_end":253,"column_start":1,"column_end":68}},{"value":"/ let write_end = wrote + wrote2;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9587,"byte_end":9622,"line_start":254,"line_end":254,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(std::str::from_utf8(&buffer[..write_end]).unwrap(),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9623,"byte_end":9689,"line_start":255,"line_end":255,"column_start":1,"column_end":67}},{"value":"/            \"57752d54616e67204b696c6c6120426565733a2054686520537761726d\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9690,"byte_end":9767,"line_start":256,"line_end":256,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9768,"byte_end":9775,"line_start":257,"line_end":257,"column_start":1,"column_end":8}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9776,"byte_end":9794,"line_start":258,"line_end":258,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9795,"byte_end":9798,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ This function is available whether or not the `alloc` feature is enabled.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9799,"byte_end":9876,"line_start":260,"line_end":260,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":9877,"byte_end":9886,"line_start":261,"line_end":261,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10941,"byte_end":10952,"line_start":288,"line_end":288,"column_start":8,"column_end":19},"name":"encode_byte","qualname":"::encode_byte","value":"pub fn encode_byte(u8, EncConfig) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Encode a single character as hex, returning a tuple containing the two\n encoded bytes in big-endian order -- the order the characters would be in\n when written out (e.g. the top nibble is the first item in the tuple)","sig":null,"attributes":[{"value":"/ Encode a single character as hex, returning a tuple containing the two","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10331,"byte_end":10405,"line_start":274,"line_end":274,"column_start":1,"column_end":75}},{"value":"/ encoded bytes in big-endian order -- the order the characters would be in","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10406,"byte_end":10483,"line_start":275,"line_end":275,"column_start":1,"column_end":78}},{"value":"/ when written out (e.g. the top nibble is the first item in the tuple)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10484,"byte_end":10557,"line_start":276,"line_end":276,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10558,"byte_end":10561,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10562,"byte_end":10575,"line_start":278,"line_end":278,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10576,"byte_end":10583,"line_start":279,"line_end":279,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(base16::encode_byte(0xff, base16::EncodeLower), [b'f', b'f']);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10584,"byte_end":10661,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(base16::encode_byte(0xa0, base16::EncodeUpper), [b'A', b'0']);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10662,"byte_end":10739,"line_start":281,"line_end":281,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(base16::encode_byte(3, base16::EncodeUpper), [b'0', b'3']);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10740,"byte_end":10814,"line_start":282,"line_end":282,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10815,"byte_end":10822,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10823,"byte_end":10841,"line_start":284,"line_end":284,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10842,"byte_end":10845,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ This function is available whether or not the `alloc` feature is enabled.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10846,"byte_end":10923,"line_start":286,"line_end":286,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":10924,"byte_end":10933,"line_start":287,"line_end":287,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11604,"byte_end":11617,"line_start":309,"line_end":309,"column_start":8,"column_end":21},"name":"encode_byte_l","qualname":"::encode_byte_l","value":"pub fn encode_byte_l(u8) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convenience wrapper for `base16::encode_byte(byte, base16::EncodeLower)`","sig":null,"attributes":[{"value":"/ Convenience wrapper for `base16::encode_byte(byte, base16::EncodeLower)`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11158,"byte_end":11234,"line_start":295,"line_end":295,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11235,"byte_end":11238,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ See also `base16::encode_byte_u`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11239,"byte_end":11276,"line_start":297,"line_end":297,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11277,"byte_end":11280,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11281,"byte_end":11294,"line_start":299,"line_end":299,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11295,"byte_end":11302,"line_start":300,"line_end":300,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(base16::encode_byte_l(0xff), [b'f', b'f']);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11303,"byte_end":11361,"line_start":301,"line_end":301,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(base16::encode_byte_l(30), [b'1', b'e']);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11362,"byte_end":11418,"line_start":302,"line_end":302,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(base16::encode_byte_l(0x2d), [b'2', b'd']);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11419,"byte_end":11477,"line_start":303,"line_end":303,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11478,"byte_end":11485,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11486,"byte_end":11504,"line_start":305,"line_end":305,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11505,"byte_end":11508,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ This function is available whether or not the `alloc` feature is enabled.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11509,"byte_end":11586,"line_start":307,"line_end":307,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11587,"byte_end":11596,"line_start":308,"line_end":308,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12125,"byte_end":12138,"line_start":327,"line_end":327,"column_start":8,"column_end":21},"name":"encode_byte_u","qualname":"::encode_byte_u","value":"pub fn encode_byte_u(u8) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convenience wrapper for `base16::encode_byte(byte, base16::EncodeUpper)`","sig":null,"attributes":[{"value":"/ Convenience wrapper for `base16::encode_byte(byte, base16::EncodeUpper)`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11679,"byte_end":11755,"line_start":313,"line_end":313,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11756,"byte_end":11759,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ See also `base16::encode_byte_l`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11760,"byte_end":11797,"line_start":315,"line_end":315,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11798,"byte_end":11801,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11802,"byte_end":11815,"line_start":317,"line_end":317,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11816,"byte_end":11823,"line_start":318,"line_end":318,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(base16::encode_byte_u(0xff), [b'F', b'F']);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11824,"byte_end":11882,"line_start":319,"line_end":319,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(base16::encode_byte_u(30), [b'1', b'E']);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11883,"byte_end":11939,"line_start":320,"line_end":320,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(base16::encode_byte_u(0x2d), [b'2', b'D']);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11940,"byte_end":11998,"line_start":321,"line_end":321,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":11999,"byte_end":12006,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12007,"byte_end":12025,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12026,"byte_end":12029,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ This function is available whether or not the `alloc` feature is enabled.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12030,"byte_end":12107,"line_start":325,"line_end":325,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12108,"byte_end":12117,"line_start":326,"line_end":326,"column_start":1,"column_end":10}}]},{"kind":"StructVariant","id":{"krate":0,"index":85},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12529,"byte_end":12540,"line_start":338,"line_end":338,"column_start":5,"column_end":16},"name":"InvalidByte","qualname":"::DecodeError::InvalidByte","value":"DecodeError::InvalidByte { index, byte }","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" An invalid byte was found in the input (bytes must be `[0-9a-fA-F]`)\n","sig":null,"attributes":[{"value":"/ An invalid byte was found in the input (bytes must be `[0-9a-fA-F]`)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12452,"byte_end":12524,"line_start":337,"line_end":337,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":88},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12754,"byte_end":12767,"line_start":345,"line_end":345,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::DecodeError::InvalidLength","value":"DecodeError::InvalidLength { length }","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" The length of the input not a multiple of two\n","sig":null,"attributes":[{"value":"/ The length of the input not a multiple of two","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12700,"byte_end":12749,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":84},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12434,"byte_end":12445,"line_start":336,"line_end":336,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::DecodeError","value":"pub enum DecodeError {\n    InvalidByte {\n        index: usize,\n        byte: u8,\n    },\n    InvalidLength {\n        length: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":88}],"decl_id":null,"docs":" Represents a problem with the data we want to decode.","sig":null,"attributes":[{"value":"/ Represents a problem with the data we want to decode.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12200,"byte_end":12257,"line_start":331,"line_end":331,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12258,"byte_end":12261,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ This implements `std::error::Error` and `Display` if the `std`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12262,"byte_end":12328,"line_start":333,"line_end":333,"column_start":1,"column_end":67}},{"value":"/ feature is enabled, but only `Display` if it is not.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":12329,"byte_end":12385,"line_start":334,"line_end":334,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15448,"byte_end":15454,"line_start":438,"line_end":438,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode","value":"pub fn decode<T: ?Sized + AsRef<[u8]>>(&T) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode bytes from base16, and return a new `Vec<u8>` containing the results.","sig":null,"attributes":[{"value":"/ Decode bytes from base16, and return a new `Vec<u8>` containing the results.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":14689,"byte_end":14769,"line_start":417,"line_end":417,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":14770,"byte_end":14773,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":14774,"byte_end":14787,"line_start":419,"line_end":419,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":14788,"byte_end":14791,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":14792,"byte_end":14799,"line_start":421,"line_end":421,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(&base16::decode(\"48656c6c6f20576f726c64\".as_bytes()).unwrap(),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":14800,"byte_end":14877,"line_start":422,"line_end":422,"column_start":1,"column_end":78}},{"value":"/            b\"Hello World\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":14878,"byte_end":14909,"line_start":423,"line_end":423,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(&base16::decode(b\"deadBEEF\").unwrap(),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":14910,"byte_end":14963,"line_start":424,"line_end":424,"column_start":1,"column_end":54}},{"value":"/            &[0xde, 0xad, 0xbe, 0xef]);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":14964,"byte_end":15006,"line_start":425,"line_end":425,"column_start":1,"column_end":43}},{"value":"/ // Error cases:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15007,"byte_end":15026,"line_start":426,"line_end":426,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(base16::decode(b\"Not Hexadecimal!\"),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15027,"byte_end":15078,"line_start":427,"line_end":427,"column_start":1,"column_end":52}},{"value":"/            Err(base16::DecodeError::InvalidByte { byte: b'N', index: 0 }));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15079,"byte_end":15158,"line_start":428,"line_end":428,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(base16::decode(b\"a\"),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15159,"byte_end":15195,"line_start":429,"line_end":429,"column_start":1,"column_end":37}},{"value":"/            Err(base16::DecodeError::InvalidLength { length: 1 }));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15196,"byte_end":15266,"line_start":430,"line_end":430,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15267,"byte_end":15274,"line_start":431,"line_end":431,"column_start":1,"column_end":8}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15275,"byte_end":15293,"line_start":432,"line_end":432,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15294,"byte_end":15297,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `alloc` feature is enabled, as it","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15298,"byte_end":15376,"line_start":434,"line_end":434,"column_start":1,"column_end":79}},{"value":"/ needs to produce a Vec.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15377,"byte_end":15404,"line_start":435,"line_end":435,"column_start":1,"column_end":28}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15405,"byte_end":15430,"line_start":436,"line_end":436,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15431,"byte_end":15440,"line_start":437,"line_end":437,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16691,"byte_end":16701,"line_start":476,"line_end":476,"column_start":8,"column_end":18},"name":"decode_buf","qualname":"::decode_buf","value":"pub fn decode_buf<T: ?Sized + AsRef<[u8]>>(&T, &mut Vec<u8>)\n-> Result<usize, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode bytes from base16, and appends into the provided buffer. Only\n allocates if the buffer could not fit the data. Returns the number of bytes\n written.","sig":null,"attributes":[{"value":"/ Decode bytes from base16, and appends into the provided buffer. Only","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15895,"byte_end":15967,"line_start":453,"line_end":453,"column_start":1,"column_end":73}},{"value":"/ allocates if the buffer could not fit the data. Returns the number of bytes","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":15968,"byte_end":16047,"line_start":454,"line_end":454,"column_start":1,"column_end":80}},{"value":"/ written.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16048,"byte_end":16060,"line_start":455,"line_end":455,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16061,"byte_end":16064,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ In the case of an error, the buffer should remain the same size.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16065,"byte_end":16133,"line_start":457,"line_end":457,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16134,"byte_end":16137,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16138,"byte_end":16151,"line_start":459,"line_end":459,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16152,"byte_end":16155,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16156,"byte_end":16163,"line_start":461,"line_end":461,"column_start":1,"column_end":8}},{"value":"/ # extern crate core as std;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16164,"byte_end":16195,"line_start":462,"line_end":462,"column_start":1,"column_end":32}},{"value":"/ # extern crate alloc;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16196,"byte_end":16221,"line_start":463,"line_end":463,"column_start":1,"column_end":26}},{"value":"/ # use alloc::vec::Vec;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16222,"byte_end":16248,"line_start":464,"line_end":464,"column_start":1,"column_end":27}},{"value":"/ let mut result = Vec::new();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16249,"byte_end":16281,"line_start":465,"line_end":465,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(base16::decode_buf(b\"4d61646f6b61\", &mut result).unwrap(), 6);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16282,"byte_end":16359,"line_start":466,"line_end":466,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(base16::decode_buf(b\"486F6D757261\", &mut result).unwrap(), 6);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16360,"byte_end":16437,"line_start":467,"line_end":467,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(std::str::from_utf8(&result).unwrap(), \"MadokaHomura\");","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16438,"byte_end":16508,"line_start":468,"line_end":468,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16509,"byte_end":16516,"line_start":469,"line_end":469,"column_start":1,"column_end":8}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16517,"byte_end":16535,"line_start":470,"line_end":470,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16536,"byte_end":16539,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `alloc` feature is enabled, as it","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16540,"byte_end":16618,"line_start":472,"line_end":472,"column_start":1,"column_end":79}},{"value":"/ needs to write to a Vec.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16619,"byte_end":16647,"line_start":473,"line_end":473,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16648,"byte_end":16673,"line_start":474,"line_end":474,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":16674,"byte_end":16683,"line_start":475,"line_end":475,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18704,"byte_end":18716,"line_start":530,"line_end":530,"column_start":8,"column_end":20},"name":"decode_slice","qualname":"::decode_slice","value":"pub fn decode_slice<T: ?Sized + AsRef<[u8]>>(&T, &mut [u8])\n-> Result<usize, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode bytes from base16, and write into the provided buffer. Never\n allocates.","sig":null,"attributes":[{"value":"/ Decode bytes from base16, and write into the provided buffer. Never","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":17641,"byte_end":17712,"line_start":504,"line_end":504,"column_start":1,"column_end":72}},{"value":"/ allocates.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":17713,"byte_end":17727,"line_start":505,"line_end":505,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":17728,"byte_end":17731,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ In the case of a decoder error, the output is not specified, but in practice","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":17732,"byte_end":17812,"line_start":507,"line_end":507,"column_start":1,"column_end":81}},{"value":"/ will remain untouched for an `InvalidLength` error, and will contain the","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":17813,"byte_end":17889,"line_start":508,"line_end":508,"column_start":1,"column_end":77}},{"value":"/ decoded input up to the problem byte in the case of an InvalidByte error.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":17890,"byte_end":17967,"line_start":509,"line_end":509,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":17968,"byte_end":17971,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":17972,"byte_end":17984,"line_start":511,"line_end":511,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":17985,"byte_end":17988,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ Panics if the provided buffer is not large enough for the input.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":17989,"byte_end":18057,"line_start":513,"line_end":513,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18058,"byte_end":18061,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18062,"byte_end":18075,"line_start":515,"line_end":515,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18076,"byte_end":18083,"line_start":516,"line_end":516,"column_start":1,"column_end":8}},{"value":"/ let msg = \"476f6f642072757374206c6962726172696573207573652073696c6c79206578616d706c6573\";","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18084,"byte_end":18177,"line_start":517,"line_end":517,"column_start":1,"column_end":94}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18178,"byte_end":18208,"line_start":518,"line_end":518,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(base16::decode_slice(&msg[..], &mut buf).unwrap(), 38);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18209,"byte_end":18279,"line_start":519,"line_end":519,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(&buf[..38], b\"Good rust libraries use silly examples\".as_ref());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18280,"byte_end":18359,"line_start":520,"line_end":520,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18360,"byte_end":18363,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ let msg2 = b\"2E20416C736F2C20616E696D65207265666572656e636573\";","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18364,"byte_end":18431,"line_start":522,"line_end":522,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(base16::decode_slice(&msg2[..], &mut buf[38..]).unwrap(), 24);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18432,"byte_end":18509,"line_start":523,"line_end":523,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(&buf[38..62], b\". Also, anime references\".as_ref());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18510,"byte_end":18577,"line_start":524,"line_end":524,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18578,"byte_end":18585,"line_start":525,"line_end":525,"column_start":1,"column_end":8}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18586,"byte_end":18604,"line_start":526,"line_end":526,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18605,"byte_end":18608,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ This function is available whether or not the `alloc` feature is enabled.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18609,"byte_end":18686,"line_start":528,"line_end":528,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":18687,"byte_end":18696,"line_start":529,"line_end":529,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19697,"byte_end":19708,"line_start":561,"line_end":561,"column_start":8,"column_end":19},"name":"decode_byte","qualname":"::decode_byte","value":"pub fn decode_byte(u8) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Decode a single character as hex.","sig":null,"attributes":[{"value":"/ Decode a single character as hex.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19188,"byte_end":19225,"line_start":545,"line_end":545,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19226,"byte_end":19229,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ Returns `None` for values outside the ASCII hex range.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19230,"byte_end":19288,"line_start":547,"line_end":547,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19289,"byte_end":19292,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19293,"byte_end":19306,"line_start":549,"line_end":549,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19307,"byte_end":19314,"line_start":550,"line_end":550,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(base16::decode_byte(b'a'), Some(10));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19315,"byte_end":19367,"line_start":551,"line_end":551,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(base16::decode_byte(b'B'), Some(11));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19368,"byte_end":19420,"line_start":552,"line_end":552,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(base16::decode_byte(b'0'), Some(0));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19421,"byte_end":19472,"line_start":553,"line_end":553,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(base16::decode_byte(b'q'), None);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19473,"byte_end":19521,"line_start":554,"line_end":554,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(base16::decode_byte(b'x'), None);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19522,"byte_end":19570,"line_start":555,"line_end":555,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19571,"byte_end":19578,"line_start":556,"line_end":556,"column_start":1,"column_end":8}},{"value":"/ # Availability","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19579,"byte_end":19597,"line_start":557,"line_end":557,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19598,"byte_end":19601,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ This function is available whether or not the `alloc` feature is enabled.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19602,"byte_end":19679,"line_start":559,"line_end":559,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":19680,"byte_end":19689,"line_start":560,"line_end":560,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":13090,"byte_end":13101,"line_start":361,"line_end":361,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":13610,"byte_end":13621,"line_start":376,"line_end":376,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":13090,"byte_end":13101,"line_start":361,"line_end":361,"column_start":29,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":8905}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/base16-0.2.1/src/lib.rs","byte_start":13610,"byte_end":13621,"line_start":376,"line_end":376,"column_start":28,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":2348}}]}