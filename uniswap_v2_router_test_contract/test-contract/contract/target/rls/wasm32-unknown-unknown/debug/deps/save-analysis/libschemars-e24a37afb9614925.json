{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5","program":"/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","schemars","--edition=2018","/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"indexmap\"","--cfg","feature=\"preserve_order\"","--cfg","feature=\"schemars_derive\"","-C","metadata=e24a37afb9614925","-C","extra-filename=-e24a37afb9614925","--out-dir","/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/uniswap_v2_router_test_contract/test-contract/contract/target/rls/wasm32-unknown-unknown/debug/deps","--target","wasm32-unknown-unknown","-L","dependency=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/uniswap_v2_router_test_contract/test-contract/contract/target/rls/wasm32-unknown-unknown/debug/deps","-L","dependency=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/uniswap_v2_router_test_contract/test-contract/contract/target/rls/debug/deps","--extern","dyn_clone=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/uniswap_v2_router_test_contract/test-contract/contract/target/rls/wasm32-unknown-unknown/debug/deps/libdyn_clone-0b02621a012cf3e0.rmeta","--extern","indexmap=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/uniswap_v2_router_test_contract/test-contract/contract/target/rls/wasm32-unknown-unknown/debug/deps/libindexmap-6a735b0b5325f67b.rmeta","--extern","schemars_derive=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/uniswap_v2_router_test_contract/test-contract/contract/target/rls/debug/deps/libschemars_derive-1cc710c770faaaa4.so","--extern","serde=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/uniswap_v2_router_test_contract/test-contract/contract/target/rls/wasm32-unknown-unknown/debug/deps/libserde-ed3221b1f5247038.rmeta","--extern","serde_json=/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/uniswap_v2_router_test_contract/test-contract/contract/target/rls/wasm32-unknown-unknown/debug/deps/libserde_json-a7740170134beca8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hussain/.rustup/toolchains/nightly-2021-06-17-x86_64-unknown-linux-gnu"],"output":"/home/hussain/Desktop/Scytalelabs/Tasks/UniswapV2Router01_1.3_Update/uniswap_v2_router/uniswap_v2_router_test_contract/test-contract/contract/target/rls/wasm32-unknown-unknown/debug/deps/libschemars-e24a37afb9614925.rmeta"},"prelude":{"crate_id":{"name":"schemars","disambiguator":[7472402085057086763,8833981789620207829]},"crate_root":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src","external_crates":[{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11865821141934753578,5519277996181205567]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10148827511062627880,13930310743981648994]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9594479946368871028,14826268177814129219]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1826318154200867672,13445872508185864674]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9780591927076023331,10878654213149572839]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7886481380398478283,13937001059064309516]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9963837671840799044,3901380288075133405]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12786505151488604328,5222456687545406474]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8562690528049212392,6230403454530380583]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16512717484854217878,12586115314642539452]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16012675576530202080,5269810570551980679]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[8342199551088758819,7923433523174326448]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":13,"id":{"name":"dlmalloc","disambiguator":[13191343612433092663,14932973469399816907]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","num":14,"id":{"name":"schemars_derive","disambiguator":[2525377302685416987,9432275952916002100]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/core.rs","num":15,"id":{"name":"serde_json","disambiguator":[7275956863079208769,11990910212061920240]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","num":16,"id":{"name":"serde","disambiguator":[17406863671699959478,18071708432255635882]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","num":17,"id":{"name":"serde_derive","disambiguator":[12828183186463713313,8760320742894752421]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/core.rs","num":18,"id":{"name":"itoa","disambiguator":[7066568818138022800,12501707376672751479]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/core.rs","num":19,"id":{"name":"ryu","disambiguator":[17410112157333166258,9241461069548403178]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/indexmap.rs","num":20,"id":{"name":"indexmap","disambiguator":[10393662824683495580,13322137723449848258]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/indexmap.rs","num":21,"id":{"name":"hashbrown","disambiguator":[17245536294877302459,17311359482507084542]}},{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","num":22,"id":{"name":"dyn_clone","disambiguator":[9280103329903096637,8802298358160697933]}}],"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":0,"byte_end":12103,"line_start":1,"line_end":396,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9581,"byte_end":9582,"line_start":315,"line_end":315,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"JsonSchema","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9659,"byte_end":9669,"line_start":319,"line_end":319,"column_start":9,"column_end":19},"alias_span":null,"name":"_serde_json","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":0,"byte_end":12103,"line_start":1,"line_end":396,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":12},{"krate":0,"index":47},{"krate":0,"index":297},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":450},{"krate":0,"index":534},{"krate":0,"index":588},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":636}],"decl_id":null,"docs":"Generate JSON Schema documents from Rust code","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":0,"byte_end":23,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"*\nGenerate JSON Schema documents from Rust code\n\n## Basic Usage\n\nIf you don't really care about the specifics, the easiest way to generate a JSON schema for your types is to `#[derive(JsonSchema)]` and use the `schema_for!` macro. All fields of the type must also implement `JsonSchema` - Schemars implements this for many standard library types.\n\n```rust\nuse schemars::{schema_for, JsonSchema};\n\n#[derive(JsonSchema)]\npub struct MyStruct {\n    pub my_int: i32,\n    pub my_bool: bool,\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(JsonSchema)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for!(MyStruct);\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"type\": \"object\",\n    \"required\": [\n        \"my_bool\",\n        \"my_int\"\n    ],\n    \"properties\": {\n        \"my_bool\": {\n            \"type\": \"boolean\"\n        },\n        \"my_int\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        },\n        \"my_nullable_enum\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/MyEnum\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        }\n    },\n    \"definitions\": {\n        \"MyEnum\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"StringNewType\"\n                    ],\n                    \"properties\": {\n                        \"StringNewType\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"additionalProperties\": false\n                },\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"StructVariant\"\n                    ],\n                    \"properties\": {\n                        \"StructVariant\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                                \"floats\"\n                            ],\n                            \"properties\": {\n                                \"floats\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"number\",\n                                        \"format\": \"float\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"additionalProperties\": false\n                }\n            ]\n        }\n    }\n}\n```\n</details>\n\n### Serde Compatibility\n\nOne of the main aims of this library is compatibility with [Serde](https://github.com/serde-rs/serde). Any generated schema *should* match how [serde_json](https://github.com/serde-rs/json) would serialize/deserialize to/from JSON. To support this, Schemars will check for any `#[serde(...)]` attributes on types that derive `JsonSchema`, and adjust the generated schema accordingly.\n\n```rust\nuse schemars::{schema_for, JsonSchema};\nuse serde::{Deserialize, Serialize};\n\n#[derive(Deserialize, Serialize, JsonSchema)]\n#[serde(rename_all = \"camelCase\", deny_unknown_fields)]\npub struct MyStruct {\n    #[serde(rename = \"myNumber\")]\n    pub my_int: i32,\n    pub my_bool: bool,\n    #[serde(default)]\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(Deserialize, Serialize, JsonSchema)]\n#[serde(untagged)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for!(MyStruct);\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"type\": \"object\",\n    \"required\": [\n        \"myBool\",\n        \"myNumber\"\n    ],\n    \"properties\": {\n        \"myBool\": {\n            \"type\": \"boolean\"\n        },\n        \"myNullableEnum\": {\n            \"default\": null,\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/MyEnum\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        },\n        \"myNumber\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        }\n    },\n    \"additionalProperties\": false,\n    \"definitions\": {\n        \"MyEnum\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"floats\"\n                    ],\n                    \"properties\": {\n                        \"floats\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"number\",\n                                \"format\": \"float\"\n                            }\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}\n```\n</details>\n\n`#[serde(...)]` attributes can be overriden using `#[schemars(...)]` attributes, which behave identically (e.g. `#[schemars(rename_all = \"camelCase\")]`). You may find this useful if you want to change the generated schema without affecting Serde's behaviour, or if you're just not using Serde.\n\n### Schema from Example Value\n\nIf you want a schema for a type that can't/doesn't implement `JsonSchema`, but does implement `serde::Serialize`, then you can generate a JSON schema from a value of that type. However, this schema will generally be less precise than if the type implemented `JsonSchema` - particularly when it involves enums, since schemars will not make any assumptions about the structure of an enum based on a single variant.\n\n```rust\nuse schemars::schema_for_value;\nuse serde::Serialize;\n\n#[derive(Serialize)]\npub struct MyStruct {\n    pub my_int: i32,\n    pub my_bool: bool,\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(Serialize)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for_value!(MyStruct {\n    my_int: 123,\n    my_bool: true,\n    my_nullable_enum: Some(MyEnum::StringNewType(\"foo\".to_string()))\n});\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"examples\": [\n        {\n            \"my_bool\": true,\n            \"my_int\": 123,\n            \"my_nullable_enum\": {\n                \"StringNewType\": \"foo\"\n            }\n        }\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"my_bool\": {\n            \"type\": \"boolean\"\n        },\n        \"my_int\": {\n            \"type\": \"integer\"\n        },\n        \"my_nullable_enum\": true\n    }\n}\n```\n</details>\n\n## Feature Flags\n- `derive` (enabled by default) - provides `#[derive(JsonSchema)]` macro\n- `impl_json_schema` - implements `JsonSchema` for Schemars types themselves\n- `preserve_order` - keep the order of struct fields in `Schema` and `SchemaObject`\n\n## Optional Dependencies\nSchemars can implement `JsonSchema` on types from several popular crates, enabled via optional dependencies (dependency versions are shown in brackets):\n- [`chrono`](https://crates.io/crates/chrono) (^0.4)\n- [`indexmap`](https://crates.io/crates/indexmap) (^1.2)\n- [`either`](https://crates.io/crates/either) (^1.3)\n- [`uuid`](https://crates.io/crates/uuid) (^0.8)\n- [`smallvec`](https://crates.io/crates/smallvec) (^1.0)\n- [`arrayvec`](https://crates.io/crates/arrayvec) (^0.5)\n- [`url`](https://crates.io/crates/url) (^2.0)\n- [`bytes`](https://crates.io/crates/bytes) (^1.0)\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":24,"byte_end":7980,"line_start":2,"line_end":272,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":3},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":8411,"byte_end":8414,"line_start":282,"line_end":282,"column_start":10,"column_end":13},"name":"Map","qualname":"::Map","value":"indexmap::IndexMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"preserve_order\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":8367,"byte_end":8401,"line_start":281,"line_end":281,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":6},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":8643,"byte_end":8646,"line_start":287,"line_end":287,"column_start":10,"column_end":13},"name":"Set","qualname":"::Set","value":"std::collections::BTreeSet<T>","parent":null,"children":[],"decl_id":null,"docs":" The set type used by schemars types.","sig":null,"attributes":[{"value":"/ The set type used by schemars types.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":8449,"byte_end":8489,"line_start":283,"line_end":283,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":8490,"byte_end":8493,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ Currently a `BTreeSet`, but this may change to a different implementation","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":8494,"byte_end":8571,"line_start":285,"line_end":285,"column_start":1,"column_end":78}},{"value":"/ with a similar interface in a future version of schemars.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":8572,"byte_end":8633,"line_start":286,"line_end":286,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9072,"byte_end":9080,"line_start":296,"line_end":296,"column_start":10,"column_end":18},"name":"MapEntry","qualname":"::MapEntry","value":"indexmap::map::Entry","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"preserve_order\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9028,"byte_end":9062,"line_start":295,"line_end":295,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":12724,"byte_end":12731,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"flatten","qualname":"<Schema>::flatten","value":"pub fn flatten(Self, Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" This function is only public for use by schemars_derive.","sig":null,"attributes":[{"value":"/ This function is only public for use by schemars_derive.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":12565,"byte_end":12625,"line_start":5,"line_end":5,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":12630,"byte_end":12633,"line_start":6,"line_end":6,"column_start":5,"column_end":8}},{"value":"/ It should not be considered part of the public API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":12638,"byte_end":12693,"line_start":7,"line_end":7,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":427},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/_private.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"_private","qualname":"::_private","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/_private.rs","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449}],"decl_id":null,"docs":" This module is only public for use by `schemars_derive`. It should not need to be used by code\n outside of `schemars`, and should not be considered part of the public API.\n","sig":null,"attributes":[{"value":"/ This module is only public for use by `schemars_derive`. It should not need to be used by code","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9197,"byte_end":9295,"line_start":304,"line_end":304,"column_start":1,"column_end":99}},{"value":"/ outside of `schemars`, and should not be considered part of the public API.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9296,"byte_end":9375,"line_start":305,"line_end":305,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":447},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/_private.rs","byte_start":62862,"byte_end":62885,"line_start":7,"line_end":7,"column_start":8,"column_end":31},"name":"json_schema_for_flatten","qualname":"::_private::json_schema_for_flatten","value":"pub fn json_schema_for_flatten<T: ?Sized +\n                               JsonSchema>(&mut SchemaGenerator, bool)\n-> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":449},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/_private.rs","byte_start":63334,"byte_end":63348,"line_start":26,"line_end":26,"column_start":8,"column_end":22},"name":"apply_metadata","qualname":"::_private::apply_metadata","value":"pub fn apply_metadata(Schema, Metadata) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":450},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gen","qualname":"::gen","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":1431},{"krate":0,"index":1439},{"krate":0,"index":1441},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":1443},{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":529},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":531}],"decl_id":null,"docs":"JSON Schema generator and settings.","sig":null,"attributes":[{"value":"*\nJSON Schema generator and settings.\n\nThis module is useful if you want more control over how the schema generated than the [`schema_for!`] macro gives you.\nThere are two main types in this module:two main types in this module:\n* [`SchemaSettings`], which defines what JSON Schema features should be used when generating schemas (for example, how `Option`s should be represented).\n* [`SchemaGenerator`], which manages the generation of a schema document.\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":63678,"byte_end":64138,"line_start":1,"line_end":8,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":1431},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":64758,"byte_end":64772,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"name":"SchemaSettings","qualname":"::gen::SchemaSettings","value":"SchemaSettings { option_nullable, option_add_null_type, definitions_path, meta_schema, visitors, inline_subschemas }","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438}],"decl_id":null,"docs":" Settings to customize how Schemas are generated.","sig":null,"attributes":[{"value":"/ Settings to customize how Schemas are generated.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":64305,"byte_end":64357,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":64358,"byte_end":64361,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The default settings currently conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7), but this is liable to change in a future version of Schemars if support for other JSON Schema versions is added.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":64362,"byte_end":64601,"line_start":18,"line_end":18,"column_start":1,"column_end":240}},{"value":"/ If you require your generated schemas to conform to draft 7, consider using the [`draft07`](#method.draft07) method.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":64602,"byte_end":64722,"line_start":19,"line_end":19,"column_start":1,"column_end":121}}]},{"kind":"Field","id":{"krate":0,"index":1432},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65007,"byte_end":65022,"line_start":27,"line_end":27,"column_start":9,"column_end":24},"name":"option_nullable","qualname":"::gen::SchemaSettings::option_nullable","value":"bool","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will include a `nullable` property.","sig":null,"attributes":[{"value":"/ If `true`, schemas for [`Option<T>`](Option) will include a `nullable` property.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":64779,"byte_end":64863,"line_start":22,"line_end":22,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":64868,"byte_end":64871,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This is not part of the JSON Schema spec, but is used in Swagger/OpenAPI schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":64876,"byte_end":64961,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":64966,"byte_end":64969,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":64974,"byte_end":64998,"line_start":26,"line_end":26,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1433},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65231,"byte_end":65251,"line_start":31,"line_end":31,"column_start":9,"column_end":29},"name":"option_add_null_type","qualname":"::gen::SchemaSettings::option_add_null_type","value":"bool","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will have `null` added to their [`type`](../schema/struct.SchemaObject.html#structfield.instance_type).","sig":null,"attributes":[{"value":"/ If `true`, schemas for [`Option<T>`](Option) will have `null` added to their [`type`](../schema/struct.SchemaObject.html#structfield.instance_type).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65034,"byte_end":65186,"line_start":28,"line_end":28,"column_start":5,"column_end":157}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65191,"byte_end":65194,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65199,"byte_end":65222,"line_start":30,"line_end":30,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1434},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65425,"byte_end":65441,"line_start":35,"line_end":35,"column_start":9,"column_end":25},"name":"definitions_path","qualname":"::gen::SchemaSettings::definitions_path","value":"std::string::String","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" A JSON pointer to the expected location of referenceable subschemas within the resulting root schema.","sig":null,"attributes":[{"value":"/ A JSON pointer to the expected location of referenceable subschemas within the resulting root schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65263,"byte_end":65368,"line_start":32,"line_end":32,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65373,"byte_end":65376,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Defaults to `\"#/definitions/\"`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65381,"byte_end":65416,"line_start":34,"line_end":34,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1435},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65618,"byte_end":65629,"line_start":39,"line_end":39,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::gen::SchemaSettings::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" The URI of the meta-schema describing the structure of the generated schemas.","sig":null,"attributes":[{"value":"/ The URI of the meta-schema describing the structure of the generated schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65455,"byte_end":65536,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65541,"byte_end":65544,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Defaults to `\"http://json-schema.org/draft-07/schema#\"`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65549,"byte_end":65609,"line_start":38,"line_end":38,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1436},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65730,"byte_end":65738,"line_start":41,"line_end":41,"column_start":9,"column_end":17},"name":"visitors","qualname":"::gen::SchemaSettings::visitors","value":"std::vec::Vec<std::boxed::Box<(dyn gen::GenVisitor + 'static)>>","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" A list of visitors that get applied to all generated root schemas.\n","sig":null,"attributes":[{"value":"/ A list of visitors that get applied to all generated root schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65651,"byte_end":65721,"line_start":40,"line_end":40,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1437},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65957,"byte_end":65974,"line_start":47,"line_end":47,"column_start":9,"column_end":26},"name":"inline_subschemas","qualname":"::gen::SchemaSettings::inline_subschemas","value":"bool","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" Inline all subschemas instead of using references.","sig":null,"attributes":[{"value":"/ Inline all subschemas instead of using references.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65770,"byte_end":65824,"line_start":42,"line_end":42,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65829,"byte_end":65832,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Some references may still be generated in schemas for recursive types.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65837,"byte_end":65911,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65916,"byte_end":65919,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":65924,"byte_end":65948,"line_start":46,"line_end":46,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":66279,"byte_end":66286,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"draft07","qualname":"<SchemaSettings>::draft07","value":"pub fn draft07() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":66142,"byte_end":66267,"line_start":58,"line_end":58,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":66858,"byte_end":66870,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"draft2019_09","qualname":"<SchemaSettings>::draft2019_09","value":"pub fn draft2019_09() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema 2019-09](https://json-schema.org/specification-links.html#2019-09-formerly-known-as-draft-8).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [JSON Schema 2019-09](https://json-schema.org/specification-links.html#2019-09-formerly-known-as-draft-8).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":66695,"byte_end":66846,"line_start":71,"line_end":71,"column_start":5,"column_end":156}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":67425,"byte_end":67433,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"openapi3","qualname":"<SchemaSettings>::openapi3","value":"pub fn openapi3() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":67265,"byte_end":67413,"line_start":84,"line_end":84,"column_start":5,"column_end":153}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68587,"byte_end":68591,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"with","qualname":"<SchemaSettings>::with","value":"pub fn with<impl FnOnce(&mut Self): FnOnce(&mut Self) ->\n            ()>(Self, impl FnOnce(&mut Self)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modifies the `SchemaSettings` by calling the given function.","sig":null,"attributes":[{"value":"/ Modifies the `SchemaSettings` by calling the given function.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68192,"byte_end":68256,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68261,"byte_end":68264,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68269,"byte_end":68282,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68287,"byte_end":68294,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use schemars::gen::{SchemaGenerator, SchemaSettings};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68299,"byte_end":68356,"line_start":112,"line_end":112,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68361,"byte_end":68364,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ let settings = SchemaSettings::default().with(|s| {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68369,"byte_end":68424,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/     s.option_nullable = true;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68429,"byte_end":68462,"line_start":115,"line_end":115,"column_start":5,"column_end":38}},{"value":"/     s.option_add_null_type = false;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68467,"byte_end":68506,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68511,"byte_end":68518,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ let gen = settings.into_generator();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68523,"byte_end":68563,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68568,"byte_end":68575,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68828,"byte_end":68840,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"with_visitor","qualname":"<SchemaSettings>::with_visitor","value":"pub fn with_visitor<impl Visitor + Debug + Clone + 'static: Visitor + Debug +\n                    Clone +\n                    'static>(Self, impl Visitor + Debug + Clone + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends the given visitor to the list of [visitors](SchemaSettings::visitors) for these `SchemaSettings`.\n","sig":null,"attributes":[{"value":"/ Appends the given visitor to the list of [visitors](SchemaSettings::visitors) for these `SchemaSettings`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68707,"byte_end":68816,"line_start":125,"line_end":125,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69052,"byte_end":69066,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"into_generator","qualname":"<SchemaSettings>::into_generator","value":"pub fn into_generator(Self) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`SchemaGenerator`] using these settings.\n","sig":null,"attributes":[{"value":"/ Creates a new [`SchemaGenerator`] using these settings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":68981,"byte_end":69040,"line_start":131,"line_end":131,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1443},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69491,"byte_end":69506,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"SchemaGenerator","qualname":"::gen::SchemaGenerator","value":"SchemaGenerator {  }","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446}],"decl_id":null,"docs":" The main type used to generate JSON Schemas.","sig":null,"attributes":[{"value":"/ The main type used to generate JSON Schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69138,"byte_end":69186,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69187,"byte_end":69190,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69191,"byte_end":69204,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69205,"byte_end":69212,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use schemars::{JsonSchema, gen::SchemaGenerator};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69213,"byte_end":69266,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69267,"byte_end":69270,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69271,"byte_end":69296,"line_start":143,"line_end":143,"column_start":1,"column_end":26}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69297,"byte_end":69318,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/     foo: i32,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69319,"byte_end":69336,"line_start":145,"line_end":145,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69337,"byte_end":69342,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69343,"byte_end":69346,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let gen = SchemaGenerator::default();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69347,"byte_end":69388,"line_start":148,"line_end":148,"column_start":1,"column_end":42}},{"value":"/ let schema = gen.into_root_schema_for::<MyStruct>();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69389,"byte_end":69445,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69446,"byte_end":69453,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70105,"byte_end":70108,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"new","qualname":"<SchemaGenerator>::new","value":"pub fn new(SchemaSettings) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SchemaGenerator` using the given settings.\n","sig":null,"attributes":[{"value":"/ Creates a new `SchemaGenerator` using the given settings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70032,"byte_end":70093,"line_start":175,"line_end":175,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70594,"byte_end":70602,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"settings","qualname":"<SchemaGenerator>::settings","value":"pub fn settings(&Self) -> &SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`SchemaSettings`] being used by this `SchemaGenerator`.","sig":null,"attributes":[{"value":"/ Borrows the [`SchemaSettings`] being used by this `SchemaGenerator`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70258,"byte_end":70330,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70335,"byte_end":70338,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70343,"byte_end":70356,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70361,"byte_end":70368,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use schemars::gen::SchemaGenerator;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70373,"byte_end":70412,"line_start":187,"line_end":187,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70417,"byte_end":70420,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let gen = SchemaGenerator::default();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70425,"byte_end":70466,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ let settings = gen.settings();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70471,"byte_end":70505,"line_start":190,"line_end":190,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70510,"byte_end":70513,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(settings.option_add_null_type, true);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70518,"byte_end":70570,"line_start":192,"line_end":192,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70575,"byte_end":70582,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70732,"byte_end":70747,"line_start":199,"line_end":199,"column_start":12,"column_end":27},"name":"make_extensible","qualname":"<SchemaGenerator>::make_extensible","value":"pub fn make_extensible(&Self, &mut SchemaObject)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"This method no longer has any effect.\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70665,"byte_end":70720,"line_start":198,"line_end":198,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70853,"byte_end":70867,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"schema_for_any","qualname":"<SchemaGenerator>::schema_for_any","value":"pub fn schema_for_any(&Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Use `Schema::Bool(true)` instead\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70791,"byte_end":70841,"line_start":201,"line_end":201,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70988,"byte_end":71003,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"schema_for_none","qualname":"<SchemaGenerator>::schema_for_none","value":"pub fn schema_for_none(&Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Use `Schema::Bool(false)` instead\"","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70925,"byte_end":70976,"line_start":206,"line_end":206,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":71657,"byte_end":71670,"line_start":218,"line_end":218,"column_start":12,"column_end":25},"name":"subschema_for","qualname":"<SchemaGenerator>::subschema_for","value":"pub fn subschema_for<T: ?Sized + JsonSchema>(&mut Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" Generates a JSON Schema for the type `T`, and returns either the schema itself or a `$ref` schema referencing `T`'s schema.","sig":null,"attributes":[{"value":"/ Generates a JSON Schema for the type `T`, and returns either the schema itself or a `$ref` schema referencing `T`'s schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":71062,"byte_end":71189,"line_start":211,"line_end":211,"column_start":5,"column_end":132}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":71194,"byte_end":71197,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ If `T` is [referenceable](JsonSchema::is_referenceable), this will add `T`'s schema to this generator's definitions, and","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":71202,"byte_end":71326,"line_start":213,"line_end":213,"column_start":5,"column_end":129}},{"value":"/ return a `$ref` schema referencing that schema. Otherwise, this method behaves identically to [`JsonSchema::json_schema`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":71331,"byte_end":71457,"line_start":214,"line_end":214,"column_start":5,"column_end":131}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":71462,"byte_end":71465,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":71470,"byte_end":71581,"line_start":216,"line_end":216,"column_start":5,"column_end":116}},{"value":"/ add them to the `SchemaGenerator`'s schema definitions.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":71586,"byte_end":71645,"line_start":217,"line_end":217,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":72918,"byte_end":72929,"line_start":248,"line_end":248,"column_start":12,"column_end":23},"name":"definitions","qualname":"<SchemaGenerator>::definitions","value":"pub fn definitions(&Self) -> &Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[{"value":"/ Borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":72646,"byte_end":72759,"line_start":244,"line_end":244,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":72764,"byte_end":72767,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":72772,"byte_end":72886,"line_start":246,"line_end":246,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":72891,"byte_end":72906,"line_start":247,"line_end":247,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73280,"byte_end":73295,"line_start":256,"line_end":256,"column_start":12,"column_end":27},"name":"definitions_mut","qualname":"<SchemaGenerator>::definitions_mut","value":"pub fn definitions_mut(&mut Self) -> &mut Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[{"value":"/ Mutably borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73000,"byte_end":73121,"line_start":252,"line_end":252,"column_start":5,"column_end":126}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73126,"byte_end":73129,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73134,"byte_end":73248,"line_start":254,"line_end":254,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73253,"byte_end":73268,"line_start":255,"line_end":255,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73693,"byte_end":73709,"line_start":265,"line_end":265,"column_start":12,"column_end":28},"name":"take_definitions","qualname":"<SchemaGenerator>::take_definitions","value":"pub fn take_definitions(&mut Self) -> Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated,\n leaving an empty map in its place.","sig":null,"attributes":[{"value":"/ Returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73378,"byte_end":73491,"line_start":260,"line_end":260,"column_start":5,"column_end":118}},{"value":"/ leaving an empty map in its place.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73496,"byte_end":73534,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73539,"byte_end":73542,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73547,"byte_end":73661,"line_start":263,"line_end":263,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73666,"byte_end":73681,"line_start":264,"line_end":264,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73941,"byte_end":73953,"line_start":270,"line_end":270,"column_start":12,"column_end":24},"name":"visitors_mut","qualname":"<SchemaGenerator>::visitors_mut","value":"pub fn visitors_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [visitors](SchemaSettings::visitors) being used by this `SchemaGenerator`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the [visitors](SchemaSettings::visitors) being used by this `SchemaGenerator`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":73822,"byte_end":73929,"line_start":269,"line_end":269,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":74464,"byte_end":74479,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"root_schema_for","qualname":"<SchemaGenerator>::root_schema_for","value":"pub fn root_schema_for<T: ?Sized + JsonSchema>(&mut Self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Generates a root JSON Schema for the type `T`.","sig":null,"attributes":[{"value":"/ Generates a root JSON Schema for the type `T`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":74085,"byte_end":74135,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":74140,"byte_end":74143,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":74148,"byte_end":74259,"line_start":276,"line_end":276,"column_start":5,"column_end":116}},{"value":"/ add them to the `SchemaGenerator`'s schema definitions and include them in the returned `SchemaObject`'s","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":74264,"byte_end":74372,"line_start":277,"line_end":277,"column_start":5,"column_end":113}},{"value":"/ [`definitions`](../schema/struct.Metadata.html#structfield.definitions)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":74377,"byte_end":74452,"line_start":278,"line_end":278,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":75347,"byte_end":75367,"line_start":300,"line_end":300,"column_start":12,"column_end":32},"name":"into_root_schema_for","qualname":"<SchemaGenerator>::into_root_schema_for","value":"pub fn into_root_schema_for<T: ?Sized + JsonSchema>(Self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and generates a root JSON Schema for the type `T`.","sig":null,"attributes":[{"value":"/ Consumes `self` and generates a root JSON Schema for the type `T`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":75015,"byte_end":75085,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":75090,"byte_end":75093,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":75098,"byte_end":75209,"line_start":298,"line_end":298,"column_start":5,"column_end":116}},{"value":"/ include them in the returned `SchemaObject`'s [`definitions`](../schema/struct.Metadata.html#structfield.definitions)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":75214,"byte_end":75335,"line_start":299,"line_end":299,"column_start":5,"column_end":126}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":76220,"byte_end":76241,"line_start":321,"line_end":321,"column_start":12,"column_end":33},"name":"root_schema_for_value","qualname":"<SchemaGenerator>::root_schema_for_value","value":"pub fn root_schema_for_value<T: ?Sized + Serialize>(&mut Self, &T)\n-> Result<RootSchema, serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":" Generates a root JSON Schema for the given example value.","sig":null,"attributes":[{"value":"/ Generates a root JSON Schema for the given example value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":75886,"byte_end":75947,"line_start":317,"line_end":317,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":75952,"byte_end":75955,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ If the value implements [`JsonSchema`](crate::JsonSchema), then prefer using the [`root_schema_for()`](Self::root_schema_for())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":75960,"byte_end":76091,"line_start":319,"line_end":319,"column_start":5,"column_end":136}},{"value":"/ function which will generally produce a more precise schema, particularly when the value contains any enums.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":76096,"byte_end":76208,"line_start":320,"line_end":320,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":77351,"byte_end":77377,"line_start":353,"line_end":353,"column_start":12,"column_end":38},"name":"into_root_schema_for_value","qualname":"<SchemaGenerator>::into_root_schema_for_value","value":"pub fn into_root_schema_for_value<T: ?Sized + Serialize>(Self, &T)\n-> Result<RootSchema, serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and generates a root JSON Schema for the given example value.","sig":null,"attributes":[{"value":"/ Consumes `self` and generates a root JSON Schema for the given example value.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":76985,"byte_end":77066,"line_start":349,"line_end":349,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":77071,"byte_end":77074,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If the value  implements [`JsonSchema`](crate::JsonSchema), then prefer using the [`into_root_schema_for()!`](Self::into_root_schema_for())","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":77079,"byte_end":77222,"line_start":351,"line_end":351,"column_start":5,"column_end":148}},{"value":"/ function which will generally produce a more precise schema, particularly when the value contains any enums.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":77227,"byte_end":77339,"line_start":352,"line_end":352,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":79048,"byte_end":79059,"line_start":406,"line_end":406,"column_start":12,"column_end":23},"name":"dereference","qualname":"<SchemaGenerator>::dereference","value":"pub fn dereference<'a>(&'a Self, &Schema) -> Option<&'a Schema>","parent":null,"children":[],"decl_id":null,"docs":" Attemps to find the schema that the given `schema` is referencing.","sig":null,"attributes":[{"value":"/ Attemps to find the schema that the given `schema` is referencing.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78109,"byte_end":78179,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78184,"byte_end":78187,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ If the given `schema` has a [`$ref`](../schema/struct.SchemaObject.html#structfield.reference) property which refers","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78192,"byte_end":78312,"line_start":383,"line_end":383,"column_start":5,"column_end":125}},{"value":"/ to another schema in `self`'s schema definitions, the referenced schema will be returned. Otherwise, returns `None`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78317,"byte_end":78437,"line_start":384,"line_end":384,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78442,"byte_end":78445,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78450,"byte_end":78463,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78468,"byte_end":78475,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use schemars::{JsonSchema, gen::SchemaGenerator};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78480,"byte_end":78533,"line_start":388,"line_end":388,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78538,"byte_end":78541,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78546,"byte_end":78571,"line_start":390,"line_end":390,"column_start":5,"column_end":30}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78576,"byte_end":78597,"line_start":391,"line_end":391,"column_start":5,"column_end":26}},{"value":"/     foo: i32,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78602,"byte_end":78619,"line_start":392,"line_end":392,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78624,"byte_end":78629,"line_start":393,"line_end":393,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78634,"byte_end":78637,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut gen = SchemaGenerator::default();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78642,"byte_end":78687,"line_start":395,"line_end":395,"column_start":5,"column_end":50}},{"value":"/ let ref_schema = gen.subschema_for::<MyStruct>();","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78692,"byte_end":78745,"line_start":396,"line_end":396,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78750,"byte_end":78753,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ assert!(ref_schema.is_ref());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78758,"byte_end":78791,"line_start":398,"line_end":398,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78796,"byte_end":78799,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let dereferenced = gen.dereference(&ref_schema);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78804,"byte_end":78856,"line_start":400,"line_end":400,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78861,"byte_end":78864,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ assert!(dereferenced.is_some());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78869,"byte_end":78905,"line_start":402,"line_end":402,"column_start":5,"column_end":41}},{"value":"/ assert!(!dereferenced.unwrap().is_ref());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78910,"byte_end":78955,"line_start":403,"line_end":403,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(dereferenced, gen.definitions().get(\"MyStruct\"));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":78960,"byte_end":79024,"line_start":404,"line_end":404,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":79029,"byte_end":79036,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":529},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81128,"byte_end":81138,"line_start":472,"line_end":472,"column_start":11,"column_end":21},"name":"GenVisitor","qualname":"::gen::GenVisitor","value":"GenVisitor: Visitor + Debug + DynClone + Any","parent":null,"children":[{"krate":0,"index":530}],"decl_id":null,"docs":" A [Visitor](Visitor) which implements additional traits required to be included in a [SchemaSettings].","sig":null,"attributes":[{"value":"/ A [Visitor](Visitor) which implements additional traits required to be included in a [SchemaSettings].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80464,"byte_end":80570,"line_start":451,"line_end":451,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80571,"byte_end":80574,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to use this trait directly as it is automatically implemented for any type which implements all of:","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80575,"byte_end":80699,"line_start":453,"line_end":453,"column_start":1,"column_end":125}},{"value":"/ - [`Visitor`]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80700,"byte_end":80717,"line_start":454,"line_end":454,"column_start":1,"column_end":18}},{"value":"/ - [`std::fmt::Debug`]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80718,"byte_end":80743,"line_start":455,"line_end":455,"column_start":1,"column_end":26}},{"value":"/ - [`std::any::Any`] (implemented for all `'static` types)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80744,"byte_end":80805,"line_start":456,"line_end":456,"column_start":1,"column_end":62}},{"value":"/ - [`std::clone::Clone`]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80806,"byte_end":80833,"line_start":457,"line_end":457,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80834,"byte_end":80837,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80838,"byte_end":80851,"line_start":459,"line_end":459,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80852,"byte_end":80859,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/ use schemars::visit::Visitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80860,"byte_end":80893,"line_start":461,"line_end":461,"column_start":1,"column_end":34}},{"value":"/ use schemars::gen::GenVisitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80894,"byte_end":80928,"line_start":462,"line_end":462,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80929,"byte_end":80932,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80933,"byte_end":80960,"line_start":464,"line_end":464,"column_start":1,"column_end":28}},{"value":"/ struct MyVisitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80961,"byte_end":80982,"line_start":465,"line_end":465,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80983,"byte_end":80986,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ impl Visitor for MyVisitor { }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80987,"byte_end":81021,"line_start":467,"line_end":467,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81022,"byte_end":81025,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ let v: &dyn GenVisitor = &MyVisitor;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81026,"byte_end":81066,"line_start":469,"line_end":469,"column_start":1,"column_end":41}},{"value":"/ assert!(v.as_any().is::<MyVisitor>());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81067,"byte_end":81109,"line_start":470,"line_end":470,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81110,"byte_end":81117,"line_start":471,"line_end":471,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81295,"byte_end":81301,"line_start":474,"line_end":474,"column_start":8,"column_end":14},"name":"as_any","qualname":"::gen::GenVisitor::as_any","value":"pub fn as_any(&Self) -> &dyn Any","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Upcasts this visitor into an `Any`, which can be used to inspect and manipulate it as its concrete type.\n","sig":null,"attributes":[{"value":"/ Upcasts this visitor into an `Any`, which can be used to inspect and manipulate it as its concrete type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81179,"byte_end":81287,"line_start":473,"line_end":473,"column_start":5,"column_end":113}}]},{"kind":"Mod","id":{"krate":0,"index":534},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schema","qualname":"::schema","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":1484},{"krate":0,"index":1463},{"krate":0,"index":1469},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":555},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":1577},{"krate":0,"index":1491},{"krate":0,"index":1497},{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1682},{"krate":0,"index":1581},{"krate":0,"index":1587},{"krate":0,"index":1672},{"krate":0,"index":1674},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":571},{"krate":0,"index":576},{"krate":0,"index":1791},{"krate":0,"index":1701},{"krate":0,"index":1707},{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1789},{"krate":0,"index":578},{"krate":0,"index":1869},{"krate":0,"index":1800},{"krate":0,"index":1806},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1942},{"krate":0,"index":1877},{"krate":0,"index":1883},{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":2009},{"krate":0,"index":1948},{"krate":0,"index":1954},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2007},{"krate":0,"index":2080},{"krate":0,"index":2013},{"krate":0,"index":2019},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2078},{"krate":0,"index":2156},{"krate":0,"index":2087},{"krate":0,"index":2093},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2154},{"krate":0,"index":2237},{"krate":0,"index":2164},{"krate":0,"index":2170},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2290},{"krate":0,"index":2252},{"krate":0,"index":2259},{"krate":0,"index":2267},{"krate":0,"index":2270},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2284},{"krate":0,"index":2287},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":585}],"decl_id":null,"docs":"JSON Schema types.\n","sig":null,"attributes":[{"value":"*\nJSON Schema types.\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":81984,"byte_end":82009,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1485},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82652,"byte_end":82656,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Bool","qualname":"::schema::Schema::Bool","value":"Schema::Bool(bool)","parent":{"krate":0,"index":1484},"children":[],"decl_id":null,"docs":" A trivial boolean JSON Schema.","sig":null,"attributes":[{"value":"/ A trivial boolean JSON Schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82454,"byte_end":82488,"line_start":20,"line_end":20,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82493,"byte_end":82496,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The schema `true` matches everything (always passes validation), whereas the schema `false`","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82501,"byte_end":82596,"line_start":22,"line_end":22,"column_start":5,"column_end":100}},{"value":"/ matches nothing (always fails validation).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82601,"byte_end":82647,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1488},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82698,"byte_end":82704,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::Schema::Object","value":"Schema::Object(SchemaObject)","parent":{"krate":0,"index":1484},"children":[],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[{"value":"/ A JSON Schema object.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82668,"byte_end":82693,"line_start":25,"line_end":25,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1484},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82441,"byte_end":82447,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"Schema","qualname":"::schema::Schema","value":"pub enum Schema { Bool(bool), Object(SchemaObject), }","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1488}],"decl_id":null,"docs":" A JSON Schema.\n","sig":null,"attributes":[{"value":"/ A JSON Schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82236,"byte_end":82254,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"allow(clippy :: large_enum_variant)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82255,"byte_end":82291,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"serde(untagged)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82413,"byte_end":82431,"line_start":18,"line_end":18,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82980,"byte_end":82987,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<Schema>::new_ref","value":"pub fn new_ref(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[{"value":"/ Creates a new `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82741,"byte_end":82773,"line_start":30,"line_end":30,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82778,"byte_end":82781,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The given reference string should be a URI reference. This will usually be a JSON Pointer","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82786,"byte_end":82879,"line_start":32,"line_end":32,"column_start":5,"column_end":98}},{"value":"/ in [URI Fragment representation](https://tools.ietf.org/html/rfc6901#section-6).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82884,"byte_end":82968,"line_start":33,"line_end":33,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83320,"byte_end":83326,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<Schema>::is_ref","value":"pub fn is_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83076,"byte_end":83124,"line_start":38,"line_end":38,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83129,"byte_end":83132,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ If `self` is a [`SchemaObject`] with `Some` [`reference`](struct.SchemaObject.html#structfield.reference) set, this returns `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83137,"byte_end":83272,"line_start":40,"line_end":40,"column_start":5,"column_end":140}},{"value":"/ Otherwise, returns `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83277,"byte_end":83308,"line_start":41,"line_end":41,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83880,"byte_end":83891,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"into_object","qualname":"<Schema>::into_object","value":"pub fn into_object(Self) -> SchemaObject","parent":null,"children":[],"decl_id":null,"docs":" Converts the given schema (if it is a boolean schema) into an equivalent schema object.","sig":null,"attributes":[{"value":"/ Converts the given schema (if it is a boolean schema) into an equivalent schema object.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83455,"byte_end":83546,"line_start":49,"line_end":49,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83551,"byte_end":83554,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the given schema is already a schema object, this has no effect.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83559,"byte_end":83630,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83635,"byte_end":83638,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83643,"byte_end":83656,"line_start":53,"line_end":53,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83661,"byte_end":83668,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ use schemars::schema::{Schema, SchemaObject};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83673,"byte_end":83722,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83727,"byte_end":83730,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let bool_schema = Schema::Bool(true);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83735,"byte_end":83776,"line_start":57,"line_end":57,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83781,"byte_end":83784,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bool_schema.into_object(), SchemaObject::default());","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83789,"byte_end":83856,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":83861,"byte_end":83868,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1577},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":84789,"byte_end":84799,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"RootSchema","qualname":"::schema::RootSchema","value":"RootSchema { meta_schema, schema, definitions }","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580}],"decl_id":null,"docs":" The root object of a JSON Schema document.\n","sig":null,"attributes":[{"value":"/ The root object of a JSON Schema document.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":84557,"byte_end":84603,"line_start":88,"line_end":88,"column_start":1,"column_end":47}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":84734,"byte_end":84777,"line_start":91,"line_end":91,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1578},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85052,"byte_end":85063,"line_start":97,"line_end":97,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::schema::RootSchema::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":" The `$schema` keyword.","sig":null,"attributes":[{"value":"/ The `$schema` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":84806,"byte_end":84832,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":84837,"byte_end":84840,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.1.1. The \"$schema\" Keyword](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.1.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":84845,"byte_end":84969,"line_start":95,"line_end":95,"column_start":5,"column_end":129}},{"value":"serde(rename = \"$schema\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":84974,"byte_end":85043,"line_start":96,"line_end":96,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1579},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85143,"byte_end":85149,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"name":"schema","qualname":"::schema::RootSchema::schema","value":"schema::SchemaObject","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":" The root schema itself.\n","sig":null,"attributes":[{"value":"/ The root schema itself.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85085,"byte_end":85112,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"serde(flatten)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85117,"byte_end":85134,"line_start":99,"line_end":99,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1580},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85740,"byte_end":85751,"line_start":109,"line_end":109,"column_start":9,"column_end":20},"name":"definitions","qualname":"::schema::RootSchema::definitions","value":"indexmap::IndexMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":" The `definitions` keyword.","sig":null,"attributes":[{"value":"/ The `definitions` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85169,"byte_end":85199,"line_start":101,"line_end":101,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85204,"byte_end":85207,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ In JSON Schema draft 2019-09 this was replaced by $defs, but in Schemars this is still","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85212,"byte_end":85302,"line_start":103,"line_end":103,"column_start":5,"column_end":95}},{"value":"/ serialized as `definitions` for backward-compatibility.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85307,"byte_end":85366,"line_start":104,"line_end":104,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85371,"byte_end":85374,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.5. Schema Re-Use With \"$defs\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.5),","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85379,"byte_end":85508,"line_start":106,"line_end":106,"column_start":5,"column_end":134}},{"value":"/ and [JSON Schema (draft 07) 9. Schema Re-Use With \"definitions\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01#section-9).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85513,"byte_end":85662,"line_start":107,"line_end":107,"column_start":5,"column_end":154}},{"value":"serde(alias = \"$defs\", skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85667,"byte_end":85731,"line_start":108,"line_end":108,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1682},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85988,"byte_end":86000,"line_start":116,"line_end":116,"column_start":12,"column_end":24},"name":"SchemaObject","qualname":"::schema::SchemaObject","value":"SchemaObject { metadata, instance_type, format, enum_values, const_value, subschemas, number, string, array, object, reference, extensions }","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694}],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[{"value":"/ A JSON Schema object.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85777,"byte_end":85802,"line_start":112,"line_end":112,"column_start":1,"column_end":26}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":85933,"byte_end":85976,"line_start":115,"line_end":115,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1683},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86211,"byte_end":86219,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"metadata","qualname":"::schema::SchemaObject::metadata","value":"std::option::Option<std::boxed::Box<schema::Metadata>>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Properties which annotate the [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"/ Properties which annotate the [`SchemaObject`] which typically have no effect when an object is being validated against the schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86007,"byte_end":86142,"line_start":117,"line_end":117,"column_start":5,"column_end":140}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86147,"byte_end":86202,"line_start":118,"line_end":118,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1684},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86621,"byte_end":86634,"line_start":125,"line_end":125,"column_start":9,"column_end":22},"name":"instance_type","qualname":"::schema::SchemaObject::instance_type","value":"std::option::Option<schema::SingleOrVec<schema::InstanceType>>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" The `type` keyword.","sig":null,"attributes":[{"value":"/ The `type` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86248,"byte_end":86271,"line_start":120,"line_end":120,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86276,"byte_end":86279,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.1. \"type\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.1)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86284,"byte_end":86414,"line_start":122,"line_end":122,"column_start":5,"column_end":135}},{"value":"/ and [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86419,"byte_end":86541,"line_start":123,"line_end":123,"column_start":5,"column_end":127}},{"value":"serde(rename = \"type\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86546,"byte_end":86612,"line_start":124,"line_end":124,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1685},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86940,"byte_end":86946,"line_start":130,"line_end":130,"column_start":9,"column_end":15},"name":"format","qualname":"::schema::SchemaObject::format","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" The `format` keyword.","sig":null,"attributes":[{"value":"/ The `format` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86675,"byte_end":86700,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86705,"byte_end":86708,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 7. A Vocabulary for Semantic Content With \"format\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-7).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86713,"byte_end":86877,"line_start":128,"line_end":128,"column_start":5,"column_end":169}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86882,"byte_end":86931,"line_start":129,"line_end":129,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1686},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87214,"byte_end":87225,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"name":"enum_values","qualname":"::schema::SchemaObject::enum_values","value":"std::option::Option<std::vec::Vec<serde_json::Value>>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" The `enum` keyword.","sig":null,"attributes":[{"value":"/ The `enum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86968,"byte_end":86991,"line_start":131,"line_end":131,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":86996,"byte_end":86999,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.2. \"enum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.2)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87004,"byte_end":87134,"line_start":133,"line_end":133,"column_start":5,"column_end":135}},{"value":"serde(rename = \"enum\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87139,"byte_end":87205,"line_start":134,"line_end":134,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1687},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87563,"byte_end":87574,"line_start":144,"line_end":144,"column_start":9,"column_end":20},"name":"const_value","qualname":"::schema::SchemaObject::const_value","value":"std::option::Option<serde_json::Value>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" The `const` keyword.","sig":null,"attributes":[{"value":"/ The `const` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87251,"byte_end":87275,"line_start":136,"line_end":136,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87280,"byte_end":87283,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.3. \"const\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.3)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87288,"byte_end":87419,"line_start":138,"line_end":138,"column_start":5,"column_end":136}},{"value":"serde(rename = \"const\", skip_serializing_if = \"Option::is_none\",\n        deserialize_with = \"allow_null\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87424,"byte_end":87554,"line_start":139,"line_end":143,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1688},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87764,"byte_end":87774,"line_start":147,"line_end":147,"column_start":9,"column_end":19},"name":"subschemas","qualname":"::schema::SchemaObject::subschemas","value":"std::option::Option<std::boxed::Box<schema::SubschemaValidation>>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions in terms of other schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87595,"byte_end":87695,"line_start":145,"line_end":145,"column_start":5,"column_end":105}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87700,"byte_end":87755,"line_start":146,"line_end":146,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1689},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87969,"byte_end":87975,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"name":"number","qualname":"::schema::SchemaObject::number","value":"std::option::Option<std::boxed::Box<schema::NumberValidation>>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for numbers.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87814,"byte_end":87900,"line_start":148,"line_end":148,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":87905,"byte_end":87960,"line_start":149,"line_end":149,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1690},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88167,"byte_end":88173,"line_start":153,"line_end":153,"column_start":9,"column_end":15},"name":"string","qualname":"::schema::SchemaObject::string","value":"std::option::Option<std::boxed::Box<schema::StringValidation>>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for strings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88012,"byte_end":88098,"line_start":151,"line_end":151,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88103,"byte_end":88158,"line_start":152,"line_end":152,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1691},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88364,"byte_end":88369,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"name":"array","qualname":"::schema::SchemaObject::array","value":"std::option::Option<std::boxed::Box<schema::ArrayValidation>>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for arrays.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88210,"byte_end":88295,"line_start":154,"line_end":154,"column_start":5,"column_end":90}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88300,"byte_end":88355,"line_start":155,"line_end":155,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1692},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88560,"byte_end":88566,"line_start":159,"line_end":159,"column_start":9,"column_end":15},"name":"object","qualname":"::schema::SchemaObject::object","value":"std::option::Option<std::boxed::Box<schema::ObjectValidation>>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for objects.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88405,"byte_end":88491,"line_start":157,"line_end":157,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88496,"byte_end":88551,"line_start":158,"line_end":158,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1693},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88855,"byte_end":88864,"line_start":164,"line_end":164,"column_start":9,"column_end":18},"name":"reference","qualname":"::schema::SchemaObject::reference","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" The `$ref` keyword.","sig":null,"attributes":[{"value":"/ The `$ref` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88603,"byte_end":88626,"line_start":160,"line_end":160,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88631,"byte_end":88634,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.4.1. Direct References with \"$ref\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.4.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88639,"byte_end":88775,"line_start":162,"line_end":162,"column_start":5,"column_end":141}},{"value":"serde(rename = \"$ref\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88780,"byte_end":88846,"line_start":163,"line_end":163,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1694},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":89038,"byte_end":89048,"line_start":167,"line_end":167,"column_start":9,"column_end":19},"name":"extensions","qualname":"::schema::SchemaObject::extensions","value":"indexmap::IndexMap<std::string::String, serde_json::Value>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Arbitrary extra properties which are not part of the JSON Schema specification, or which `schemars` does not support.\n","sig":null,"attributes":[{"value":"/ Arbitrary extra properties which are not part of the JSON Schema specification, or which `schemars` does not support.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":88886,"byte_end":89007,"line_start":165,"line_end":165,"column_start":5,"column_end":126}},{"value":"serde(flatten)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":89012,"byte_end":89029,"line_start":166,"line_end":166,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90564,"byte_end":90571,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<SchemaObject>::new_ref","value":"pub fn new_ref(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[{"value":"/ Creates a new `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90325,"byte_end":90357,"line_start":215,"line_end":215,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90362,"byte_end":90365,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The given reference string should be a URI reference. This will usually be a JSON Pointer","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90370,"byte_end":90463,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ in [URI Fragment representation](https://tools.ietf.org/html/rfc6901#section-6).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90468,"byte_end":90552,"line_start":218,"line_end":218,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90939,"byte_end":90945,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<SchemaObject>::is_ref","value":"pub fn is_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90718,"byte_end":90766,"line_start":226,"line_end":226,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90771,"byte_end":90774,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If `self` has `Some` [`reference`](struct.SchemaObject.html#structfield.reference) set, this returns `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90779,"byte_end":90891,"line_start":228,"line_end":228,"column_start":5,"column_end":117}},{"value":"/ Otherwise, returns `false`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90896,"byte_end":90927,"line_start":229,"line_end":229,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91377,"byte_end":91385,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"has_type","qualname":"<SchemaObject>::has_type","value":"pub fn has_type(&Self, InstanceType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` accepts values of the given type, according to the [`instance_type`] field.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` accepts values of the given type, according to the [`instance_type`] field.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91007,"byte_end":91111,"line_start":234,"line_end":234,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91116,"byte_end":91119,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This is a basic check that always returns `true` if no `instance_type` is specified on the schema,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91124,"byte_end":91226,"line_start":236,"line_end":236,"column_start":5,"column_end":107}},{"value":"/ and does not check any subschemas. Because of this, both `{}` and  `{\"not\": {}}` accept any type according","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91231,"byte_end":91341,"line_start":237,"line_end":237,"column_start":5,"column_end":115}},{"value":"/ to this method.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91346,"byte_end":91365,"line_start":238,"line_end":238,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91554,"byte_end":91562,"line_start":245,"line_end":245,"column_start":31,"column_end":39},"name":"metadata","qualname":"<SchemaObject>::metadata","value":"pub fn metadata(&mut Self) -> &mut Metadata","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`Metadata`](#structfield.metadata), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91605,"byte_end":91615,"line_start":246,"line_end":246,"column_start":31,"column_end":41},"name":"subschemas","qualname":"<SchemaObject>::subschemas","value":"pub fn subschemas(&mut Self) -> &mut SubschemaValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`SubschemaValidation`](#structfield.subschemas), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91669,"byte_end":91675,"line_start":247,"line_end":247,"column_start":31,"column_end":37},"name":"number","qualname":"<SchemaObject>::number","value":"pub fn number(&mut Self) -> &mut NumberValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`NumberValidation`](#structfield.number), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91726,"byte_end":91732,"line_start":248,"line_end":248,"column_start":31,"column_end":37},"name":"string","qualname":"<SchemaObject>::string","value":"pub fn string(&mut Self) -> &mut StringValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`StringValidation`](#structfield.string), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91783,"byte_end":91788,"line_start":249,"line_end":249,"column_start":31,"column_end":36},"name":"array","qualname":"<SchemaObject>::array","value":"pub fn array(&mut Self) -> &mut ArrayValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ArrayValidation`](#structfield.array), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91838,"byte_end":91844,"line_start":250,"line_end":250,"column_start":31,"column_end":37},"name":"object","qualname":"<SchemaObject>::object","value":"pub fn object(&mut Self) -> &mut ObjectValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ObjectValidation`](#structfield.object), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1791},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92300,"byte_end":92308,"line_start":263,"line_end":263,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::schema::Metadata","value":"Metadata { id, title, description, default, deprecated, read_only, write_only, examples }","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799}],"decl_id":null,"docs":" Properties which annotate a [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"/ Properties which annotate a [`SchemaObject`] which typically have no effect when an object is being validated against the schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91981,"byte_end":92114,"line_start":259,"line_end":259,"column_start":1,"column_end":134}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92245,"byte_end":92288,"line_start":262,"line_end":262,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1792},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92549,"byte_end":92551,"line_start":268,"line_end":268,"column_start":9,"column_end":11},"name":"id","qualname":"::schema::Metadata::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1791},"children":[],"decl_id":null,"docs":" The `$id` keyword.","sig":null,"attributes":[{"value":"/ The `$id` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92315,"byte_end":92337,"line_start":264,"line_end":264,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92342,"byte_end":92345,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.2. The \"$id\" Keyword](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92350,"byte_end":92470,"line_start":266,"line_end":266,"column_start":5,"column_end":125}},{"value":"serde(rename = \"$id\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92475,"byte_end":92540,"line_start":267,"line_end":267,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1793},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92819,"byte_end":92824,"line_start":273,"line_end":273,"column_start":9,"column_end":14},"name":"title","qualname":"::schema::Metadata::title","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1791},"children":[],"decl_id":null,"docs":" The `title` keyword.","sig":null,"attributes":[{"value":"/ The `title` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92573,"byte_end":92597,"line_start":269,"line_end":269,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92602,"byte_end":92605,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92610,"byte_end":92756,"line_start":271,"line_end":271,"column_start":5,"column_end":151}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92761,"byte_end":92810,"line_start":272,"line_end":272,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1794},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93098,"byte_end":93109,"line_start":278,"line_end":278,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::Metadata::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1791},"children":[],"decl_id":null,"docs":" The `description` keyword.","sig":null,"attributes":[{"value":"/ The `description` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92846,"byte_end":92876,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92881,"byte_end":92884,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":92889,"byte_end":93035,"line_start":276,"line_end":276,"column_start":5,"column_end":151}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93040,"byte_end":93089,"line_start":277,"line_end":277,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1795},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93418,"byte_end":93425,"line_start":286,"line_end":286,"column_start":9,"column_end":16},"name":"default","qualname":"::schema::Metadata::default","value":"std::option::Option<serde_json::Value>","parent":{"krate":0,"index":1791},"children":[],"decl_id":null,"docs":" The `default` keyword.","sig":null,"attributes":[{"value":"/ The `default` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93131,"byte_end":93157,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93162,"byte_end":93165,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.2. \"default\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93170,"byte_end":93300,"line_start":281,"line_end":281,"column_start":5,"column_end":135}},{"value":"serde(skip_serializing_if = \"Option::is_none\", deserialize_with =\n        \"allow_null\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93305,"byte_end":93409,"line_start":282,"line_end":285,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1796},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93677,"byte_end":93687,"line_start":291,"line_end":291,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::schema::Metadata::deprecated","value":"bool","parent":{"krate":0,"index":1791},"children":[],"decl_id":null,"docs":" The `deprecated` keyword.","sig":null,"attributes":[{"value":"/ The `deprecated` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93446,"byte_end":93475,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93480,"byte_end":93483,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.3. \"deprecated\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93488,"byte_end":93621,"line_start":289,"line_end":289,"column_start":5,"column_end":138}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93626,"byte_end":93668,"line_start":290,"line_end":290,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1797},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93942,"byte_end":93951,"line_start":296,"line_end":296,"column_start":9,"column_end":18},"name":"read_only","qualname":"::schema::Metadata::read_only","value":"bool","parent":{"krate":0,"index":1791},"children":[],"decl_id":null,"docs":" The `readOnly` keyword.","sig":null,"attributes":[{"value":"/ The `readOnly` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93699,"byte_end":93726,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93731,"byte_end":93734,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93739,"byte_end":93886,"line_start":294,"line_end":294,"column_start":5,"column_end":152}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93891,"byte_end":93933,"line_start":295,"line_end":295,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1798},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94207,"byte_end":94217,"line_start":301,"line_end":301,"column_start":9,"column_end":19},"name":"write_only","qualname":"::schema::Metadata::write_only","value":"bool","parent":{"krate":0,"index":1791},"children":[],"decl_id":null,"docs":" The `writeOnly` keyword.","sig":null,"attributes":[{"value":"/ The `writeOnly` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93963,"byte_end":93991,"line_start":297,"line_end":297,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":93996,"byte_end":93999,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94004,"byte_end":94151,"line_start":299,"line_end":299,"column_start":5,"column_end":152}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94156,"byte_end":94198,"line_start":300,"line_end":300,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1799},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94461,"byte_end":94469,"line_start":306,"line_end":306,"column_start":9,"column_end":17},"name":"examples","qualname":"::schema::Metadata::examples","value":"std::vec::Vec<serde_json::Value>","parent":{"krate":0,"index":1791},"children":[],"decl_id":null,"docs":" The `examples` keyword.","sig":null,"attributes":[{"value":"/ The `examples` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94229,"byte_end":94256,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94261,"byte_end":94264,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.5. \"examples\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.5).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94269,"byte_end":94400,"line_start":304,"line_end":304,"column_start":5,"column_end":136}},{"value":"serde(skip_serializing_if = \"Vec::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94405,"byte_end":94452,"line_start":305,"line_end":305,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1869},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94857,"byte_end":94876,"line_start":318,"line_end":318,"column_start":12,"column_end":31},"name":"SubschemaValidation","qualname":"::schema::SubschemaValidation","value":"SubschemaValidation { all_of, any_of, one_of, not, if_schema, then_schema, else_schema }","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions in terms of other schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94573,"byte_end":94671,"line_start":314,"line_end":314,"column_start":1,"column_end":99}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94802,"byte_end":94845,"line_start":317,"line_end":317,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1870},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95097,"byte_end":95103,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"name":"all_of","qualname":"::schema::SubschemaValidation::all_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" The `allOf` keyword.","sig":null,"attributes":[{"value":"/ The `allOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94883,"byte_end":94907,"line_start":319,"line_end":319,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94912,"byte_end":94915,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.1. \"allOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":94920,"byte_end":95034,"line_start":321,"line_end":321,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95039,"byte_end":95088,"line_start":322,"line_end":322,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1871},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95344,"byte_end":95350,"line_start":328,"line_end":328,"column_start":9,"column_end":15},"name":"any_of","qualname":"::schema::SubschemaValidation::any_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" The `anyOf` keyword.","sig":null,"attributes":[{"value":"/ The `anyOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95130,"byte_end":95154,"line_start":324,"line_end":324,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95159,"byte_end":95162,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.2. \"anyOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95167,"byte_end":95281,"line_start":326,"line_end":326,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95286,"byte_end":95335,"line_start":327,"line_end":327,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1872},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95591,"byte_end":95597,"line_start":333,"line_end":333,"column_start":9,"column_end":15},"name":"one_of","qualname":"::schema::SubschemaValidation::one_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" The `oneOf` keyword.","sig":null,"attributes":[{"value":"/ The `oneOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95377,"byte_end":95401,"line_start":329,"line_end":329,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95406,"byte_end":95409,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.3. \"oneOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95414,"byte_end":95528,"line_start":331,"line_end":331,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95533,"byte_end":95582,"line_start":332,"line_end":332,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1873},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95834,"byte_end":95837,"line_start":338,"line_end":338,"column_start":9,"column_end":12},"name":"not","qualname":"::schema::SubschemaValidation::not","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" The `not` keyword.","sig":null,"attributes":[{"value":"/ The `not` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95624,"byte_end":95646,"line_start":334,"line_end":334,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95651,"byte_end":95654,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.4. \"not\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95659,"byte_end":95771,"line_start":336,"line_end":336,"column_start":5,"column_end":117}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95776,"byte_end":95825,"line_start":337,"line_end":337,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1874},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96087,"byte_end":96096,"line_start":343,"line_end":343,"column_start":9,"column_end":18},"name":"if_schema","qualname":"::schema::SubschemaValidation::if_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" The `if` keyword.","sig":null,"attributes":[{"value":"/ The `if` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95864,"byte_end":95885,"line_start":339,"line_end":339,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95890,"byte_end":95893,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.1. \"if\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":95898,"byte_end":96009,"line_start":341,"line_end":341,"column_start":5,"column_end":116}},{"value":"serde(rename = \"if\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96014,"byte_end":96078,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1875},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96352,"byte_end":96363,"line_start":348,"line_end":348,"column_start":9,"column_end":20},"name":"then_schema","qualname":"::schema::SubschemaValidation::then_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" The `then` keyword.","sig":null,"attributes":[{"value":"/ The `then` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96123,"byte_end":96146,"line_start":344,"line_end":344,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96151,"byte_end":96154,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.2. \"then\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96159,"byte_end":96272,"line_start":346,"line_end":346,"column_start":5,"column_end":118}},{"value":"serde(rename = \"then\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96277,"byte_end":96343,"line_start":347,"line_end":347,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1876},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96619,"byte_end":96630,"line_start":353,"line_end":353,"column_start":9,"column_end":20},"name":"else_schema","qualname":"::schema::SubschemaValidation::else_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" The `else` keyword.","sig":null,"attributes":[{"value":"/ The `else` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96390,"byte_end":96413,"line_start":349,"line_end":349,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96418,"byte_end":96421,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.3. \"else\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96426,"byte_end":96539,"line_start":351,"line_end":351,"column_start":5,"column_end":118}},{"value":"serde(rename = \"else\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96544,"byte_end":96610,"line_start":352,"line_end":352,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1942},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96926,"byte_end":96942,"line_start":360,"line_end":360,"column_start":12,"column_end":28},"name":"NumberValidation","qualname":"::schema::NumberValidation","value":"NumberValidation { multiple_of, maximum, exclusive_maximum, minimum, exclusive_minimum }","parent":null,"children":[{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for numbers.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96656,"byte_end":96740,"line_start":356,"line_end":356,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96871,"byte_end":96914,"line_start":359,"line_end":359,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1943},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97191,"byte_end":97202,"line_start":365,"line_end":365,"column_start":9,"column_end":20},"name":"multiple_of","qualname":"::schema::NumberValidation::multiple_of","value":"std::option::Option<f64>","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":" The `multipleOf` keyword.","sig":null,"attributes":[{"value":"/ The `multipleOf` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96949,"byte_end":96978,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96983,"byte_end":96986,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.1. \"multipleOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":96991,"byte_end":97128,"line_start":363,"line_end":363,"column_start":5,"column_end":142}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97133,"byte_end":97182,"line_start":364,"line_end":364,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1944},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97457,"byte_end":97464,"line_start":370,"line_end":370,"column_start":9,"column_end":16},"name":"maximum","qualname":"::schema::NumberValidation::maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":" The `maximum` keyword.","sig":null,"attributes":[{"value":"/ The `maximum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97221,"byte_end":97247,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97252,"byte_end":97255,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.2. \"maximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97260,"byte_end":97394,"line_start":368,"line_end":368,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97399,"byte_end":97448,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1945},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97737,"byte_end":97754,"line_start":375,"line_end":375,"column_start":9,"column_end":26},"name":"exclusive_maximum","qualname":"::schema::NumberValidation::exclusive_maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":" The `exclusiveMaximum` keyword.","sig":null,"attributes":[{"value":"/ The `exclusiveMaximum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97483,"byte_end":97518,"line_start":371,"line_end":371,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97523,"byte_end":97526,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.3. \"exclusiveMaximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97531,"byte_end":97674,"line_start":373,"line_end":373,"column_start":5,"column_end":148}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97679,"byte_end":97728,"line_start":374,"line_end":374,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1946},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98009,"byte_end":98016,"line_start":380,"line_end":380,"column_start":9,"column_end":16},"name":"minimum","qualname":"::schema::NumberValidation::minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":" The `minimum` keyword.","sig":null,"attributes":[{"value":"/ The `minimum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97773,"byte_end":97799,"line_start":376,"line_end":376,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97804,"byte_end":97807,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.4. \"minimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97812,"byte_end":97946,"line_start":378,"line_end":378,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":97951,"byte_end":98000,"line_start":379,"line_end":379,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1947},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98289,"byte_end":98306,"line_start":385,"line_end":385,"column_start":9,"column_end":26},"name":"exclusive_minimum","qualname":"::schema::NumberValidation::exclusive_minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":" The `exclusiveMinimum` keyword.","sig":null,"attributes":[{"value":"/ The `exclusiveMinimum` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98035,"byte_end":98070,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98075,"byte_end":98078,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.5. \"exclusiveMinimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.5).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98083,"byte_end":98226,"line_start":383,"line_end":383,"column_start":5,"column_end":148}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98231,"byte_end":98280,"line_start":384,"line_end":384,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2009},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98594,"byte_end":98610,"line_start":392,"line_end":392,"column_start":12,"column_end":28},"name":"StringValidation","qualname":"::schema::StringValidation","value":"StringValidation { max_length, min_length, pattern }","parent":null,"children":[{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for strings.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98324,"byte_end":98408,"line_start":388,"line_end":388,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98539,"byte_end":98582,"line_start":391,"line_end":391,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2010},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98857,"byte_end":98867,"line_start":397,"line_end":397,"column_start":9,"column_end":19},"name":"max_length","qualname":"::schema::StringValidation::max_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":2009},"children":[],"decl_id":null,"docs":" The `maxLength` keyword.","sig":null,"attributes":[{"value":"/ The `maxLength` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98617,"byte_end":98645,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98650,"byte_end":98653,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.1. \"maxLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98658,"byte_end":98794,"line_start":395,"line_end":395,"column_start":5,"column_end":141}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98799,"byte_end":98848,"line_start":396,"line_end":396,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2011},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99126,"byte_end":99136,"line_start":402,"line_end":402,"column_start":9,"column_end":19},"name":"min_length","qualname":"::schema::StringValidation::min_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":2009},"children":[],"decl_id":null,"docs":" The `minLength` keyword.","sig":null,"attributes":[{"value":"/ The `minLength` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98886,"byte_end":98914,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98919,"byte_end":98922,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.2. \"minLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":98927,"byte_end":99063,"line_start":400,"line_end":400,"column_start":5,"column_end":141}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99068,"byte_end":99117,"line_start":401,"line_end":401,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2012},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99391,"byte_end":99398,"line_start":407,"line_end":407,"column_start":9,"column_end":16},"name":"pattern","qualname":"::schema::StringValidation::pattern","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2009},"children":[],"decl_id":null,"docs":" The `pattern` keyword.","sig":null,"attributes":[{"value":"/ The `pattern` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99155,"byte_end":99181,"line_start":403,"line_end":403,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99186,"byte_end":99189,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.3. \"pattern\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99194,"byte_end":99328,"line_start":405,"line_end":405,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99333,"byte_end":99382,"line_start":406,"line_end":406,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2080},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99688,"byte_end":99703,"line_start":414,"line_end":414,"column_start":12,"column_end":27},"name":"ArrayValidation","qualname":"::schema::ArrayValidation","value":"ArrayValidation { items, additional_items, max_items, min_items, unique_items, contains }","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for arrays.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99419,"byte_end":99502,"line_start":410,"line_end":410,"column_start":1,"column_end":84}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99633,"byte_end":99676,"line_start":413,"line_end":413,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2081},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99924,"byte_end":99929,"line_start":419,"line_end":419,"column_start":9,"column_end":14},"name":"items","qualname":"::schema::ArrayValidation::items","value":"std::option::Option<schema::SingleOrVec<schema::Schema>>","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":" The `items` keyword.","sig":null,"attributes":[{"value":"/ The `items` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99710,"byte_end":99734,"line_start":415,"line_end":415,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99739,"byte_end":99742,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.1. \"items\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99747,"byte_end":99861,"line_start":417,"line_end":417,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99866,"byte_end":99915,"line_start":418,"line_end":418,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2082},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100198,"byte_end":100214,"line_start":424,"line_end":424,"column_start":9,"column_end":25},"name":"additional_items","qualname":"::schema::ArrayValidation::additional_items","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":" The `additionalItems` keyword.","sig":null,"attributes":[{"value":"/ The `additionalItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":99964,"byte_end":99998,"line_start":420,"line_end":420,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100003,"byte_end":100006,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.2. \"additionalItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100011,"byte_end":100135,"line_start":422,"line_end":422,"column_start":5,"column_end":129}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100140,"byte_end":100189,"line_start":423,"line_end":423,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2083},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100479,"byte_end":100488,"line_start":429,"line_end":429,"column_start":9,"column_end":18},"name":"max_items","qualname":"::schema::ArrayValidation::max_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":" The `maxItems` keyword.","sig":null,"attributes":[{"value":"/ The `maxItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100241,"byte_end":100268,"line_start":425,"line_end":425,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100273,"byte_end":100276,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.1. \"maxItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100281,"byte_end":100416,"line_start":427,"line_end":427,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100421,"byte_end":100470,"line_start":428,"line_end":428,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2084},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100745,"byte_end":100754,"line_start":434,"line_end":434,"column_start":9,"column_end":18},"name":"min_items","qualname":"::schema::ArrayValidation::min_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":" The `minItems` keyword.","sig":null,"attributes":[{"value":"/ The `minItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100507,"byte_end":100534,"line_start":430,"line_end":430,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100539,"byte_end":100542,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.2. \"minItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100547,"byte_end":100682,"line_start":432,"line_end":432,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100687,"byte_end":100736,"line_start":433,"line_end":433,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2085},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101017,"byte_end":101029,"line_start":439,"line_end":439,"column_start":9,"column_end":21},"name":"unique_items","qualname":"::schema::ArrayValidation::unique_items","value":"std::option::Option<bool>","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":" The `uniqueItems` keyword.","sig":null,"attributes":[{"value":"/ The `uniqueItems` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100773,"byte_end":100803,"line_start":435,"line_end":435,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100808,"byte_end":100811,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.3. \"uniqueItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100816,"byte_end":100954,"line_start":437,"line_end":437,"column_start":5,"column_end":143}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":100959,"byte_end":101008,"line_start":438,"line_end":438,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2086},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101269,"byte_end":101277,"line_start":444,"line_end":444,"column_start":9,"column_end":17},"name":"contains","qualname":"::schema::ArrayValidation::contains","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2080},"children":[],"decl_id":null,"docs":" The `contains` keyword.","sig":null,"attributes":[{"value":"/ The `contains` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101049,"byte_end":101076,"line_start":440,"line_end":440,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101081,"byte_end":101084,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.4. \"contains\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.4).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101089,"byte_end":101206,"line_start":442,"line_end":442,"column_start":5,"column_end":122}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101211,"byte_end":101260,"line_start":443,"line_end":443,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2156},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101573,"byte_end":101589,"line_start":451,"line_end":451,"column_start":12,"column_end":28},"name":"ObjectValidation","qualname":"::schema::ObjectValidation","value":"ObjectValidation { max_properties, min_properties, required, properties, pattern_properties, additional_properties, property_names }","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for objects.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101303,"byte_end":101387,"line_start":447,"line_end":447,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101518,"byte_end":101561,"line_start":450,"line_end":450,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2157},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101844,"byte_end":101858,"line_start":456,"line_end":456,"column_start":9,"column_end":23},"name":"max_properties","qualname":"::schema::ObjectValidation::max_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" The `maxProperties` keyword.","sig":null,"attributes":[{"value":"/ The `maxProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101596,"byte_end":101628,"line_start":452,"line_end":452,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101633,"byte_end":101636,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.1. \"maxProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101641,"byte_end":101781,"line_start":454,"line_end":454,"column_start":5,"column_end":145}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101786,"byte_end":101835,"line_start":455,"line_end":455,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2158},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102125,"byte_end":102139,"line_start":461,"line_end":461,"column_start":9,"column_end":23},"name":"min_properties","qualname":"::schema::ObjectValidation::min_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" The `minProperties` keyword.","sig":null,"attributes":[{"value":"/ The `minProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101877,"byte_end":101909,"line_start":457,"line_end":457,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101914,"byte_end":101917,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.2. \"minProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":101922,"byte_end":102062,"line_start":459,"line_end":459,"column_start":5,"column_end":145}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102067,"byte_end":102116,"line_start":460,"line_end":460,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2159},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102394,"byte_end":102402,"line_start":466,"line_end":466,"column_start":9,"column_end":17},"name":"required","qualname":"::schema::ObjectValidation::required","value":"std::collections::BTreeSet<std::string::String>","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" The `required` keyword.","sig":null,"attributes":[{"value":"/ The `required` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102158,"byte_end":102185,"line_start":462,"line_end":462,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102190,"byte_end":102193,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.3. \"required\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102198,"byte_end":102333,"line_start":464,"line_end":464,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Set::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102338,"byte_end":102385,"line_start":465,"line_end":465,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2160},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102643,"byte_end":102653,"line_start":471,"line_end":471,"column_start":9,"column_end":19},"name":"properties","qualname":"::schema::ObjectValidation::properties","value":"indexmap::IndexMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" The `properties` keyword.","sig":null,"attributes":[{"value":"/ The `properties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102421,"byte_end":102450,"line_start":467,"line_end":467,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102455,"byte_end":102458,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.1. \"properties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102463,"byte_end":102582,"line_start":469,"line_end":469,"column_start":5,"column_end":124}},{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102587,"byte_end":102634,"line_start":470,"line_end":470,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2161},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102916,"byte_end":102934,"line_start":476,"line_end":476,"column_start":9,"column_end":27},"name":"pattern_properties","qualname":"::schema::ObjectValidation::pattern_properties","value":"indexmap::IndexMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" The `patternProperties` keyword.","sig":null,"attributes":[{"value":"/ The `patternProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102680,"byte_end":102716,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102721,"byte_end":102724,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.2. \"patternProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.2).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102729,"byte_end":102855,"line_start":474,"line_end":474,"column_start":5,"column_end":131}},{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102860,"byte_end":102907,"line_start":475,"line_end":475,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2162},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103205,"byte_end":103226,"line_start":481,"line_end":481,"column_start":9,"column_end":30},"name":"additional_properties","qualname":"::schema::ObjectValidation::additional_properties","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" The `additionalProperties` keyword.","sig":null,"attributes":[{"value":"/ The `additionalProperties` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":102961,"byte_end":103000,"line_start":477,"line_end":477,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103005,"byte_end":103008,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.3. \"additionalProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.3).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103013,"byte_end":103142,"line_start":479,"line_end":479,"column_start":5,"column_end":134}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103147,"byte_end":103196,"line_start":480,"line_end":480,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2163},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103483,"byte_end":103497,"line_start":486,"line_end":486,"column_start":9,"column_end":23},"name":"property_names","qualname":"::schema::ObjectValidation::property_names","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" The `propertyNames` keyword.","sig":null,"attributes":[{"value":"/ The `propertyNames` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103253,"byte_end":103285,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103290,"byte_end":103293,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.5. \"propertyNames\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.5).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103298,"byte_end":103420,"line_start":484,"line_end":484,"column_start":5,"column_end":127}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103425,"byte_end":103474,"line_start":485,"line_end":485,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2238},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103926,"byte_end":103930,"line_start":496,"line_end":496,"column_start":5,"column_end":9},"name":"Null","qualname":"::schema::InstanceType::Null","value":"InstanceType::Null","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2240},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103936,"byte_end":103943,"line_start":497,"line_end":497,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::schema::InstanceType::Boolean","value":"InstanceType::Boolean","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2242},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103949,"byte_end":103955,"line_start":498,"line_end":498,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::InstanceType::Object","value":"InstanceType::Object","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2244},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103961,"byte_end":103966,"line_start":499,"line_end":499,"column_start":5,"column_end":10},"name":"Array","qualname":"::schema::InstanceType::Array","value":"InstanceType::Array","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2246},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103972,"byte_end":103978,"line_start":500,"line_end":500,"column_start":5,"column_end":11},"name":"Number","qualname":"::schema::InstanceType::Number","value":"InstanceType::Number","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2248},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103984,"byte_end":103990,"line_start":501,"line_end":501,"column_start":5,"column_end":11},"name":"String","qualname":"::schema::InstanceType::String","value":"InstanceType::String","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2250},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103996,"byte_end":104003,"line_start":502,"line_end":502,"column_start":5,"column_end":12},"name":"Integer","qualname":"::schema::InstanceType::Integer","value":"InstanceType::Integer","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2237},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103907,"byte_end":103919,"line_start":495,"line_end":495,"column_start":10,"column_end":22},"name":"InstanceType","qualname":"::schema::InstanceType","value":"pub enum InstanceType {\n    Null,\n    Boolean,\n    Object,\n    Array,\n    Number,\n    String,\n    Integer,\n}","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2244},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2250}],"decl_id":null,"docs":" The possible types of values in JSON Schema documents.","sig":null,"attributes":[{"value":"/ The possible types of values in JSON Schema documents.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103523,"byte_end":103581,"line_start":489,"line_end":489,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103582,"byte_end":103585,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ See [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103586,"byte_end":103708,"line_start":491,"line_end":491,"column_start":1,"column_end":123}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":103863,"byte_end":103897,"line_start":494,"line_end":494,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2292},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104372,"byte_end":104378,"line_start":512,"line_end":512,"column_start":5,"column_end":11},"name":"Single","qualname":"::schema::SingleOrVec::Single","value":"SingleOrVec::Single(Box<T>)","parent":{"krate":0,"index":2290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2295},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104392,"byte_end":104395,"line_start":513,"line_end":513,"column_start":5,"column_end":8},"name":"Vec","qualname":"::schema::SingleOrVec::Vec","value":"SingleOrVec::Vec(Vec<T>)","parent":{"krate":0,"index":2290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2290},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104351,"byte_end":104362,"line_start":511,"line_end":511,"column_start":10,"column_end":21},"name":"SingleOrVec","qualname":"::schema::SingleOrVec","value":"pub enum SingleOrVec<T> { Single(Box<T>), Vec(Vec<T>), }","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2295}],"decl_id":null,"docs":" A type which can be serialized as a single item, or multiple items.","sig":null,"attributes":[{"value":"/ A type which can be serialized as a single item, or multiple items.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104008,"byte_end":104079,"line_start":505,"line_end":505,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104080,"byte_end":104083,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ In some contexts, a `Single` may be semantically distinct from a `Vec` containing only item.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104084,"byte_end":104180,"line_start":507,"line_end":507,"column_start":1,"column_end":97}},{"value":"serde(untagged)","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104323,"byte_end":104341,"line_start":510,"line_end":510,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":105169,"byte_end":105177,"line_start":545,"line_end":545,"column_start":12,"column_end":20},"name":"contains","qualname":"<SingleOrVec<T>>::contains","value":"pub fn contains(&Self, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is either a `Single` equal to `x`, or a `Vec` containing `x`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is either a `Single` equal to `x`, or a `Vec` containing `x`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104689,"byte_end":104779,"line_start":529,"line_end":529,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104784,"byte_end":104787,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104792,"byte_end":104806,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104811,"byte_end":104814,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104819,"byte_end":104826,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use schemars::schema::SingleOrVec;","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104831,"byte_end":104869,"line_start":534,"line_end":534,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104874,"byte_end":104877,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let s = SingleOrVec::from(10);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104882,"byte_end":104916,"line_start":536,"line_end":536,"column_start":5,"column_end":39}},{"value":"/ assert!(s.contains(&10));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104921,"byte_end":104950,"line_start":537,"line_end":537,"column_start":5,"column_end":34}},{"value":"/ assert!(!s.contains(&20));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104955,"byte_end":104985,"line_start":538,"line_end":538,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104990,"byte_end":104993,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let v = SingleOrVec::from(vec![10, 20]);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104998,"byte_end":105042,"line_start":540,"line_end":540,"column_start":5,"column_end":49}},{"value":"/ assert!(v.contains(&10));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":105047,"byte_end":105076,"line_start":541,"line_end":541,"column_start":5,"column_end":34}},{"value":"/ assert!(v.contains(&20));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":105081,"byte_end":105110,"line_start":542,"line_end":542,"column_start":5,"column_end":34}},{"value":"/ assert!(!v.contains(&30));","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":105115,"byte_end":105145,"line_start":543,"line_end":543,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":105150,"byte_end":105157,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":588},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::visit","value":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":2298},{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":620},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2308},{"krate":0,"index":623},{"krate":0,"index":2310},{"krate":0,"index":2312},{"krate":0,"index":2314},{"krate":0,"index":625}],"decl_id":null,"docs":"Contains the [`Visitor`] trait, used to recursively modify a constructed schema and its subschemas.","sig":null,"attributes":[{"value":"*\nContains the [`Visitor`] trait, used to recursively modify a constructed schema and its subschemas.\n\nSometimes you may want to apply a change to a schema, as well as all schemas contained within it.\nThe easiest way to achieve this is by defining a type that implements [`Visitor`].\nAll methods of `Visitor` have a default implementation that makes no change but recursively visits all subschemas.\nWhen overriding one of these methods, you will *usually* want to still call this default implementation.\n\n# Example\nTo add a custom property to all schemas:\n```\nuse schemars::schema::SchemaObject;\nuse schemars::visit::{Visitor, visit_schema_object};\n\npub struct MyVisitor;\n\nimpl Visitor for MyVisitor {\n    fn visit_schema_object(&mut self, schema: &mut SchemaObject) {\n        // First, make our change to this schema\n        schema.extensions.insert(\"my_property\".to_string(), serde_json::json!(\"hello world\"));\n\n        // Then delegate to default implementation to visit any subschemas\n        visit_schema_object(self, schema);\n    }\n}\n```\n*/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":105897,"byte_end":106945,"line_start":1,"line_end":27,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":602},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107103,"byte_end":107110,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"Visitor","qualname":"::visit::Visitor","value":"Visitor","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"decl_id":null,"docs":" Trait used to recursively modify a constructed schema and its subschemas.\n","sig":null,"attributes":[{"value":"/ Trait used to recursively modify a constructed schema and its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107015,"byte_end":107092,"line_start":30,"line_end":30,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107340,"byte_end":107357,"line_start":35,"line_end":35,"column_start":8,"column_end":25},"name":"visit_root_schema","qualname":"::visit::Visitor::visit_root_schema","value":"pub fn visit_root_schema(&mut Self, &mut RootSchema)","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Override this method to modify a [`RootSchema`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`RootSchema`] and (optionally) its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107117,"byte_end":107201,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107206,"byte_end":107209,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_root_schema`] function to visit subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107214,"byte_end":107332,"line_start":34,"line_end":34,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107657,"byte_end":107669,"line_start":42,"line_end":42,"column_start":8,"column_end":20},"name":"visit_schema","qualname":"::visit::Visitor::visit_schema","value":"pub fn visit_schema(&mut Self, &mut Schema)","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Override this method to modify a [`Schema`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`Schema`] and (optionally) its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107443,"byte_end":107523,"line_start":39,"line_end":39,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107528,"byte_end":107531,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_schema`] function to visit subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107536,"byte_end":107649,"line_start":41,"line_end":41,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107977,"byte_end":107996,"line_start":49,"line_end":49,"column_start":8,"column_end":27},"name":"visit_schema_object","qualname":"::visit::Visitor::visit_schema_object","value":"pub fn visit_schema_object(&mut Self, &mut SchemaObject)","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Override this method to modify a [`SchemaObject`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`SchemaObject`] and (optionally) its subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107750,"byte_end":107836,"line_start":46,"line_end":46,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107841,"byte_end":107844,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_schema_object`] function to visit subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":107849,"byte_end":107969,"line_start":48,"line_end":48,"column_start":5,"column_end":125}}]},{"kind":"Function","id":{"krate":0,"index":606},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":108144,"byte_end":108161,"line_start":55,"line_end":55,"column_start":8,"column_end":25},"name":"visit_root_schema","qualname":"::visit::visit_root_schema","value":"pub fn visit_root_schema<V: Visitor + ?Sized>(&mut V, &mut RootSchema)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`RootSchema`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`RootSchema`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":108088,"byte_end":108136,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":608},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":108367,"byte_end":108379,"line_start":61,"line_end":61,"column_start":8,"column_end":20},"name":"visit_schema","qualname":"::visit::visit_schema","value":"pub fn visit_schema<V: Visitor + ?Sized>(&mut V, &mut Schema)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`Schema`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`Schema`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":108315,"byte_end":108359,"line_start":60,"line_end":60,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":610},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":108585,"byte_end":108604,"line_start":68,"line_end":68,"column_start":8,"column_end":27},"name":"visit_schema_object","qualname":"::visit::visit_schema_object","value":"pub fn visit_schema_object<V: Visitor + ?Sized>(&mut V, &mut SchemaObject)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`SchemaObject`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`SchemaObject`].","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":108527,"byte_end":108577,"line_start":67,"line_end":67,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2298},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":110514,"byte_end":110532,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"ReplaceBoolSchemas","qualname":"::visit::ReplaceBoolSchemas","value":"ReplaceBoolSchemas { skip_additional_properties }","parent":null,"children":[{"krate":0,"index":2299}],"decl_id":null,"docs":" This visitor will replace all boolean JSON Schemas with equivalent object schemas.","sig":null,"attributes":[{"value":"/ This visitor will replace all boolean JSON Schemas with equivalent object schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":110281,"byte_end":110367,"line_start":125,"line_end":125,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":110368,"byte_end":110371,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. OpenAPI 3.0) that do not support booleans as schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":110372,"byte_end":110478,"line_start":127,"line_end":127,"column_start":1,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":2299},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":110650,"byte_end":110676,"line_start":131,"line_end":131,"column_start":9,"column_end":35},"name":"skip_additional_properties","qualname":"::visit::ReplaceBoolSchemas::skip_additional_properties","value":"bool","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" When set to `true`, a schema's `additionalProperties` property will not be changed from a boolean.\n","sig":null,"attributes":[{"value":"/ When set to `true`, a schema's `additionalProperties` property will not be changed from a boolean.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":110539,"byte_end":110641,"line_start":130,"line_end":130,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":2304},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":111891,"byte_end":111908,"line_start":166,"line_end":166,"column_start":12,"column_end":29},"name":"RemoveRefSiblings","qualname":"::visit::RemoveRefSiblings","value":"","parent":null,"children":[],"decl_id":null,"docs":" This visitor will restructure JSON Schema objects so that the `$ref` property will never appear alongside any other properties.","sig":null,"attributes":[{"value":"/ This visitor will restructure JSON Schema objects so that the `$ref` property will never appear alongside any other properties.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":111603,"byte_end":111734,"line_start":162,"line_end":162,"column_start":1,"column_end":132}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":111735,"byte_end":111738,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. Draft 7) that do not support other properties alongside `$ref`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":111739,"byte_end":111855,"line_start":164,"line_end":164,"column_start":1,"column_end":117}}]},{"kind":"Struct","id":{"krate":0,"index":2310},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":112839,"byte_end":112855,"line_start":191,"line_end":191,"column_start":12,"column_end":28},"name":"SetSingleExample","qualname":"::visit::SetSingleExample","value":"SetSingleExample { retain_examples }","parent":null,"children":[{"krate":0,"index":2311}],"decl_id":null,"docs":" This visitor will remove the `examples` schema property and (if present) set its first value as the `example` property.","sig":null,"attributes":[{"value":"/ This visitor will remove the `examples` schema property and (if present) set its first value as the `example` property.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":112565,"byte_end":112688,"line_start":187,"line_end":187,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":112689,"byte_end":112692,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. OpenAPI 3.0) that do not support the `examples` property.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":112693,"byte_end":112803,"line_start":189,"line_end":189,"column_start":1,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":2311},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":112994,"byte_end":113009,"line_start":193,"line_end":193,"column_start":9,"column_end":24},"name":"retain_examples","qualname":"::visit::SetSingleExample::retain_examples","value":"bool","parent":{"krate":0,"index":2310},"children":[],"decl_id":null,"docs":" When set to `true`, the `examples` property will not be removed, but its first value will still be copied to `example`.\n","sig":null,"attributes":[{"value":"/ When set to `true`, the `examples` property will not be removed, but its first value will still be copied to `example`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":112862,"byte_end":112985,"line_start":192,"line_end":192,"column_start":5,"column_end":128}}]},{"kind":"Trait","id":{"krate":0,"index":636},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10158,"byte_end":10168,"line_start":340,"line_end":340,"column_start":11,"column_end":21},"name":"JsonSchema","qualname":"::JsonSchema","value":"JsonSchema","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641}],"decl_id":null,"docs":" A type which can be described as a JSON Schema document.","sig":null,"attributes":[{"value":"/ A type which can be described as a JSON Schema document.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9708,"byte_end":9768,"line_start":323,"line_end":323,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9769,"byte_end":9772,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ This is implemented for many Rust primitive and standard library types.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9773,"byte_end":9848,"line_start":325,"line_end":325,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9849,"byte_end":9852,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ This can also be automatically derived on most custom types with `#[derive(JsonSchema)]`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9853,"byte_end":9946,"line_start":327,"line_end":327,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9947,"byte_end":9950,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9951,"byte_end":9964,"line_start":329,"line_end":329,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9965,"byte_end":9972,"line_start":330,"line_end":330,"column_start":1,"column_end":8}},{"value":"/ use schemars::{schema_for, JsonSchema};","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9973,"byte_end":10016,"line_start":331,"line_end":331,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10017,"byte_end":10020,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10021,"byte_end":10046,"line_start":333,"line_end":333,"column_start":1,"column_end":26}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10047,"byte_end":10068,"line_start":334,"line_end":334,"column_start":1,"column_end":22}},{"value":"/     foo: i32,","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10069,"byte_end":10086,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10087,"byte_end":10092,"line_start":336,"line_end":336,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10093,"byte_end":10096,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ let my_schema = schema_for!(MyStruct);","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10097,"byte_end":10139,"line_start":338,"line_end":338,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10140,"byte_end":10147,"line_start":339,"line_end":339,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10581,"byte_end":10597,"line_start":347,"line_end":347,"column_start":8,"column_end":24},"name":"is_referenceable","qualname":"::JsonSchema::is_referenceable","value":"pub fn is_referenceable() -> bool","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" Whether JSON Schemas generated for this type should be re-used where possible using the `$ref` keyword.","sig":null,"attributes":[{"value":"/ Whether JSON Schemas generated for this type should be re-used where possible using the `$ref` keyword.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10175,"byte_end":10282,"line_start":341,"line_end":341,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10287,"byte_end":10290,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ For trivial types (such as primitives), this should return `false`. For more complex types, it should return `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10295,"byte_end":10415,"line_start":343,"line_end":343,"column_start":5,"column_end":125}},{"value":"/ For recursive types, this **must** return `true` to prevent infinite cycles when generating schemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10420,"byte_end":10524,"line_start":344,"line_end":344,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10529,"byte_end":10532,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ By default, this returns `true`.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10537,"byte_end":10573,"line_start":346,"line_end":346,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10813,"byte_end":10824,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"schema_name","qualname":"::JsonSchema::schema_name","value":"pub fn schema_name() -> String","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" The name of the generated JSON Schema.","sig":null,"attributes":[{"value":"/ The name of the generated JSON Schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10634,"byte_end":10676,"line_start":351,"line_end":351,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10681,"byte_end":10684,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This is used as the title for root schemas, and the key within the root's `definitions` property for subschemas.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10689,"byte_end":10805,"line_start":353,"line_end":353,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":11168,"byte_end":11179,"line_start":362,"line_end":362,"column_start":8,"column_end":19},"name":"json_schema","qualname":"::JsonSchema::json_schema","value":"pub fn json_schema(&mut gen::SchemaGenerator) -> Schema","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" Generates a JSON Schema for this type.","sig":null,"attributes":[{"value":"/ Generates a JSON Schema for this type.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10843,"byte_end":10885,"line_start":356,"line_end":356,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10890,"byte_end":10893,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ If the returned schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":10898,"byte_end":11016,"line_start":358,"line_end":358,"column_start":5,"column_end":123}},{"value":"/ add them to the [`SchemaGenerator`](gen::SchemaGenerator)'s schema definitions.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":11021,"byte_end":11104,"line_start":359,"line_end":359,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":11109,"byte_end":11112,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This should not return a `$ref` schema.","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":11117,"byte_end":11160,"line_start":361,"line_end":361,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":11298,"byte_end":11340,"line_start":366,"line_end":366,"column_start":8,"column_end":50},"name":"_schemars_private_non_optional_json_schema","qualname":"::JsonSchema::_schemars_private_non_optional_json_schema","value":"pub fn _schemars_private_non_optional_json_schema(&mut gen::SchemaGenerator)\n-> Schema","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":11497,"byte_end":11524,"line_start":372,"line_end":372,"column_start":8,"column_end":35},"name":"_schemars_private_is_option","qualname":"::JsonSchema::_schemars_private_is_option","value":"pub fn _schemars_private_is_option() -> bool","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":12552,"byte_end":12558,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":13828,"byte_end":13836,"line_start":47,"line_end":47,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":14949,"byte_end":14955,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":15185,"byte_end":15188,"line_start":93,"line_end":93,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":15319,"byte_end":15322,"line_start":100,"line_end":100,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":15445,"byte_end":15448,"line_start":107,"line_end":107,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":15617,"byte_end":15620,"line_start":117,"line_end":117,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":15737,"byte_end":15748,"line_start":124,"line_end":124,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/core.rs","byte_start":21320,"byte_end":21326,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/core.rs","byte_start":23401,"byte_end":23407,"line_start":67,"line_end":67,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/core.rs","byte_start":24436,"byte_end":24441,"line_start":97,"line_end":97,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/core.rs","byte_start":25773,"byte_end":25778,"line_start":137,"line_end":137,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/ffi.rs","byte_start":28764,"byte_end":28772,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/serdejson.rs","byte_start":39325,"byte_end":39330,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/serdejson.rs","byte_start":39601,"byte_end":39607,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/time.rs","byte_start":40083,"byte_end":40091,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/time.rs","byte_start":40728,"byte_end":40738,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":46483,"byte_end":46493,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":54309,"byte_end":54319,"line_start":304,"line_end":304,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":54660,"byte_end":54670,"line_start":320,"line_end":320,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":55052,"byte_end":55064,"line_start":340,"line_end":340,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":56214,"byte_end":56228,"line_start":380,"line_end":380,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":57273,"byte_end":57287,"line_start":417,"line_end":417,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":57684,"byte_end":57696,"line_start":433,"line_end":433,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":59161,"byte_end":59173,"line_start":485,"line_end":485,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":66019,"byte_end":66033,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":66121,"byte_end":66135,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69638,"byte_end":69653,"line_start":158,"line_end":158,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69896,"byte_end":69911,"line_start":168,"line_end":168,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70010,"byte_end":70025,"line_start":174,"line_end":174,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":79894,"byte_end":79912,"line_start":431,"line_end":431,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80164,"byte_end":80182,"line_start":438,"line_end":438,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81393,"byte_end":81394,"line_start":479,"line_end":479,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82728,"byte_end":82734,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":84381,"byte_end":84387,"line_start":76,"line_end":76,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":84484,"byte_end":84490,"line_start":82,"line_end":82,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90306,"byte_end":90318,"line_start":214,"line_end":214,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91890,"byte_end":91902,"line_start":253,"line_end":253,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104428,"byte_end":104439,"line_start":516,"line_end":516,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104558,"byte_end":104569,"line_start":522,"line_end":522,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104668,"byte_end":104679,"line_start":528,"line_end":528,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":110704,"byte_end":110722,"line_start":134,"line_end":134,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":111928,"byte_end":111945,"line_start":168,"line_end":168,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":113037,"byte_end":113053,"line_start":196,"line_end":196,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9399,"byte_end":9407,"line_start":307,"line_end":307,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":427}},{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9417,"byte_end":9420,"line_start":308,"line_end":308,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":450}},{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9430,"byte_end":9436,"line_start":309,"line_end":309,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":534}},{"kind":"Mod","span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/lib.rs","byte_start":9446,"byte_end":9451,"line_start":310,"line_end":310,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":588}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":12552,"byte_end":12558,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":13057,"byte_end":13062,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2854},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":13828,"byte_end":13836,"line_start":47,"line_end":47,"column_start":16,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1791},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":14949,"byte_end":14955,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":32963},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":15185,"byte_end":15188,"line_start":93,"line_end":93,"column_start":26,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":15319,"byte_end":15322,"line_start":100,"line_end":100,"column_start":19,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":6780},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":15445,"byte_end":15448,"line_start":107,"line_end":107,"column_start":22,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":15617,"byte_end":15620,"line_start":117,"line_end":117,"column_start":24,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":6},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/flatten.rs","byte_start":15737,"byte_end":15748,"line_start":124,"line_end":124,"column_start":16,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2290},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/core.rs","byte_start":21320,"byte_end":21326,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":2,"index":32963},"to":{"krate":0,"index":636}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/core.rs","byte_start":23401,"byte_end":23407,"line_start":67,"line_end":67,"column_start":51,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":33095},"to":{"krate":0,"index":636}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/core.rs","byte_start":24436,"byte_end":24441,"line_start":97,"line_end":97,"column_start":36,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":2,"index":31673},"to":{"krate":0,"index":636}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/core.rs","byte_start":25773,"byte_end":25778,"line_start":137,"line_end":137,"column_start":36,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":2,"index":31558},"to":{"krate":0,"index":636}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/ffi.rs","byte_start":28764,"byte_end":28772,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":2790},"to":{"krate":0,"index":636}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/serdejson.rs","byte_start":39325,"byte_end":39330,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"kind":{"Impl":{"id":67}},"from":{"krate":15,"index":2515},"to":{"krate":0,"index":636}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/serdejson.rs","byte_start":39601,"byte_end":39607,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":15,"index":2852},"to":{"krate":0,"index":636}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/time.rs","byte_start":40083,"byte_end":40091,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":2,"index":35489},"to":{"krate":0,"index":636}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/json_schema_impls/time.rs","byte_start":40728,"byte_end":40738,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"kind":{"Impl":{"id":71}},"from":{"krate":1,"index":10379},"to":{"krate":0,"index":636}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":46483,"byte_end":46493,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":323},"to":{"krate":16,"index":2017}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":54309,"byte_end":54319,"line_start":304,"line_end":304,"column_start":44,"column_end":54},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":323},"to":{"krate":16,"index":2085}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":54660,"byte_end":54670,"line_start":320,"line_end":320,"column_start":45,"column_end":55},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":323},"to":{"krate":16,"index":2109}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":55052,"byte_end":55064,"line_start":340,"line_end":340,"column_start":35,"column_end":47},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":327},"to":{"krate":16,"index":2067}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":56214,"byte_end":56228,"line_start":380,"line_end":380,"column_start":37,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":331},"to":{"krate":16,"index":2073}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":57273,"byte_end":57287,"line_start":417,"line_end":417,"column_start":43,"column_end":57},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":331},"to":{"krate":16,"index":2079}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":57684,"byte_end":57696,"line_start":433,"line_end":433,"column_start":35,"column_end":47},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":336},"to":{"krate":16,"index":2091}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/ser.rs","byte_start":59161,"byte_end":59173,"line_start":485,"line_end":485,"column_start":38,"column_end":50},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":336},"to":{"krate":16,"index":2102}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":66019,"byte_end":66033,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1431},"to":{"krate":2,"index":2827}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":66121,"byte_end":66135,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69638,"byte_end":69653,"line_start":158,"line_end":158,"column_start":16,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1443},"to":{"krate":2,"index":2470}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":69896,"byte_end":69911,"line_start":168,"line_end":168,"column_start":31,"column_end":46},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1443},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":70010,"byte_end":70025,"line_start":174,"line_end":174,"column_start":6,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":79894,"byte_end":79912,"line_start":431,"line_end":431,"column_start":18,"column_end":36},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":80164,"byte_end":80182,"line_start":438,"line_end":438,"column_start":23,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":519},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81140,"byte_end":81147,"line_start":472,"line_end":472,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":602},"to":{"krate":0,"index":529}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81150,"byte_end":81155,"line_start":472,"line_end":472,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":8898},"to":{"krate":0,"index":529}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81158,"byte_end":81166,"line_start":472,"line_end":472,"column_start":41,"column_end":49},"kind":"SuperTrait","from":{"krate":22,"index":35},"to":{"krate":0,"index":529}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81169,"byte_end":81172,"line_start":472,"line_end":472,"column_start":52,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":3512},"to":{"krate":0,"index":529}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/gen.rs","byte_start":81393,"byte_end":81394,"line_start":479,"line_end":479,"column_start":24,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":532},"to":{"krate":0,"index":529}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":82728,"byte_end":82734,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":84381,"byte_end":84387,"line_start":76,"line_end":76,"column_start":29,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":84484,"byte_end":84490,"line_start":82,"line_end":82,"column_start":21,"column_end":27},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":90306,"byte_end":90318,"line_start":214,"line_end":214,"column_start":6,"column_end":18},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":91890,"byte_end":91902,"line_start":253,"line_end":253,"column_start":23,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1682},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104428,"byte_end":104439,"line_start":516,"line_end":516,"column_start":21,"column_end":32},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2290},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104558,"byte_end":104569,"line_start":522,"line_end":522,"column_start":26,"column_end":37},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2290},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/schema.rs","byte_start":104668,"byte_end":104679,"line_start":528,"line_end":528,"column_start":20,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":110704,"byte_end":110722,"line_start":134,"line_end":134,"column_start":18,"column_end":36},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2298},"to":{"krate":0,"index":602}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":111928,"byte_end":111945,"line_start":168,"line_end":168,"column_start":18,"column_end":35},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2304},"to":{"krate":0,"index":602}},{"span":{"file_name":"/home/hussain/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.5/src/visit.rs","byte_start":113037,"byte_end":113053,"line_start":196,"line_end":196,"column_start":18,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2310},"to":{"krate":0,"index":602}}]}